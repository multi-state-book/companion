[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Models for Multi-State Survival Data",
    "section": "",
    "text": "This is the code companion website to our book published by Chapman & Hall.\nR code with output for analyses and plots presented in the book is provided. Corresponding code in SAS with no output is given. Solutions to the exercises are available at the end of each chapter.\nPlease note:\nA chapter with errata is also provided."
  },
  {
    "objectID": "index.html#acknowledgements",
    "href": "index.html#acknowledgements",
    "title": "Models for Multi-State Survival Data",
    "section": "Acknowledgements",
    "text": "Acknowledgements\nSincerely thanks to Julie K. Furberg who created figures and validated analyses quoted in the book. Thanks to Eva N.S. Wandall who created solutions to practical exercises and contributed to some of the examples.\nA special thank you goes to those who have provided data: Peter Aaby, Jules Angst, Flemming Bendtsen, John P. Klein, Bjørn S. Larsen, Thorkild I.A. Sørensen, Niels Tygstrup, and Tine Westergaard. Permission to present analyses of LEADER data was given by Novo Nordisk A/S."
  },
  {
    "objectID": "Ch1.html#pbc3-trial-in-liver-cirrhosis",
    "href": "Ch1.html#pbc3-trial-in-liver-cirrhosis",
    "title": "1  Introduction and data sets",
    "section": "1.1 PBC3 trial in liver cirrhosis",
    "text": "1.1 PBC3 trial in liver cirrhosis\nDownload pbc3.csv\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\npatient id\n\n\nunit\nhospital\n\n\ndays\nfollow-up time in days\n\n\nstatus\n0 = censoring, 1 = transplantation, 2 = death without transplantation\n\n\ntment\nrandomized treatment: 0 = placebo, 1 = CyA\n\n\nsex\n0 = female, 1 = male\n\n\nage\nage in years\n\n\nbili\nbilirubin (micromoles/L)\n\n\nalb\nalbumin (g/L)\n\n\nstage\ndisease stage: 2 = I-II, 3 = III, 4 = IV\n\n\n\n\nRead data and in-text summary\n\nRSAS\n\n\n\n\nCode show/hide\npbc3 <- read.csv(\"data/pbc3.csv\")\npbc3$fail <- ifelse(pbc3$status != 0, 1, 0) # event/failure indicator\npbc3$tment_char <- ifelse(pbc3$tment == 0, \"Placebo\", \"CyA\")\naddmargins(table(pbc3$status,pbc3$tment_char))\n\n\n     \n      CyA Placebo Sum\n  0   132     127 259\n  1    14      15  29\n  2    30      31  61\n  Sum 176     173 349\n\n\n\n\n\n\nCode show/hide\nproc import out=pbc3\n    datafile=\"data/pbc3.csv\"\n    dbms=csv replace;\nrun;\nproc freq data=pbc3;\n  table status*tment;\nrun;"
  },
  {
    "objectID": "Ch1.html#guinea-bissau-childhood-vaccination-study",
    "href": "Ch1.html#guinea-bissau-childhood-vaccination-study",
    "title": "1  Introduction and data sets",
    "section": "1.2 Guinea-Bissau childhood vaccination study",
    "text": "1.2 Guinea-Bissau childhood vaccination study\nDownload bissau.csv\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\nchild id\n\n\ncluster\ncluster id\n\n\nfuptime\nfollow-up time (days)\n\n\ndead\n0 = alive, 1 = dead\n\n\nbcg\nbcg vaccination status at initial visit: 0 = no, 1 = yes\n\n\ndtp\nno of dtp vaccinations at initial visit\n\n\nsex\n0 = female, 1 = male\n\n\nage\nage in days at initial visit\n\n\n\n\nRead data and Table 1.1\n\nRSAS\n\n\n\n\nCode show/hide\nbissau <- read.csv(\"data/bissau.csv\")\nbissau$vaccine <- 1*(bissau$bcg==1 | bissau$dtp>0)\n# Table 1.1\n\naddmargins(table(bissau$vaccine,bissau$dead))\n\n\n     \n         0    1  Sum\n  0   1847   95 1942\n  1   3205  127 3332\n  Sum 5052  222 5274\n\n\nCode show/hide\nwith(bissau, table(vaccine, dead)) / rowSums(with(bissau, table(vaccine, dead)))\n\n\n       dead\nvaccine          0          1\n      0 0.95108136 0.04891864\n      1 0.96188475 0.03811525\n\n\nor\n\n\nCode show/hide\nlibrary(procs)\nproc_freq(bissau, tables = vaccine*dead, output = report)\n\n\n     CAT Statistic          0          1      Total\n1      0 Frequency 1847.00000  95.000000 1942.00000\n2      0   Percent   35.02086   1.801289   36.82215\n3      0   Row Pct   95.10814   4.891864         NA\n4      0   Col Pct   36.55978  42.792793         NA\n5      1 Frequency 3205.00000 127.000000 3332.00000\n6      1   Percent   60.76981   2.408039   63.17785\n7      1   Row Pct   96.18848   3.811525         NA\n8      1   Col Pct   63.44022  57.207207         NA\n9  Total Frequency 5052.00000 222.000000 5274.00000\n10 Total   Percent   95.79067   4.209329  100.00000\n\n\n\n\n\n\nCode show/hide\nproc import out=bissau\n    datafile=\"data/bissau.csv\"\n    dbms=csv replace;\nrun;\ndata bissau; \n    set bissau; \n    vaccine= bcg=1 or dtp>0; \nrun;\nproc freq data=bissau; \n    table vaccine*dead;\nrun;"
  },
  {
    "objectID": "Ch1.html#testis-cancer-incidence-and-maternal-parity",
    "href": "Ch1.html#testis-cancer-incidence-and-maternal-parity",
    "title": "1  Introduction and data sets",
    "section": "1.3 Testis cancer incidence and maternal parity",
    "text": "1.3 Testis cancer incidence and maternal parity\nDownload testis.csv\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nage\nage of son\n\n\n\n0 = 0-14 years\n\n\n\n15 = 15-19 years\n\n\n\n20 = 20-24 years\n\n\n\n25 = 25-29 years\n\n\n\n30 = 30+ years\n\n\npyrs\nperson years at risk\n\n\ncases\nnumber of testis cancer cases\n\n\nsemi\nnumber of seminoma cases\n\n\nnonsemi\nnumber of non-seminoma cases\n\n\nparity\nparity of mother at birth of son\n\n\ncohort\nson cohort (year of birth)\n\n\n\n1950 = 1950-1957\n\n\n\n1958 = 1958-1962\n\n\n\n1963 = 1963-1967\n\n\n\n1968 = 1968-1972\n\n\n\n1973 = 1973-1992\n\n\nmotherage\nmother’s age at birth of son\n\n\n\n12 = 12-19\n\n\n\n20 = 20-24\n\n\n\n25 = 25-29\n\n\n\n30 = 30+\n\n\n\n\nRead data and in-text summary\n\nRSAS\n\n\n\n\nCode show/hide\ntestis <- read.csv(\"data/testis.csv\")\n# Add extra variables\ntestis$lpyrs <- log(testis$pyrs)\ntestis$par2 <- as.numeric(testis$parity < 2)\n\nlibrary(procs)\nproc_means(testis, var = v(pyrs, cases, semi, nonsemi) , stats=v(sum), class=par2)\n\n\n   CLASS TYPE FREQ     VAR      SUM\n1   <NA>    0  237    pyrs 15981967\n2   <NA>    0  237   cases      626\n3   <NA>    0  237    semi      183\n4   <NA>    0  237 nonsemi      443\n5      0    1  176    pyrs  8009691\n6      0    1  176   cases      228\n7      0    1  176    semi       62\n8      0    1  176 nonsemi      166\n9      1    1   61    pyrs  7972276\n10     1    1   61   cases      398\n11     1    1   61    semi      121\n12     1    1   61 nonsemi      277\n\n\n\n\n\n\nCode show/hide\nproc import out=testis\n    datafile=\"data/testis.csv\"\n    dbms=csv replace;\nrun;\ndata testis; \n  set testis; \n  par2 = (parity>=2); \nrun;\nproc means data=testis sum;\n  var pyrs cases semi nonsemi;\nrun;\nproc means data=testis sum;\n  class par2;\n  var cases pyrs;\nrun;"
  },
  {
    "objectID": "Ch1.html#prova-trial-in-liver-cirrhosis",
    "href": "Ch1.html#prova-trial-in-liver-cirrhosis",
    "title": "1  Introduction and data sets",
    "section": "1.4 PROVA trial in liver cirrhosis",
    "text": "1.4 PROVA trial in liver cirrhosis\nDownload prova.csv\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\npatient id\n\n\ntimedeath\nfollowup time (days)\n\n\ndeath\n0 = alive, 1 = dead\n\n\ntimebleed\ntime to bleeding (days); missing if bleed = 0\n\n\nbleed\n0 = no bleeding, 1 = bleeding\n\n\nbeta\n0 = no propranolol, 1 = propranolol\n\n\nscle\n0 = no sclerotherapy, 1 = sclerotherapy\n\n\nsex\n0 = female, 1 = male\n\n\nage\nage (years)\n\n\nbili\nbilirubin (micromoles/L)\n\n\ncoag\ncoagulation factors (% of normal)\n\n\nvarsize\nvariceal size: 1 = small, 2 = medium, 3 = large\n\n\n\n\nRead data and Table 1.2\n\nRSAS\n\n\n\n\nCode show/hide\nprova <- read.csv(\"data/prova.csv\", na.strings = c(\".\"))\n# Treatment 2x2 factorial\nprova$beh <- with(prova, as.factor(scle + beta*2))\n# 0 = none\n# 1 = sclerotherapy only\n# 2 = propranolol only\n# 3 = both\nwith(prova, table(beh))\n\n\nbeh\n 0  1  2  3 \n72 73 68 73 \n\n\nCode show/hide\n# Bleeding\nwith(prova, table(beh, bleed))\n\n\n   bleed\nbeh  0  1\n  0 59 13\n  1 60 13\n  2 56 12\n  3 61 12\n\n\nCode show/hide\n# Death\nwith(prova, table(beh, death))\n\n\n   death\nbeh  0  1\n  0 56 16\n  1 55 18\n  2 57 11\n  3 43 30\n\n\nCode show/hide\n# Death w/o bleed\nwith(subset(prova, bleed == 0), table(beh, death))\n\n\n   death\nbeh  0  1\n  0 51  8\n  1 47 13\n  2 51  5\n  3 41 20\n\n\nCode show/hide\n# Death after bleed\nwith(subset(prova, bleed == 1), table(beh, death))\n\n\n   death\nbeh  0  1\n  0  5  8\n  1  8  5\n  2  6  6\n  3  2 10\n\n\n\n\n\n\nCode show/hide\nproc import out=prova\n    datafile=\"data/prova.csv\"\n    dbms=csv replace;\nrun;\ndata prova; \n    set prova; \n    beh = scle + beta*2; \nrun; \n/*\n0 = none\n1 = sclerotherapy only\n2 = propranolol only\n3 = both\n*/\nproc freq data=prova; \n    table beh beh*bleed beh*death bleed*beh*death; \nrun;"
  },
  {
    "objectID": "Ch1.html#recurrent-episodes-in-affective-disorders",
    "href": "Ch1.html#recurrent-episodes-in-affective-disorders",
    "title": "1  Introduction and data sets",
    "section": "1.5 Recurrent episodes in affective disorders",
    "text": "1.5 Recurrent episodes in affective disorders\nDownload affective.csv\nNote, that all patients start in state 1 (in hospital).\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\npatient id\n\n\nepisode\nnumber of affective episodes\n\n\nstate\nStatus at time start:\n\n\n\n0 = no current affective episode, 1 = current affective episode\n\n\nstart\nstart time in state (months)\n\n\nstop\nlast time seen in state (months)\n\n\nstatus\nstatus at time stop:\n\n\n\n0 = transition to state 0\n\n\n\n1 = transition to state 1\n\n\n\n2 = transition to death\n\n\n\n3 = censoring\n\n\nbip\n0 = unipolar, 1 = bipolar\n\n\nsex\n0 = female, 1 = male\n\n\nage\nage (years)\n\n\nyear\nyear of initial episode\n\n\n\n\nRead data and in-text summary\n\nRSAS\n\n\n\n\nCode show/hide\naffective <- read.csv(\"data/affective.csv\")\nlength(unique(affective$id))\n\n\n[1] 119\n\n\nCode show/hide\nlength(unique(affective$id[affective$bip==0]))\n\n\n[1] 98\n\n\nCode show/hide\nlength(unique(affective$id[affective$bip==1]))\n\n\n[1] 21\n\n\nCode show/hide\n# The patients starts in state 1 (at hospital)\n(sum(affective$status==1)+length(unique(affective$id)))/length(unique(affective$id))\n\n\n[1] 5.554622\n\n\nCode show/hide\ntable(affective$status)\n\n\n\n  0   1   2   3 \n626 542  78  41 \n\n\n\n\n\n\nCode show/hide\nproc import out=affective\n    datafile=\"data/affective.csv\"\n    dbms=csv replace;\nrun;\nproc sql;\n  select bip, count(distinct id) as n\n  from affective\n    group by bip;   \nquit;\nproc freq data=affective;\n  table status;\nrun;"
  },
  {
    "objectID": "Ch1.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "href": "Ch1.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "title": "1  Introduction and data sets",
    "section": "1.6 LEADER cardiovascular trial in type 2 diabetes",
    "text": "1.6 LEADER cardiovascular trial in type 2 diabetes\nData not available for download.\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\npatient id\n\n\nstart\nstart time to event (days since randomization)\n\n\nstop\nstop time (days since randomization)\n\n\nstatus\nstatus at stop:\n\n\n\n0 = censoring\n\n\n\n1 = recurrent event\n\n\n\n2 = death\n\n\ntype\ntype of recurrent event:\n\n\n\n‘recurrent_mi’ = myocardial infarction\n\n\n\n‘recurrent_comb’ = 3-point MACE\n\n\neventno\nevent number (1, 2, 3, …)\n\n\ntreat\nrandomized treatment: 0 = placebo, 1 = liraglutide\n\n\n\n\nRead data and Table 1.3\n\n\n\nAssume that the LEADER data set is loaded in data set leader.\n\nRSAS\n\n\n\n\nCode show/hide\n# One data set per recurrent endpoint type\nleader_mi <- subset(leader, type == \"recurrent_mi\")\nleader_3p <- subset(leader, type == \"recurrent_comb\")\n\n# For recurrent MI\nlength(unique(leader_mi$id)) # n randomized\n\n\n[1] 9340\n\n\nCode show/hide\nwith(subset(leader_mi,treat==1), length(unique(id))) # n for liraglutid\n\n\n[1] 4668\n\n\nCode show/hide\nwith(subset(leader_mi,treat==0), length(unique(id))) # n for placebo\n\n\n[1] 4672\n\n\nCode show/hide\nwith(subset(leader_mi, eventno==1), table(status, treat))  # >=1 event and dead/censored before 1st event\n\n\n      treat\nstatus    0    1\n     0 3960 4047\n     1  339  292\n     2  373  329\n\n\nCode show/hide\nwith(subset(leader_mi, status==1), table(treat)) # Total events\n\n\ntreat\n  0   1 \n421 359 \n\n\nCode show/hide\n# For recurrent 3p MACE\nlength(unique(leader_3p$id)) # n randomized\n\n\n[1] 9340\n\n\nCode show/hide\nwith(subset(leader_3p,treat==1), length(unique(id))) # n for liraglutid\n\n\n[1] 4668\n\n\nCode show/hide\nwith(subset(leader_3p,treat==0), length(unique(id))) # n for placebo\n\n\n[1] 4672\n\n\nCode show/hide\nwith(subset(leader_3p, eventno==1), table(status, treat))  # >=1 event and dead/censored before 1st event\n\n\n      treat\nstatus    0    1\n     0 3845 3923\n     1  694  608\n     2  133  137\n\n\nCode show/hide\nwith(subset(leader_3p, status==1), table(treat)) # Total events\n\n\ntreat\n  0   1 \n923 768 \n\n\n\n\n\n\nCode show/hide\n* Recurrent MI;\ndata leader_mi; \n    set leader; \n    where type = \"recurrent_mi\"; \nrun; \nproc sql;\n  select treat, count(distinct id) as n\n  from leader_mi\n    group by treat\n  union\n  select . as treat, count(distinct id) as total\n  from leader_mi;   \nquit;\n\n* >=1 event and dead/censored before 1st event;\nproc freq data=leader_mi; \n  where eventno=1;\n    tables status*treat; \nrun; \n* Total events;\nproc freq data=leader_mi; \n  where status=1;\n    tables treat; \nrun; \n\n* Recurrent 3p-MACE;\ndata leader_3p; \n    set leader; \n    where type = \"recurrent_comb\"; \nrun; \nproc sql;\n  select treat, count(distinct id) as n\n  from leader_3p\n    group by treat\n  union\n  select . as treat, count(distinct id) as total\n  from leader_3p;   \nquit;\n* >=1 event and dead/censored before 1st event;\nproc freq data=leader_3p; \n  where eventno=1;\n    tables status*treat; \nrun; \n* Total events;\nproc freq data=leader_3p; \n  where status=1;\n    tables treat; \nrun;"
  },
  {
    "objectID": "Ch1.html#bone-marrow-transplantation-in-acute-leukemia",
    "href": "Ch1.html#bone-marrow-transplantation-in-acute-leukemia",
    "title": "1  Introduction and data sets",
    "section": "1.7 Bone marrow transplantation in acute leukemia",
    "text": "1.7 Bone marrow transplantation in acute leukemia\nDownload bmt.csv\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\npatient id\n\n\nteam\nteam id\n\n\ntimedeath\nfollowup time (months)\n\n\ndeath\n0 = alive, 1 = dead\n\n\ntimerel\ntime to relapse (months); missing if rel = 0\n\n\nrel\n0 = no replase, 1 = relapse\n\n\ntimegvhd\ntime to GvHD (months); missing if gvhd = 0\n\n\ngvhd\n0 = no GvHD, 1 = GvHD\n\n\ntimeanc500\ntime to absolute neutrophil count (ANC) above 500 cells per \\(\\mu\\)L; missing if anc500 = 0\n\n\nanc500\n0 = ANC below 500, 1 = ANC above 500\n\n\nsex\n0 = female, 1 = male\n\n\nage\nage (years)\n\n\nall\n0 = acute myelogenous leukemia (AML)\n\n\n\n1 = acute lymphoblastic leukemia (ALL)\n\n\nbmonly\n0 = peripheral blood/bone marrow, 1 = only bone marrow\n\n\n\n\nRead data and Table 1.4\n\nRSAS\n\n\n\n\nCode show/hide\nbmt <- read.csv(\"data/bmt.csv\")\n\nwith(bmt, table(rel))\n\n\nrel\n   0    1 \n1750  259 \n\n\nCode show/hide\nwith(bmt, table(rel)) / sum(with(bmt, table(rel)))\n\n\nrel\n        0         1 \n0.8710801 0.1289199 \n\n\nCode show/hide\nwith(bmt, table(death))\n\n\ndeath\n   0    1 \n1272  737 \n\n\nCode show/hide\nwith(bmt, table(death)) / sum(with(bmt, table(death)))\n\n\ndeath\n        0         1 \n0.6331508 0.3668492 \n\n\nCode show/hide\nwith(bmt, table(rel,death))\n\n\n   death\nrel    0    1\n  0 1245  505\n  1   27  232\n\n\nCode show/hide\nwith(bmt, table(rel,death)) / rowSums(with(bmt, table(rel,death)))\n\n\n   death\nrel         0         1\n  0 0.7114286 0.2885714\n  1 0.1042471 0.8957529\n\n\nCode show/hide\nwith(bmt, table(gvhd))\n\n\ngvhd\n   0    1 \n1033  976 \n\n\nCode show/hide\nwith(bmt, table(gvhd)) / sum(with(bmt, table(gvhd)))\n\n\ngvhd\n        0         1 \n0.5141862 0.4858138 \n\n\nCode show/hide\nwith(bmt, table(gvhd, rel))\n\n\n    rel\ngvhd   0   1\n   0 865 168\n   1 885  91\n\n\nCode show/hide\nwith(bmt, table(gvhd, rel)) / rowSums(with(bmt, table(gvhd, rel)))\n\n\n    rel\ngvhd         0         1\n   0 0.8373669 0.1626331\n   1 0.9067623 0.0932377\n\n\nCode show/hide\nwith(bmt, table(gvhd, death))\n\n\n    death\ngvhd   0   1\n   0 685 348\n   1 587 389\n\n\nCode show/hide\nwith(bmt, table(gvhd, death)) / rowSums(with(bmt, table(gvhd, death)))\n\n\n    death\ngvhd         0         1\n   0 0.6631171 0.3368829\n   1 0.6014344 0.3985656\n\n\n\n\n\n\nCode show/hide\nproc import out=bmt\n    datafile=\"data/bmt.csv\"\n    dbms=csv replace;\nrun;\nproc freq data=bmt; \n    table rel death rel*death gvhd gvhd*rel gvhd*death; \nrun;"
  },
  {
    "objectID": "Ch1.html#the-copenhagen-holter-study",
    "href": "Ch1.html#the-copenhagen-holter-study",
    "title": "1  Introduction and data sets",
    "section": "1.8 The Copenhagen Holter study",
    "text": "1.8 The Copenhagen Holter study\nDownload cphholter.csv\n\n\n\n\n\n\n\nVariable name\nDescription\n\n\n\n\nid\npatient id\n\n\ntimedeath\nfollowup time (days)\n\n\ndeath\n0 = alive, 1 = dead\n\n\ntimeafib\ntime to atrial fibrillation (days); missing if afib = 0\n\n\nafib\n0 = no atrial fibrillation, 1 = atrial fibrillation\n\n\ntimestroke\ntime to stroke (days); missing if stroke = 0\n\n\nstroke\n0 = no stroke, 1 = stroke\n\n\nsex\n0 = female, 1 = male\n\n\nage\nage (years)\n\n\nsmoker\ncurrent smoker: 0 = no, 1 = yes\n\n\nesvea\nexcessive supra-ventricular ectopic activity: 0 = no, 1 = yes\n\n\nchol\ncholesterol (mmol/L)\n\n\ndiabet\ndiabets mellitus: 0 = no, 1 = yes\n\n\nbmi\nbody mass index (kg/m\\(^2\\))\n\n\naspirin\naspirin use: 0 = no, 1 = yes\n\n\nprobnp\nNT-proBNP (pmol/L)\n\n\nsbp\nsystolic blood pressure (mmHg)\n\n\n\n\nRead data and Table 1.5\n\nRSAS\n\n\n\n\nCode show/hide\nholter <- read.csv(\"data/cphholter.csv\")\nwith(holter, table(esvea)) # total\n\n\nesvea\n  0   1 \n579  99 \n\n\nCode show/hide\nwith(holter, table(afib, stroke, death, esvea))\n\n\n, , death = 0, esvea = 0\n\n    stroke\nafib   0   1\n   0 320  17\n   1  29   7\n\n, , death = 1, esvea = 0\n\n    stroke\nafib   0   1\n   0 158  25\n   1  20   3\n\n, , death = 0, esvea = 1\n\n    stroke\nafib   0   1\n   0  34   1\n   1   8   1\n\n, , death = 1, esvea = 1\n\n    stroke\nafib   0   1\n   0  32  14\n   1   4   5\n\n\nCode show/hide\nwith(subset(holter, timeafib <= timestroke),\n     table(afib, stroke, death, esvea)) # 0 -> AF -> Stroke -> dead (yes/no)\n\n\n, , death = 0, esvea = 0\n\n    stroke\nafib 1\n   1 3\n\n, , death = 1, esvea = 0\n\n    stroke\nafib 1\n   1 2\n\n, , death = 0, esvea = 1\n\n    stroke\nafib 1\n   1 1\n\n, , death = 1, esvea = 1\n\n    stroke\nafib 1\n   1 3\n\n\nCode show/hide\nwith(subset(holter, timestroke < timeafib), \n     table(afib, stroke, death, esvea)) # 0 -> Stroke -> AF -> dead (yes/no)\n\n\n, , death = 0, esvea = 0\n\n    stroke\nafib 1\n   1 4\n\n, , death = 1, esvea = 0\n\n    stroke\nafib 1\n   1 1\n\n, , death = 0, esvea = 1\n\n    stroke\nafib 1\n   1 0\n\n, , death = 1, esvea = 1\n\n    stroke\nafib 1\n   1 2\n\n\n\n\n\n\nCode show/hide\nproc import \n  datafile=\"data/cphholter.csv\"\n    out=holter\n    dbms = csv\n    replace;\nrun;\n\n*--- Table 1.5 -------------------------------;\n\n    proc freq data=holter; \n  title 'Total';\n    tables esvea / nocol norow nopercent; \nrun;\n\nproc freq data=holter; \n    title '';\n    tables afib*stroke*death*esvea / nocol norow nopercent; \nrun;\n\nproc freq data=holter; \n    title '0 -> AF -> Stroke -> dead (yes/no)';\n    where .<timeafib <= timestroke; \n    tables afib*stroke*death*esvea / nocol norow nopercent; \nrun;\n\nproc freq data=holter; \n    title '0 -> Stroke -> AF -> dead (yes/no)';\n    where .<timestroke < timeafib; \n    tables afib*stroke*death*esvea / nocol norow nopercent; \nrun;"
  },
  {
    "objectID": "Ch1.html#small-set-of-survival-data",
    "href": "Ch1.html#small-set-of-survival-data",
    "title": "1  Introduction and data sets",
    "section": "1.9 Small set of survival data",
    "text": "1.9 Small set of survival data\nOnly done in R.\n\nCreate data\n\n\nCode show/hide\ntimes <- c(5,6,7,8,9,12,13,15,16,20,22,23)\nage <- c(12,0,0,10,6,6,9,3,8,0,0,2)\nevent <- c(1,0,1,1,0,0,1,1,1,0,0,1)\nid <- 1:12\nexitage <- age + times\nsimpledata <- as.data.frame(cbind(id, times, event, age, exitage))\n\n\n\n\nFigure 1.8\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# General plotting styles \n#------------------------------------------------------------------#\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"none\",\n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\ntheme_general_x <- theme_bw() +\n  theme(legend.position = \"none\",\n        text = element_text(size = 26), \n        axis.text.x = element_text(size = 26), \n        axis.text.y = element_text(size = 26)) \n\n# Create Figure 1.8, part (a)\nfig1.8a <- ggplot(aes(x = times, y = id), data = simpledata) +\n  geom_segment(aes(x = 0, y = id, xend = times - 0.25, yend = id), size = 1) +\n  geom_point(aes(x = times, y = id), data = subset(simpledata,event==0),\n             shape = 21, size = 6, color='black', fill='white') +\n  geom_point(aes(x = times, y = id), data = subset(simpledata,event==1),\n             shape = 16, size = 6) +\n  xlab(\"Time (t)\") +\n  ylab(\"Subject number\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 25)) +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0.5, 12), breaks = seq(1, 12, 1)) +\n  theme_general_x +\n  theme(panel.grid.major.y = element_blank(),\n        panel.grid.minor.y = element_blank())\n\nfig1.8a\n\n\n\n\n\nCode show/hide\n# Create Figure 1.8, part (b)\nfig1.8b <- ggplot(aes(x = exitage, y = id), data = simpledata) +\n  geom_segment(aes(x = age, y = id, xend = exitage - 0.25, yend = id), size = 1) +\n  geom_point(aes(x = exitage, y = id), data = subset(simpledata,event==0),\n             shape = 21, size = 6, color='black', fill='white') +\n  geom_point(aes(x = exitage, y = id), data = subset(simpledata,event==1),\n             shape = 16, size = 6) +\n  xlab(\"Age\") +\n  ylab(\"Subject number\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 25)) +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0.5, 12), breaks = seq(1, 12, 1)) +\n  theme_general_x + \n  theme(legend.position = \"none\",\n        panel.grid.major.y = element_blank(),\n        panel.grid.minor.y = element_blank())\n\nfig1.8b\n\n\n\n\n\n\n\nFigure 1.9\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# Figure 1.9 \n#------------------------------------------------------------------#\nlibrary(survival)\n# Kaplan-Meier time as time variable\nkmfit <- survfit(Surv(times, event) ~ 1)\nsimpledata_km <- data.frame(surv = c(1, kmfit$surv), \n                            time = c(0, kmfit$time))\n\n# Create Figure 1.9, part (a)\nfig1.9a <- ggplot(aes(x = time, y = surv), data = simpledata_km) +\n  geom_step(size = 1) +\n  xlab(\"Time (t)\") +\n  ylab(\"Estimate of S(t)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 25)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 1), breaks = seq(0, 1, 0.1)) +\n  theme_general_x\n\nfig1.9a\n\n\n\n\n\nCode show/hide\n# Kaplan-Meier age as time variable\nkmfit2 <- survfit(Surv(age, exitage, event) ~ 1)\nsimpledata_km_age <- data.frame(surv = c(1, kmfit2$surv), \n                                time = c(0, kmfit2$time))\n\n# Create Figure 1.9, part (b)\nfig1.9b <- ggplot(aes(x = time, y = surv), data = simpledata_km_age) +\n  geom_step(size = 1) +\n  xlab(\"Age\") +\n  ylab(\"Estimate of S(age)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 25)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 1), breaks = seq(0, 1, 0.1)) +\n  theme_general_x\n\nfig1.9b\n\n\n\n\n\n\n\nFigure 1.10\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# Figure 1.10 \n#------------------------------------------------------------------#\n\n# Kaplan-Meier time as time variable\nkmfit <- survfit(Surv(times, event) ~ 1)\nsimpledata_km <- data.frame(surv = c(1, kmfit$surv), \n                            time = c(0, kmfit$time))\nsubdata<-simpledata_km[simpledata_km$time<=12,]\n\n# Create Figure 1.10\nlibrary(dplyr)\nfig1.10 <- ggplot(mapping=aes(x = time, y = surv), data = simpledata_km) +\n  geom_rect(data=subdata,\n            aes(xmin = time, xmax = lead(time),\n                ymin = 0, ymax = surv),\n            linetype=0,fill=\"grey\")+\n  geom_segment(aes(x = 12, y = -Inf, xend = 12, yend = 0.733),\n               size=1,linetype=\"dashed\")+\n  geom_step(size = 1) +\n  xlab(\"Time (t)\") +\n  ylab(\"Estimate of S(t)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 25)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 1), breaks = seq(0, 1, 0.1)) +\n  theme_general +\n  annotate(geom=\"text\",x=6, y=0.45,\n           label=expression(epsilon[0](12)),size=8)\nfig1.10\n\n\n\n\n\n\n\nFigure 1.13\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# Figure 1.13 \n#------------------------------------------------------------------#\n\n# N(t)\nsfit <- survfit(Surv(times, event) ~ 1)\np1 <- data.frame(time = c(0, sfit$time, 26), \n                 n = c(0, cumsum(sfit$n.event), tail(cumsum(sfit$n.event),1)))\np2 <- data.frame(time = sfit$time[sfit$n.event==1], \n                 n = cumsum(sfit$n.event)[sfit$n.event==1]-1)\np3 <- data.frame(time = sfit$time[sfit$n.event==1], \n                 n = cumsum(sfit$n.event)[sfit$n.event==1])\n\n# Create Figure 1.13, part (a)\nfig1.13a <- ggplot(aes(x = time, y = n), data = p1) +\n  geom_step(size = 1) + \n  geom_point(aes(x = time, y = n), data = p2, shape = 21, size = 6, \n             color='black', fill='white') +\n  geom_point(aes(x = time, y = n), data = p3, shape = 16, size = 6) +\n  xlab(\"Time (t)\") +\n  ylab(\"N(t)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.005)), \n                     limits = c(0, 26)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 12), breaks = seq(0, 12, 1)) +\n  theme_general_x\n\nfig1.13a\n\n\n\n\n\nCode show/hide\n# Y(t)\nsfit <- survfit(Surv(times, event) ~ 1)\np1 <- data.frame(time = c(0, sfit$time, 26), \n                 risk = c(sfit$n.risk, 0, 0))\np2 <- data.frame(time = sfit$time, \n                 risk = sfit$n.risk - 1)\np3 <- data.frame(time = sfit$time, \n                 risk = sfit$n.risk)\n\n# Create Figure 1.13, part (b)\nfig1.13b <- ggplot(aes(x = time, y = risk), data = p1) +\n  geom_step(size = 1) + \n  geom_point(aes(x = time, y = risk), data = p2, shape = 21, size = 6, \n             color='black', fill='white') +\n  geom_point(aes(x = time, y = risk), data = p3, shape = 16, size = 6) +\n  xlab(\"Time (t)\") +\n  ylab(\"Y(t)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.005)), \n                     limits = c(0, 26)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 12), breaks = seq(0, 12, 1)) +\n  theme_general_x\n\nfig1.13b\n\n\n\n\n\nCode show/hide\n# N(age)\nasfit <- survfit(Surv(age, exitage, event) ~ 1)\np1 <- data.frame(time = c(0, asfit$time, 26), \n                 n = c(0, cumsum(asfit$n.event),tail(cumsum(asfit$n.event), 1)))\np2 <- data.frame(time = asfit$time[asfit$n.event > 0], \n                 n = cumsum(asfit$n.event)[asfit$n.event > 0])\np3 <- data.frame(time = asfit$time[asfit$n.event > 0], \n                 n = c(0, 1, 2, 4, 5, 6))\n\n# Create Figure 1.13, part (c)\nfig1.13c <- ggplot(aes(x = time, y = n), data = p1) +\n  geom_step(size = 1) + \n  geom_point(aes(x = time, y = n), data = p2, shape = 16, size = 6) +\n  geom_point(aes(x = time, y = n), data = p3, shape = 21, size = 6, \n             color='black', fill='white') +\n  xlab(\"Age\") +\n  ylab(\"N(age)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.005)), \n                     limits = c(0, 26)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 12), breaks = seq(0, 12, 1)) +\n  theme_general_x \n\nfig1.13c\n\n\n\n\n\nCode show/hide\n# Y(age)\natriskage <- vector(length=25)\nfor(i in 1:25){\n  atriskage[i] <- sum((age<=i & exitage>i))\n}\n\np1 <- data.frame(time = 0:26, \n                 risk = c(atriskage[1], atriskage, 0))\np2 <- data.frame(time = c(2,3,6,7,8,9,10,12,15,17,18,20,22,24,25), \n                 risk = c(5,6,7,6,7,8, 9,10, 9, 8, 5, 4, 2, 1,0))\np3 <- data.frame(time = c(2,3,6,7,8,9,10,12,15,17,18,20,22,24,25), \n                 risk = c(4,5,6,7,6,7, 8,9, 10, 9, 8, 5, 4, 2,1))\n\n# Create Figure 1.13, part (d)\nfig1.13d <- ggplot(aes(x = time, y = risk), data = p1) +\n  geom_step(size = 1) + \n  geom_point(aes(x = time, y = risk), data = p2, shape = 21, size = 6, \n             color='black', fill='white') +\n  geom_point(aes(x = time, y = risk), data = p3, shape = 16, size = 6) +\n  xlab(\"Age\") +\n  ylab(\"Y(age)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.005)), \n                     limits = c(0, 26)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 12), breaks = seq(0, 12, 1)) +\n  theme_general_x\n\nfig1.13d"
  },
  {
    "objectID": "Ch1.html#exercises",
    "href": "Ch1.html#exercises",
    "title": "1  Introduction and data sets",
    "section": "Exercises",
    "text": "Exercises\nThe SAS solution is available as a single file for download:\n\nExercises 1.2 (The Copenhagen Holter study)\n\n\nExercise 1.1\nConsider the small data set in Table 1.6 and argue why both the average of all (12) observation times and the average of the (7) uncensored times will likely underestimate the true mean survival time from entry into the study.\nThe average of all 12 observation times: \\[\\frac{5+6+7+8+9+12+13+15+16+20+22+23}{12} = \\frac{156}{12} = 13.00\\] will under-estimate the mean survival time because 5 of the terms in the sum, i.e., those corresponding to right-censored observations, are known to be smaller than the true survival times.\nThe average of the 7 uncensored observations: \\[\\frac{5+7+8+13+15+16+23}{7}=\\frac{87}{7} = 12.43\\] is also likely to under-estimate the mean because right-censoring will typically cause the longer survival times in the population to be incompletely observed. E.g., survival times longer than the time elapsed from the beginning of the study to its end will always be right-censored.\n\n\nExercise 1.2\n\n1.\nConsider the following records mimicking the Copenhagen Holter study (Example 1.1.8) in wide format and transform them into long format, i.e., create one data set for each of the possible six transitions in Figure 1.7.\n\nRSAS\n\n\nData can (partly) be converted to long format using the msprep function from the mstate package. However, we must first add indicators of whether the subjects transitioned to AF, stroke and death during the study. Furthermore, we have to fill in timeafib, timestroke and timedeath for all subjects, such that they correspond to the last time where transitions to the states AF, stroke and death are possible. Lastly, we need to specify a transition matrix.\n\n\nCode show/hide\nlibrary(tidyverse)\nlibrary(survival)\nlibrary(mstate)\n\n\n\n\nCode show/hide\n# The table from the exercise\nid <- factor(1:8)\ntimeafib <- c(NA, 10, NA, 15, NA, 30, NA, 25)\ntimestroke <- c(NA, NA, 20, 30, NA, NA, 35, 50)\ntimedeath <- c(NA, NA, NA, NA, 70, 75, 95, 65)\nlastobs <- c(100, 90, 80, 85, 70, 75, 95, 65)\ncbind(id, timeafib, timestroke, timedeath, lastobs)\n\n\n     id timeafib timestroke timedeath lastobs\n[1,]  1       NA         NA        NA     100\n[2,]  2       10         NA        NA      90\n[3,]  3       NA         20        NA      80\n[4,]  4       15         30        NA      85\n[5,]  5       NA         NA        70      70\n[6,]  6       30         NA        75      75\n[7,]  7       NA         35        95      95\n[8,]  8       25         50        65      65\n\n\nCode show/hide\n# Creating status indicators\nafib <- ifelse(is.na(timeafib), 0, 1)\nstroke <- ifelse(is.na(timestroke), 0, 1)\ndeath <- ifelse(is.na(timedeath), 0, 1)\n\n# Last time point at risk for a transition to each state\ntimedeath <- lastobs\ntimestroke <- ifelse(is.na(timestroke), timedeath, timestroke)\ntimeafib <- ifelse(is.na(timeafib), timestroke, timeafib)\nwide_data <- as.data.frame(cbind(id, timeafib, timestroke, \n                                 timedeath, afib, stroke, death))\n\n# Creating the transition matrix without the Stroke to AF transition\ntmat <- matrix(NA,4,4)\ntmat[1, 2:4] <- 1:3\ntmat[2, 3:4] <- 4:5\ntmat[3, 4] <- 6\ndimnames(tmat) <- list(from = c(\"No event\", \"AF\", \"Stroke\", \"Death\"), \n                       to = c(\"No event\", \"AF\", \"Stroke\", \"Death\"))\ntmat\n\n\n          to\nfrom       No event AF Stroke Death\n  No event       NA  1      2     3\n  AF             NA NA      4     5\n  Stroke         NA NA     NA     6\n  Death          NA NA     NA    NA\n\n\nCode show/hide\n# Using msprep to create data in long format\nlong_data <- msprep(time = c(NA, \"timeafib\", \"timestroke\", \"timedeath\"),\n                    status = c(NA, \"afib\", \"stroke\", \"death\"),\n                    trans = tmat, data = wide_data) \n\n# Now, the Stroke to AF transition is added manually\n\nstroketoaf<-subset(wide_data,stroke==1)\n\nstroketoaf$from <- 3\nstroketoaf$to <- 2\nstroketoaf$trans <- 7\nstroketoaf$Tstart <- stroketoaf$timestroke\nstroketoaf$Tstop <- ifelse(stroketoaf$timeafib>stroketoaf$timestroke,timeafib,timedeath)\nstroketoaf$status <- ifelse(stroketoaf$timeafib>stroketoaf$timestroke,1,0)\nstroketoaf$time <- stroketoaf$Tstop - stroketoaf$Tstart\nstroketoaf_long <- subset(stroketoaf, select = c(id,from,to,trans,Tstart,Tstop,time,status)) \n\n# and added to the data set created my msprep\n\nfinaldata <- rbind(long_data,stroketoaf_long)\nhead(finaldata)\n\n\nAn object of class 'msdata'\n\nData:\n  id from to trans Tstart Tstop time status\n1  1    1  2     1      0   100  100      0\n2  1    1  3     2      0   100  100      0\n3  1    1  4     3      0   100  100      0\n4  2    1  2     1      0    10   10      1\n5  2    1  3     2      0    10   10      0\n6  2    1  4     3      0    10   10      0\n\n\n\n\nCreate the data.\n\n\nCode show/hide\ndata wide_data;\ninput id timeafib timestroke timedeath lastobs;\ndatalines;\n1 . . . 100\n2 10 . . 90\n3 . 20 . 80\n4 15 30 . 85\n5 . . 70 70\n6 30 . 75 75 \n7 . 35 95 95\n8 25 50 65 65\n;\n\n\nTo convert the data into long format we must first add indicators of whether the subjects transited to AF, stroke and death during the study. Furthermore, we have to fill in timeafib, timestroke and timedeath for all subjects, such that they correspond to the last time where transitions to AF, stroke and death are possible.\nWe can now create a long format version of the data, i.e. for each subject all relevant transitions h->j correspond to one row in the data set and where trans: transition h -> j:\n\nTstart: Time of entry into h\nTstop: Time last seen in h\nStatus: Transition to j or not at time Tstop\n\nThe seven possible transitions are:\n\n0 -> AF\n0 -> Stroke\n0 -> Dead\nAF -> Stroke\nAF -> Dead\nStroke -> Dead\nStroke -> AF\n\n\n\nCode show/hide\ndata wide_data;\n    set wide_data;\n    * Introducing indicators for transitions and last time at risk in each state.;\n    if timedeath = . then do; death = 0; end; else do death = 1; end;\n    if death = 0 then timedeath = lastobs;\n    if timestroke = . then do; stroke = 0; timestroke = timedeath; end; else do; stroke = 1; end;\n    if timeafib = . then do; afib = 0; timeafib = timedeath; end; else do; afib = 1; end;\nrun;\n\nproc print data = wide_data; run;\n\ndata long_data;\n    set wide_data;\n    * Path: 0;\n    if ((afib = 0) and (stroke = 0) and (death = 0)) then do;\n    trans = 1; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> AF;\n    if ((afib = 1) and (stroke = 0) and (death = 0)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> Stroke;\n    if ((afib = 0) and (stroke = 1) and (death = 0)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> AF -> Stroke;\n    if ((afib = 1) and (stroke = 1) and (death = 0) and (timestroke >= timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timestroke; status = 1; output;\n    trans = 5; Tstart = timeafib; Tstop = timestroke; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> Stroke -> AF;\n    if ((afib = 1) and (stroke = 1) and (death = 0) and (timestroke < timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timeafib; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timeafib; status = 1; output; end;\n    * Path: 0 -> Dead;\n    if ((afib = 0) and (stroke = 0) and (death = 1)) then do;\n    trans = 1; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timedeath; status = 1; output; end;\n    * Path: 0 -> AF -> Dead;\n    if ((afib = 1) and (stroke = 0) and (death = 1)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 1; output; end;\n    * Path: 0 -> Stroke -> Death;\n    if ((afib = 0) and (stroke = 1) and (death = 1)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 1; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> AF -> Stroke -> Dead;\n    if ((afib = 1) and (stroke = 1) and (death = 1) and (timestroke >= timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timestroke; status = 1; output;\n    trans = 5; Tstart = timeafib; Tstop = timestroke; status = 0; output; \n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 1; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> Stroke -> AF -> Dead;\n    if ((afib = 1) and (stroke = 1) and (death = 1) and (timestroke < timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 1; output; \n    trans = 6; Tstart = timestroke; Tstop = timeafib; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timeafib; status = 1; output; end;\n    keep id trans Tstart Tstop status;\nrun;\n\nproc print data = long_data; run;\n\n\n\n\n\n\n\n2.\nDo the same for the entire data set.\n\nRSAS\n\n\nRead the Copenhagen Holter Study data set.\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nWe can then repeat the procedure for the full data set:\n\n\nCode show/hide\nchs_data$timestroke <- ifelse(is.na(chs_data$timestroke),\n                              chs_data$timedeath, chs_data$timestroke)\nchs_data$timeafib <- ifelse(is.na(chs_data$timeafib),\n                            chs_data$timestroke, chs_data$timeafib)\n\nchs_long <- msprep(time = c(NA, \"timeafib\", \"timestroke\", \"timedeath\"),\n                   status = c(NA, \"afib\", \"stroke\", \"death\"),\n                   trans = tmat, data = chs_data)\n\nchs_stroketoaf<-subset(chs_data,stroke==1)\n\nchs_stroketoaf$from <- 3\nchs_stroketoaf$to <- 2\nchs_stroketoaf$trans <- 7\nchs_stroketoaf$Tstart <- chs_stroketoaf$timestroke\nchs_stroketoaf$Tstop <- ifelse(chs_stroketoaf$timeafib>chs_stroketoaf$timestroke,chs_stroketoaf$timeafib,chs_stroketoaf$timedeath)\nchs_stroketoaf$status <- ifelse(chs_stroketoaf$timeafib>chs_stroketoaf$timestroke,1,0)\nchs_stroketoaf$time <- chs_stroketoaf$Tstop - chs_stroketoaf$Tstart\nchs_stroketoaf_long <- subset(chs_stroketoaf, select = c(id,from,to,trans,Tstart,Tstop,time,status)) \n\n\nchs_finaldata <- rbind(chs_long,chs_stroketoaf_long)\nhead(chs_finaldata)\n\n\nAn object of class 'msdata'\n\nData:\n  id from to trans Tstart Tstop time status\n1  1    1  2     1      0  5396 5396      0\n2  1    1  3     2      0  5396 5396      0\n3  1    1  4     3      0  5396 5396      0\n4  2    1  2     1      0  5392 5392      0\n5  2    1  3     2      0  5392 5392      0\n6  2    1  4     3      0  5392 5392      0\n\n\nNB: We get a warning because 5 subjects have two events on the same day. This will be handled if necessary for further analyses.\n\n\nWe can now repeat the procedure from above to transform the entire Copenhagen Holter Study data set into long format.\n\n\nCode show/hide\nproc import out = chs_data\n  datafile = 'data/cphholter.csv'\n  dbms= csv replace;\nrun;\n\n    data chs_long;\n    set chs_data;\n    if timestroke = . then timestroke = timedeath;\n    if timeafib = . then timeafib = timedeath;\n    * Path: 0;\n    if ((afib = 0) and (stroke = 0) and (death = 0)) then do;\n    trans = 1; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> AF;\n    if ((afib = 1) and (stroke = 0) and (death = 0)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> Stroke;\n    if ((afib = 0) and (stroke = 1) and (death = 0)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> AF -> Stroke;\n    if ((afib = 1) and (stroke = 1) and (death = 0) and (timestroke >= timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timestroke; status = 1; output;\n    trans = 5; Tstart = timeafib; Tstop = timestroke; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> Stroke -> AF;\n    if ((afib = 1) and (stroke = 1) and (death = 0) and (timestroke < timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timeafib; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timeafib; status = 1; output; end;\n    * Path: 0 -> Dead;\n    if ((afib = 0) and (stroke = 0) and (death = 1)) then do;\n    trans = 1; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timedeath; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timedeath; status = 1; output; end;\n    * Path: 0 -> AF -> Dead;\n    if ((afib = 1) and (stroke = 0) and (death = 1)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 1; output; end;\n    * Path: 0 -> Stroke -> Death;\n    if ((afib = 0) and (stroke = 1) and (death = 1)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 1; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> AF -> Stroke -> Dead;\n    if ((afib = 1) and (stroke = 1) and (death = 1) and (timestroke >= timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timeafib; status = 1; output;\n    trans = 2; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 3; Tstart = 0; Tstop = timeafib; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timestroke; status = 1; output;\n    trans = 5; Tstart = timeafib; Tstop = timestroke; status = 0; output; \n    trans = 6; Tstart = timestroke; Tstop = timedeath; status = 1; output; \n    trans = 7; Tstart = timestroke; Tstop = timedeath; status = 0; output; end;\n    * Path: 0 -> Stroke -> AF -> Dead;\n    if ((afib = 1) and (stroke = 1) and (death = 1) and (timestroke < timeafib)) then do;\n    trans = 1; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 2; Tstart = 0; Tstop = timestroke; status = 1; output;\n    trans = 3; Tstart = 0; Tstop = timestroke; status = 0; output;\n    trans = 4; Tstart = timeafib; Tstop = timedeath; status = 0; output;\n    trans = 5; Tstart = timeafib; Tstop = timedeath; status = 1; output; \n    trans = 6; Tstart = timestroke; Tstop = timeafib; status = 0; output; \n    trans = 7; Tstart = timestroke; Tstop = timeafib; status = 1; output; end;\n    keep id trans Tstart Tstop status;\nrun;\n\nproc print data = chs_long; run;\n\n\n\n\n\n\n\n\nExercise 1.3 (*)\n\n1.\nDerive Equations (1.2) and (1.3) for, respectively, the survival function in the two-state model (Figure 1.1) and the cumulative incidence function in the competing risks model (Figure 1.2).\nThe hazard function \\[\\alpha(t)=\\lim_{dt\\rightarrow 0}P(T\\leq t+dt\\mid T>t)/dt\\] equals \\[\\alpha(t)=\\frac{f(t)}{S(t)}=\\frac{-(d/dt) S(t)}{S(t)}=-(d/dt)\\log S(t)\\] where \\(f(t)\\) is the density function for \\(T\\) and, thereby, \\(S(t)=\\exp(-\\int_0^t\\alpha(u)du)\\).\nThe cause \\(h\\) cumulative incidence is the probability of failing from cause \\(h\\) during \\([0,t]\\). This is the integral of the infinitesimal probabilities of failing in \\((u,u+du)\\) for \\(0\\leq u\\leq t\\). The probability of failing in \\((u,u+du)\\) is, by definition of the cause-\\(h\\)-specific hazard, equal to \\(S(u)\\alpha_h(u)du\\) and the desired result \\[Q_h(t)=\\int_0^tS(u)\\alpha_h(u)du\\] follows.\n\n\n2.\nShow, for the Markov illness-death model (Figure 1.3), that the state occupation probability for state 1 at time \\(t\\), \\(Q_1(t)\\), is \\[\\int_0^t\\exp\\left(-\\int_0^u(\\alpha_{01}(x)+\\alpha_{02}(x))dx\\right)\\alpha_{01}(u)\\exp\\left(-\\int_u^t\\alpha_{12}(x)dx\\right)du.\\]\nThe probability \\(P_{11}(u,t)\\) of staying in state 1 from time \\(u\\) to time \\(t\\) is given by \\(\\exp(-\\int_u^t\\alpha_{12}(x)dx)\\) and combining this with the argument from the previous question, i.e., that the (infinitesimal) probability \\(\\exp(-\\int_0^u(\\alpha_{01}(x)+\\alpha_{02}(x))dx)\\alpha_{01}(u)du\\), of moving from state 0 to state 1 during \\((u, u+du)\\), the desired result is obtained by integration over \\(u\\) from 0 to \\(t\\).\n\n\n\nExercise 1.4 (*)\nArgue (intuitively) how the martingale property \\(E(M(t)\\mid {\\cal H}_{s})=M(s)\\) follows from \\(E(dM(t)\\mid {\\cal H}_{t-})=0\\) (Section 1.4.3).\nBecause \\(M(s)\\) is adapted to the history \\({\\cal H}_s\\) we get \\[E(M(t)\\mid {\\cal F}_s)-M(s)=E(M(t)-M(s)\\mid {\\cal H}_s).\\] We write the difference \\(M(t)-M(s)\\) as the sum of increments \\[=E(\\int_{(s,t]}dM(u)\\mid {\\cal H}_s)\\] and change the order of integration and expectation \\[=\\int_{(s,t]}E(dM(u)\\mid {\\cal H}_s).\\] We finally use the `principle of repeated conditioning’ to obtain the desired result of 0 \\[=\\int_{(s,t]}E(E(dM(u)\\mid {\\cal H}_{u-})\\mid {\\cal H}_s)=0.\\]"
  },
  {
    "objectID": "Ch2.html#pbc3-trial-in-liver-cirrhosis",
    "href": "Ch2.html#pbc3-trial-in-liver-cirrhosis",
    "title": "2  Intuition for intensity models",
    "section": "PBC3 trial in liver cirrhosis",
    "text": "PBC3 trial in liver cirrhosis\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\npbc3 <- read.csv(\"data/pbc3.csv\")\npbc3$fail <- ifelse(pbc3$status != 0, 1, 0) # event/failure indicator\npbc3$tment_char <- ifelse(pbc3$tment == 0, \"Placebo\", \"CyA\")\n\n# Add transformations of covariates \npbc3$albnorm <- with(pbc3, (alb-35)*(alb>35))\npbc3$alb10 <- with(pbc3, alb/10)\npbc3$alb2 <- with(pbc3, alb10*alb10)\n\npbc3$bilihigh <- with(pbc3, (bili-17.1)*(bili>17.1))\npbc3$bilitoohigh <- with(pbc3, (bili-34.2)*(bili>34.2))\npbc3$bilimuchtoohigh <- with(pbc3, (bili-51.3)*(bili>51.3))\npbc3$bili100 <- with(pbc3, bili/100)\npbc3$bili2 <- with(pbc3, bili100*bili100)\n\npbc3$log2bili <- with(pbc3, log2(bili))\npbc3$log2bili2 <- with(pbc3, log2bili*log2bili)\n\npbc3$logbilihigh <- with(pbc3, (log2bili-log2(17.1))*(bili>17.1))\npbc3$logbilitoohigh <- with(pbc3, (log2bili-log2(34.2))*(bili>34.2))\npbc3$logbilimuchtoohigh <- with(pbc3, (log2bili-log2(51.3))*(bili>51.3))\n\n\n\n\n\n\nCode show/hide\nproc import out=pbc3\n    datafile=\"data/pbc3.csv\"\n    dbms=csv replace;\nrun;\ndata pbc3; \n    set pbc3;\n    albnorm=(alb-35)*(alb>35);\n    alb10=alb/10;\n    alb2=alb*alb;\n    bilihigh=(bili-17.1)*(bili>17.1);\n    bilitoohigh=(bili-34.2)*(bili>34.2);\n    bilimuchtoohigh=(bili-51.3)*(bili>51.3);\n    bili100=bili/100;\n    bili2=bili*bili;\n    log2bili=log2(bili);\n    logbilihigh=(log2bili-log2(17.1))*(bili>17.1);\n    logbilitoohigh=(log2bili-log2(34.2))*(bili>34.2);\n    logbilimuchtoohigh=(log2bili-log2(51.3))*(bili>51.3);\n    log2bili2=log2bili*log2bili;\nrun;\n\n\n\n\n\n\n\nFigure 2.1\n\nRSAS\n\n\n\n\nCode show/hide\n# General plotting style \nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20),\n        legend.position = \"bottom\", \n        legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        legend.key.size = unit(2,\"line\"))\n\n# Nelson Aalen estimate by treatment\nlibrary(survival)\nnafit <- survfit(Surv(days, status != 0) ~ tment, data = pbc3)\n# Collect data for plot\nnadata <- data.frame(cumhaz = nafit$cumhaz, time = nafit$time, \n                     sd = nafit$std.err,\n                     tment = c(rep(names(nafit$strata)[1], nafit$strata[1]), \n                               rep(names(nafit$strata)[2], nafit$strata[2])))\n\n# Create Figure 2.1\nlibrary(ggplot2)\nfig2.1 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = tment),\n                 data = nadata) + \n  geom_step(size = 1) + \n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6), breaks = seq(0, 6, 1))  + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  theme_general \n\nfig2.1\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3; \n    model days*status(0)=;\n    strata tment;\n    baseline out=hazdat cumhaz=naa stdcumhaz=sdnaa;\nrun;\ndata hazdat; \n    set hazdat; \n    daysyears = days/365.25; \nrun; \nproc gplot data=hazdat;\n    plot naa*daysyears=tment/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none\n    label=('Years');\n    axis2 order=0 to 0.7 by 0.1 minor=none\n    label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\nIn-text, p. 37: Nelson-Aalen estimates at 2 years\n\nRSAS\n\n\n\n\nCode show/hide\ntail(subset(nadata, nadata$time <= 2*365.25 & nadata$tment == \"tment=0\"),1)\n\n\n     cumhaz time         sd   tment\n60 0.183065  724 0.03560398 tment=0\n\n\nCode show/hide\ntail(subset(nadata, nadata$time <= 2*365.25 & nadata$tment == \"tment=1\"),1)\n\n\n       cumhaz time         sd   tment\n209 0.1668539  725 0.03449431 tment=1\n\n\n\n\n\n\nCode show/hide\nproc print data=hazdat;\n    where 1.5<daysyears<=2; \nrun;\n\n\n\n\n\n\n\nIn-text, p. 38: LRT test piece-wise exponential model\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(stats)\npoisfull <- glm(fail ~ tment + timegroup + tment*timegroup +\n                  offset(log(risktime/36525)), data = pbc3mult, family=poisson)\npoisred <- glm(fail ~  timegroup +\n                 offset(log(risktime/36525)), data = pbc3mult, family=poisson)\nanova(poisred,poisfull,test=\"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: fail ~ timegroup + offset(log(risktime/36525))\nModel 2: fail ~ tment + timegroup + tment * timegroup + offset(log(risktime/36525))\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1       620     459.66                     \n2       617     459.35  3  0.30813   0.9585\n\n\nCode show/hide\n# or\nlibrary(lmtest)\nlrtest(poisred,poisfull)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + offset(log(risktime/36525))\nModel 2: fail ~ tment + timegroup + tment * timegroup + offset(log(risktime/36525))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   3 -319.83                     \n2   6 -319.68  3 0.3081     0.9585\n\n\n\n\n\n\nCode show/hide\nods output modelfit=full;\nproc genmod data=pbc3mult;\n    class interv tment;\n    model fail=interv|tment /dist=poi offset=logrisk;\nrun;\ndata full;\n  set full;\n     where Criterion=\"Deviance\";\n     full_like=value;\n     full_df=df;\n     keep full_like full_df;\nrun;\nproc print;run;\nods output modelfit=reduced;\nproc genmod data=pbc3mult;\n    class interv tment;\n    model fail=interv /dist=poi offset=logrisk;\nrun;\ndata reduced;\n  set reduced;\n     where Criterion=\"Deviance\";\n     reduced_like=value;\n     reduced_df=df;\n     keep reduced_like reduced_df;\nrun;\ndata lrt_pval;\n merge full reduced;\n  lrt = reduced_like - full_like;\n    df  = reduced_df - full_df;\n  p_value = 1 - probchi(lrt,df);\nrun;\nproc print data=lrt_pval;\n  title \"LR test statistic and p-value\";\nrun;\n\n\n\n\n\n\n\nFigure 2.2\n\nRSAS-NA\n\n\n\n\nCode show/hide\n# Rates + cuts from Table 2.1\nrateCyA <- c(8.1,13.1,9.6)\nratePbo <- c(9.4,12.5,8.5)\npcwtime <- c(0,2,4,5)\n# Collect data\nplotdata <- data.frame(rates = c(rateCyA, ratePbo),\n                       tment = c(rep(\"CyA\", length(rateCyA)), \n                                 rep(\"Placebo\", length(ratePbo))),\n                       times_s = rep(pcwtime[-4], 2),\n                       times = rep(pcwtime[-1], 2))\n\n# Create Figure 2.2\nfig2.2 <- ggplot(aes(x = time, y = rates, linetype = tment), data = plotdata) +\n  geom_segment(aes(x = times_s, y = rates, xend = times, yend = rates),size=1) +\n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\"))  +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Estimated hazard function (per 100 years)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 5),\n                     breaks = seq(0, 5, 1))  +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0,14), breaks = seq(0, 14, 2)) +\n  theme_general\n\nfig2.2\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2.1\n\nRSAS\n\n\n\n\nCode show/hide\n# Data for Table 2.1\ncuts <- c(0, 2, 4) * 365.25\n# Make the data ready using survSplit from survival package\nlibrary(survival)\npbc3mult <- as.data.frame(survSplit(Surv(days, fail) ~ ., pbc3,\n                      cut = cuts[-1], \n                      episode = \"timegroup\"))\npbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] \npbc3mult$timegroup <- as.factor(pbc3mult$timegroup)\n\nlibrary(dplyr)\npcwdata <- pbc3mult %>% \n  group_by(tment, timegroup) %>% \n  summarise(fail = sum(fail), risktime = sum(days - cuts[timegroup]))\npcwdata$risktimeyrs <- pcwdata$risktime/365.25\npcwdata$hazard <- 36525*pcwdata$fail/pcwdata$risktime\npcwdata$SD <- 36525*sqrt(pcwdata$fail)/pcwdata$risktime\ndata.frame(pcwdata)\n\n\n  tment timegroup fail risktime risktimeyrs    hazard       SD\n1     0         1   27 104856.0   287.08008  9.405041 1.810001\n2     0         2   17  49673.0   135.99726 12.500252 3.031756\n3     0         3    2   8642.0    23.66051  8.452904 5.977106\n4     1         1   24 107931.5   295.50034  8.121818 1.657859\n5     1         2   18  50284.5   137.67146 13.074605 3.081714\n6     1         3    2   7599.0    20.80493  9.613107 6.797493\n\n\n\n\n\n\nCode show/hide\n/* prepare for poisson model */\ndata pbc3mult; \n    set pbc3;\n    fail=(days<=2 * 365.25)*(status ne 0);\n    risktime=min(2 * 365.25, days);\n    logrisk=log(risktime); interv=1; output;  \n    if days>2 * 365.25 then do;\n    fail=(days<=4 * 365.25)*(status ne 0);\n    risktime=min(2 * 365.25 ,days-2 * 365.25);\n    logrisk=log(risktime); interv=2; output; end;\n    if days>4 * 365.25  then do;\n    fail=status ne 0; \n    risktime=days-4 * 365.25;\n    logrisk=log(risktime); interv=3; output; end;\nrun;\nproc means sum  data=pbc3mult;\n    class tment interv;\n    var fail risktime;\nrun;\n\nproc genmod data=pbc3mult;\n    where tment=1;\n    class interv;\n    model fail=interv/dist=poi offset=logrisk;\n    estimate '0-2 years' intercept 1  interv 1 0 0/exp;\n    estimate '2-4 years' intercept 1  interv 0 1 0/exp;\n    estimate '4-6 years' intercept 1  interv 0 0 1/exp;\nrun;\nproc genmod data=pbc3mult;\n    where tment=0;\n    class interv;\n    model fail=interv/dist=poi offset=logrisk;\n    estimate '0-2 years' intercept 1  interv 1 0 0/exp;\n    estimate '2-4 years' intercept 1  interv 0 1 0/exp;\n    estimate '4-6 years' intercept 1  interv 0 0 1/exp;\nrun;\n\n\n\n\n\n\n\nIn-text, p. 40: Logrank test and p-value\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\nlr<-survdiff(Surv(days, status != 0) ~ tment, data = pbc3)\nprint(c(lr$obs[1],lr$exp[1],lr$var[1,1],lr$chisq,lr$pvalue), d=4)\n\n\n[1] 46.00000 44.68367 22.47967  0.07708  0.78129\n\n\n\n\n\n\nCode show/hide\nproc lifetest data=pbc3 notable; \n    time days*status(0);\n    strata tment;\nrun;\n\n\n\n\n\n\n\nFigure 2.3\n\nRSAS\n\n\n\n\nCode show/hide\n# NA data from figure 2.1 model fit\ntment1 <- subset(nadata, tment == \"tment=1\")\n# Estimated hazard per time group\npcwdata$hazard_timegroup <- pcwdata$fail / pcwdata$risktime\n# Add a numeric version of the treatment to the NA estimates\nnadata$tmentnum <- ifelse(nadata$tment == \"tment=1\", 1, 0)\n# Add piecewise constant hazard to data\nnadata$pwch <- NULL\n# Between time 0 and 2\nnadata$pwch[nadata$time <= 2 * 365.25] <- nadata$time[nadata$time <= 2 * 365.25] *\n  (pcwdata$hazard_timegroup[1] * (1-nadata$tmentnum[nadata$time <= 2 * 365.25]) +\n     pcwdata$hazard_timegroup[4] * (nadata$tmentnum[nadata$time <= 2 * 365.25]))\n# Between time 2 and 4\nnadata$pwch[nadata$time > 2 * 365.25 & nadata$time <= 4* 365.25 ] <- 2 * 365.25 * \n  (pcwdata$hazard_timegroup[1] * (1-nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25]) + \n     pcwdata$hazard_timegroup[4] * (nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25])) + \n  (nadata$time[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25] - 2 * 365.25) * \n  (pcwdata$hazard_timegroup[2] * (1-nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25]) + \n     pcwdata$hazard_timegroup[5] * (nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25]))\n# After time 4\nnadata$pwch[nadata$time > 4 * 365.25] <- 2 * 365.25 * \n  (pcwdata$hazard_timegroup[1] * (1-nadata$tmentnum[nadata$time > 4 * 365.25]) + \n     pcwdata$hazard_timegroup[4] * (nadata$tmentnum[nadata$time > 4 * 365.25])) + \n   2 * 365.25 * \n  (pcwdata$hazard_timegroup[2] * (1-nadata$tmentnum[nadata$time > 4 * 365.25]) + \n     pcwdata$hazard_timegroup[5] * (nadata$tmentnum[nadata$time > 4 * 365.25])) + \n  (nadata$time[nadata$time > 4 * 365.25] - 4 * 365.25) * \n  (pcwdata$hazard_timegroup[3] * (1-nadata$tmentnum[nadata$time > 4 * 365.25]) + \n     pcwdata$hazard_timegroup[6] * (nadata$tmentnum[nadata$time > 4 * 365.25]))\n# Reformat for plot\npiecepdata <- data.frame(cumhaz = c(nadata$cumhaz, nadata$pwch), \n                         time = rep(nadata$time, 2),\n                         tmentnum = rep(nadata$tmentnum, 2),\n                         type = c(rep(\"Nelson-Aalen\", length(nadata$time)), \n                                  rep(\"Piece-wise exponential\", length(nadata$time))))\n# Only for treatment 1\npiecepdata1 <- subset(piecepdata, tmentnum == 1)\n\n# Create Figure 2.3\nfig2.3 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = type), \n                data = subset(piecepdata1, type == \"Nelson-Aalen\")) + \n  geom_step(size = 1) + \n  geom_line(aes(x = time / 365.25, y = cumhaz, linetype = type), size = 1,\n            data = subset(piecepdata1, type == \"Piece-wise exponential\")) + \n  labs(linetype = \"Type\") + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1))  + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  theme_general+\n  theme(legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        legend.key.size = unit(2,\"line\"))\n\nfig2.3\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata hazdat; \n    set hazdat;\n    if days<=2 * 365.25 then \n        pwch=days*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment);\n\n    if 2 * 365.25 <days<=4 * 365.25 then\n        pwch=2* 365.25*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)\n        +(days-2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment);\n\n    if 4 * 365.25 <days then\n        pwch=2* 365.25 *(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)\n        +(2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment)\n        +(days-4* 365.25)*(2.0000000/8642*(1-tment)+2.0000000/7599*tment);\n    daysyears = days/365.25; \nrun; \n\nproc gplot data=hazdat; where tment=1;\n    plot (naa pwch)*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 0.7 by 0.1 minor=none\n      label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl r=1 c=red;\n    symbol2 v=none i=join r=1 c=blue;\nrun;\n\n\n\n\n\n\n\nIn-text, p. 43: Cox model with treatment only\n\nRSAS\n\n\n\n\nCode show/hide\n# Fit a Cox model using the pbc3 data with treatment as a covariate\nlibrary(survival)\ncoxfit <- coxph(Surv(days, status != 0) ~ tment, data = pbc3, method = \"breslow\")\nsummary(coxfit)\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment, data = pbc3, \n    method = \"breslow\")\n\n  n= 349, number of events= 90 \n\n          coef exp(coef) se(coef)      z Pr(>|z|)\ntment -0.05854   0.94314  0.21092 -0.278    0.781\n\n      exp(coef) exp(-coef) lower .95 upper .95\ntment    0.9431       1.06    0.6238     1.426\n\nConcordance= 0.517  (se = 0.029 )\nLikelihood ratio test= 0.08  on 1 df,   p=0.8\nWald test            = 0.08  on 1 df,   p=0.8\nScore (logrank) test = 0.08  on 1 df,   p=0.8\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    model days*status(0)=tment/rl;\nrun;\n\n\n\n\n\n\n\nFigure 2.5\n\nRSAS\n\n\n\n\nCode show/hide\n# Extract cumulative baseline hazard\ncoxcumhaz <- basehaz(coxfit, centered = FALSE)\n# Collect data for plot (Breslow estimate)\ncoxdata <- data.frame(cumhaz = coxcumhaz$hazard, \n                      time = coxcumhaz$time, \n                      tment = rep(\"0\", nrow(coxcumhaz)), \n                      type = rep(\"Breslow estimate\", nrow(coxcumhaz)))\n\nfig2.5 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = tment),\n                 data = coxdata) + \n  geom_step(size = 1) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Cumulative baseline hazard\") + \n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\")) + \n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  theme_general+theme(legend.position = \"none\")\n\nfig2.5\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata cov;\n    tment=0;\nrun;\nproc phreg data=pbc3;\n    model days*status(0)=tment/rl;\n    baseline out=breslow cumhaz=breslow covariates=cov;\nrun;\ndata breslow; \n    set breslow; \n    daysyears = days/365.25; \nrun; \nproc gplot data=breslow;\n    plot breslow*daysyears=tment/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 0.7 by 0.1 minor=none label=(a=90 'Cumulative baseline hazard');\n    symbol1  v=none i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\nTable 2.3\n\nRSAS\n\n\n\n\nCode show/hide\n# Average covariate values of albumin and bilirubin per treatment \nlibrary(dplyr)\ntabledata <- pbc3 %>% \n  group_by(tment, tment_char) %>% \n  summarise(n = sum(id != 0),  \n            average_albumin = mean(alb, na.rm = TRUE), \n            # NOTE: Removes missing observations from mean computation\n            average_bilirubin = mean(bili, na.rm = TRUE), \n            )\ndata.frame(tabledata)\n\n\n  tment tment_char   n average_albumin average_bilirubin\n1     0    Placebo 173        39.26101          42.33674\n2     1        CyA 176        37.50731          48.55540\n\n\n\n\n\n\nCode show/hide\nproc means data=pbc3 mean;\n  class tment;\n    var alb bili;\nrun;\n\n\n\n\n\n\n\nTable 2.4\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model with treatment, albumin and bilirubin as covariates \nlibrary(survival)\ncoxfit <- coxph(Surv(days, status != 0) ~ tment + alb + bili,\n                data = pbc3)\ncoxfit\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + bili, \n    data = pbc3)\n\n            coef  exp(coef)   se(coef)      z        p\ntment -0.4965639  0.6086184  0.2256162 -2.201   0.0277\nalb   -0.1156596  0.8907784  0.0212810 -5.435 5.48e-08\nbili   0.0089494  1.0089895  0.0009801  9.131  < 2e-16\n\nLikelihood ratio test=99.06  on 3 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    model days*status(0)=tment alb bili / rl;\nrun;\n\n\n\n\n\n\n\nIn-text, p. 45: Poisson model with treatment\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(stats)\nlibrary(jtools) # For using summ() function to get exp(beta)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\npoism <- glm(fail ~ -1 +tment + timegroup +\n               offset(log(risktime/365.25)), data = pbc3mult,family = poisson)\nsumm(poism, exp = T,digits = 3, model.info = F, model.fit = F)\n\n\n\n\n\n\n\n\n\nexp(Est.)\n\n\n2.5%\n\n\n97.5%\n\n\nz val.\n\n\np\n\n\n\n\n\n\ntment\n\n\n0.942\n\n\n0.623\n\n\n1.424\n\n\n-0.284\n\n\n0.776\n\n\n\n\ntimegroup1\n\n\n0.090\n\n\n0.064\n\n\n0.127\n\n\n-13.801\n\n\n0.000\n\n\n\n\ntimegroup2\n\n\n0.132\n\n\n0.089\n\n\n0.194\n\n\n-10.242\n\n\n0.000\n\n\n\n\ntimegroup3\n\n\n0.092\n\n\n0.034\n\n\n0.251\n\n\n-4.677\n\n\n0.000\n\n\n\n\n\n\n Standard errors: MLE\n\n\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc genmod data=pbc3mult;\n  class tment(ref=\"0\") interv ;\n  model fail = tment interv / dist=poi offset=logrisk;\n    estimate 'CyA  vs placebo' tment 1 -1 / exp;\n  estimate '0-2 years' intercept 1 tment 0 1 interv 1 0 0 / exp;\n  estimate '2-4 years' intercept 1 tment 0 1 interv 0 1 0 / exp;\n  estimate '4+ years'  intercept 1 tment 0 1 interv 0 0 1 / exp;\nrun;\n\n\n\n\n\n\n\nTable 2.5\n\nRSAS\n\n\n\n\nCode show/hide\n# Poisson model with treatment, albumin and bilirubin as covariates\npoismod_t25 <- glm(fail ~ tment + alb + bili+ timegroup-1 +\n                     offset(log(risktime/365.25)),data=pbc3mult,family=poisson)\nsummary(poismod_t25)\n\n\n\nCall:\nglm(formula = fail ~ tment + alb + bili + timegroup - 1 + offset(log(risktime/365.25)), \n    family = poisson, data = pbc3mult)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \ntment      -0.4753406  0.2240970  -2.121  0.03391 *  \nalb        -0.1123359  0.0212829  -5.278  1.3e-07 ***\nbili        0.0084593  0.0009392   9.007  < 2e-16 ***\ntimegroup1  1.2879891  0.8058179   1.598  0.10996    \ntimegroup2  2.1457404  0.8328628   2.576  0.00999 ** \ntimegroup3  1.6076330  1.0120683   1.588  0.11218    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1637.87  on 611  degrees of freedom\nResidual deviance:  350.73  on 605  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 538.73\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\n\n\nCode show/hide\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= tment interv alb  bili / dist=poi offset=logrisk ;\nrun;\n\n\n\n\n\n\n\nTable 2.6\n\nRSAS\n\n\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# Table 2.6 Cox models \n#------------------------------------------------------------------#\n\n# Models for LR tests\nlibrary(lmtest)\nbase_coxmod <- coxph(Surv(days, status != 0) ~ tment + alb + bili, \n                     eps = 1e-8, method = \"breslow\", data = pbc3)\nbase_coxmod_log <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,\n                         eps = 1e-8, method = \"breslow\", data = pbc3)\n\n# Splines Cox 1\ncoxmod_t26_l1 <- coxph(Surv(days, status != 0) ~ tment + alb + albnorm + bili,\n                       eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t26_l1\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + albnorm + \n    bili, data = pbc3, method = \"breslow\", eps = 1e-08)\n\n              coef  exp(coef)   se(coef)      z      p\ntment   -0.4750722  0.6218402  0.2261462 -2.101 0.0357\nalb     -0.0854244  0.9181225  0.0453150 -1.885 0.0594\nalbnorm -0.0557001  0.9458228  0.0726447 -0.767 0.4432\nbili     0.0089810  1.0090214  0.0009843  9.124 <2e-16\n\nLikelihood ratio test=99.66  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t26_l1, base_coxmod)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + albnorm + bili\nModel 2: Surv(days, status != 0) ~ tment + alb + bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   4 -413.12                     \n2   3 -413.42 -1 0.6001     0.4386\n\n\nCode show/hide\n# Quadratic Cox 1\ncoxmod_t26_q1 <- coxph(Surv(days, status != 0) ~ tment + alb + I(alb*alb) + bili,\n                       eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t26_q1\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + I(alb * \n    alb) + bili, data = pbc3, method = \"breslow\", eps = 1e-08)\n\n                   coef  exp(coef)   se(coef)      z      p\ntment        -0.4983093  0.6075570  0.2274284 -2.191 0.0284\nalb          -0.1295361  0.8785029  0.2130539 -0.608 0.5432\nI(alb * alb)  0.0001944  1.0001945  0.0029754  0.065 0.9479\nbili          0.0089499  1.0089901  0.0009801  9.132 <2e-16\n\nLikelihood ratio test=99.07  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t26_q1, base_coxmod)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + I(alb * alb) + bili\nModel 2: Surv(days, status != 0) ~ tment + alb + bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   4 -413.41                     \n2   3 -413.42 -1 0.0042      0.948\n\n\nCode show/hide\n# Splines Cox 2\ncoxmod_t26_l2 <- coxph(Surv(days, status != 0) ~ tment + alb + \n                         bili + bilihigh + bilitoohigh + bilimuchtoohigh,\n                       eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t26_l2\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + bili + \n    bilihigh + bilitoohigh + bilimuchtoohigh, data = pbc3, method = \"breslow\", \n    eps = 1e-08)\n\n                     coef exp(coef)  se(coef)      z        p\ntment           -0.598494  0.549639  0.229637 -2.606  0.00915\nalb             -0.090970  0.913045  0.021894 -4.155 3.25e-05\nbili             0.062425  1.064414  0.062296  1.002  0.31631\nbilihigh        -0.014631  0.985476  0.085327 -0.171  0.86386\nbilitoohigh     -0.002584  0.997419  0.052961 -0.049  0.96109\nbilimuchtoohigh -0.040017  0.960773  0.026486 -1.511  0.13082\n\nLikelihood ratio test=123.5  on 6 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t26_l2, base_coxmod)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + bili + bilihigh + bilitoohigh + \n    bilimuchtoohigh\nModel 2: Surv(days, status != 0) ~ tment + alb + bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   6 -401.22                         \n2   3 -413.42 -3 24.396  2.064e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# Quadratic Cox 2\ncoxmod_t26_q2 <- coxph(Surv(days, status != 0) ~ tment+alb+bili + I(bili*bili),\n                       eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t26_q2\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + bili + \n    I(bili * bili), data = pbc3, method = \"breslow\", eps = 1e-08)\n\n                     coef  exp(coef)   se(coef)      z        p\ntment          -5.210e-01  5.939e-01  2.233e-01 -2.333 0.019640\nalb            -1.019e-01  9.031e-01  2.168e-02 -4.703 2.56e-06\nbili            1.998e-02  1.020e+00  3.263e-03  6.122 9.21e-10\nI(bili * bili) -3.051e-05  1.000e+00  9.098e-06 -3.354 0.000798\n\nLikelihood ratio test=111.4  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t26_q2, base_coxmod)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + bili + I(bili * bili)\nModel 2: Surv(days, status != 0) ~ tment + alb + bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   4 -407.24                         \n2   3 -413.42 -1 12.351  0.0004408 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# Splines Cox 3\ncoxmod_t26_l3 <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili +\n                         logbilihigh + logbilitoohigh + logbilimuchtoohigh,\n                       eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t26_l3\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + log2bili + \n    logbilihigh + logbilitoohigh + logbilimuchtoohigh, data = pbc3, \n    method = \"breslow\", eps = 1e-08)\n\n                       coef exp(coef) se(coef)      z        p\ntment              -0.58019   0.55979  0.22957 -2.527   0.0115\nalb                -0.08852   0.91528  0.02182 -4.056 4.99e-05\nlog2bili            0.20135   1.22306  0.46511  0.433   0.6651\nlogbilihigh         0.93567   2.54893  0.91503  1.023   0.3065\nlogbilitoohigh     -0.38647   0.67945  1.29333 -0.299   0.7651\nlogbilimuchtoohigh -0.18140   0.83410  0.98801 -0.184   0.8543\n\nLikelihood ratio test=121.6  on 6 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t26_l3, base_coxmod_log)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + log2bili + logbilihigh + \n    logbilitoohigh + logbilimuchtoohigh\nModel 2: Surv(days, status != 0) ~ tment + alb + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   6 -402.13                     \n2   3 -402.94 -3 1.6144     0.6561\n\n\nCode show/hide\n# Quadratic Cox 3\ncoxmod_t26_q3 <- coxph(Surv(days, status != 0) ~ tment+alb+log2bili + log2bili2,\n                       eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t26_q3\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + log2bili + \n    log2bili2, data = pbc3, method = \"breslow\", eps = 1e-08)\n\n              coef exp(coef) se(coef)      z        p\ntment     -0.57408   0.56323  0.22454 -2.557   0.0106\nalb       -0.09150   0.91256  0.02192 -4.175 2.98e-05\nlog2bili   0.58231   1.79017  0.49992  1.165   0.2441\nlog2bili2  0.00715   1.00717  0.04277  0.167   0.8672\n\nLikelihood ratio test=120  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t26_q3, base_coxmod_log)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + log2bili + log2bili2\nModel 2: Surv(days, status != 0) ~ tment + alb + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   4 -402.93                     \n2   3 -402.94 -1 0.0277     0.8677\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# Table 2.6 Poisson models \n#------------------------------------------------------------------#\n\n# Make the data ready for Poisson models using survSplit from survival package\nlibrary(survival)\npbc3mult <- as.data.frame(survSplit(Surv(days, fail) ~ ., pbc3,\n                                    cut = cuts[-1], \n                                    episode = \"timegroup\"))\npbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] \npbc3mult$timegroup <- as.factor(pbc3mult$timegroup)\n\n# Models for LR test\nbase_poismod <- glm(fail ~ timegroup + tment + alb + bili +\n                      offset(log(risktime)), data = pbc3mult, family = poisson)\nbase_poismod_log <- glm(fail ~ timegroup + tment + alb + log2bili +\n                          offset(log(risktime)), data=pbc3mult,family=poisson)\n\n# Splines Poisson 1\npoismod_t26_l1 <- glm(fail ~ timegroup + tment + alb + albnorm + bili +\n                        offset(log(risktime)), data=pbc3mult, family=poisson)\nsummary(poismod_t26_l1)\n\n\n\nCall:\nglm(formula = fail ~ timegroup + tment + alb + albnorm + bili + \n    offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n              Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -5.1177409  1.6273358  -3.145  0.00166 ** \ntimegroup1  -0.3106216  0.6042733  -0.514  0.60722    \ntimegroup2   0.5433694  0.6022062   0.902  0.36690    \ntment       -0.4576984  0.2247281  -2.037  0.04168 *  \nalb         -0.0864388  0.0451742  -1.913  0.05569 .  \nalbnorm     -0.0473832  0.0720301  -0.658  0.51065    \nbili         0.0084777  0.0009419   9.001  < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 350.28  on 604  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 540.28\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t26_l1, base_poismod)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + albnorm + bili + offset(log(risktime))\nModel 2: fail ~ timegroup + tment + alb + bili + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   7 -263.14                     \n2   6 -263.36 -1 0.4404     0.5069\n\n\nCode show/hide\n# Quadratic Poisson 1\npoismod_t26_q1 <- glm(fail ~ timegroup + tment + alb + I(alb*alb) + bili +\n                        offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t26_q1)\n\n\n\nCall:\nglm(formula = fail ~ timegroup + tment + alb + I(alb * alb) + \n    bili + offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n               Estimate Std. Error z value Pr(>|z|)    \n(Intercept)  -3.8279840  3.8141837  -1.004   0.3156    \ntimegroup1   -0.3227765  0.6048377  -0.534   0.5936    \ntimegroup2    0.5362133  0.6024251   0.890   0.3734    \ntment        -0.4786804  0.2258499  -2.119   0.0341 *  \nalb          -0.1387716  0.2101463  -0.660   0.5090    \nI(alb * alb)  0.0003705  0.0029295   0.126   0.8993    \nbili          0.0084614  0.0009391   9.010   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 350.71  on 604  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 540.71\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t26_q1, base_poismod)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + I(alb * alb) + bili + offset(log(risktime))\nModel 2: fail ~ timegroup + tment + alb + bili + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   7 -263.36                     \n2   6 -263.36 -1 0.0158     0.8999\n\n\nCode show/hide\n# Splines Poisson 2\npoismod_t26_l2 <- glm(fail ~ timegroup + tment + alb + \n                        bili + bilihigh + bilitoohigh + bilimuchtoohigh +\n                        offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t26_l2)\n\n\n\nCall:\nglm(formula = fail ~ timegroup + tment + alb + bili + bilihigh + \n    bilitoohigh + bilimuchtoohigh + offset(log(risktime)), family = poisson, \n    data = pbc3mult)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)     -6.453990   1.368380  -4.717  2.4e-06 ***\ntimegroup1      -0.427435   0.604700  -0.707   0.4797    \ntimegroup2       0.425435   0.603554   0.705   0.4809    \ntment           -0.569111   0.226892  -2.508   0.0121 *  \nalb             -0.086487   0.021876  -3.954  7.7e-05 ***\nbili             0.061654   0.062308   0.989   0.3224    \nbilihigh        -0.016757   0.085194  -0.197   0.8441    \nbilitoohigh      0.002652   0.052566   0.050   0.9598    \nbilimuchtoohigh -0.042801   0.026193  -1.634   0.1022    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 326.18  on 602  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 520.18\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t26_l2, base_poismod)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + bili + bilihigh + bilitoohigh + \n    bilimuchtoohigh + offset(log(risktime))\nModel 2: fail ~ timegroup + tment + alb + bili + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   9 -251.09                         \n2   6 -263.36 -3 24.545  1.922e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# Quadratic Poisson 2\npoismod_t26_q2 <- glm(fail ~ timegroup + tment + alb + bili + I(bili*bili) +\n                        offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t26_q2)\n\n\n\nCall:\nglm(formula = fail ~ timegroup + tment + alb + bili + I(bili * \n    bili) + offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n                 Estimate Std. Error z value Pr(>|z|)    \n(Intercept)    -5.163e+00  1.053e+00  -4.902 9.47e-07 ***\ntimegroup1     -3.819e-01  6.047e-01  -0.631  0.52774    \ntimegroup2      4.555e-01  6.033e-01   0.755  0.45030    \ntment          -4.987e-01  2.217e-01  -2.250  0.02447 *  \nalb            -9.774e-02  2.163e-02  -4.518 6.24e-06 ***\nbili            1.998e-02  3.266e-03   6.118 9.49e-10 ***\nI(bili * bili) -3.152e-05  9.069e-06  -3.475  0.00051 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 337.38  on 604  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 527.38\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t26_q2, base_poismod)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + bili + I(bili * bili) + offset(log(risktime))\nModel 2: fail ~ timegroup + tment + alb + bili + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   7 -256.69                         \n2   6 -263.36 -1 13.345  0.0002591 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# Splines Poisson 3\npoismod_t26_l3 <- glm(fail ~ timegroup + tment + alb + \n                        log2bili + logbilihigh + logbilitoohigh + logbilimuchtoohigh +\n                        offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t26_l3)\n\n\n\nCall:\nglm(formula = fail ~ timegroup + tment + alb + log2bili + logbilihigh + \n    logbilitoohigh + logbilimuchtoohigh + offset(log(risktime)), \n    family = poisson, data = pbc3mult)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \n(Intercept)        -6.52003    1.99572  -3.267 0.001087 ** \ntimegroup1         -0.40679    0.60392  -0.674 0.500579    \ntimegroup2          0.41834    0.60355   0.693 0.488223    \ntment              -0.55563    0.22703  -2.447 0.014390 *  \nalb                -0.08440    0.02181  -3.870 0.000109 ***\nlog2bili            0.19800    0.46549   0.425 0.670583    \nlogbilihigh         0.88154    0.91202   0.967 0.333756    \nlogbilitoohigh     -0.23363    1.27745  -0.183 0.854884    \nlogbilimuchtoohigh -0.31390    0.97076  -0.323 0.746425    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 327.54  on 602  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 521.54\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t26_l3, base_poismod_log)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + log2bili + logbilihigh + logbilitoohigh + \n    logbilimuchtoohigh + offset(log(risktime))\nModel 2: fail ~ timegroup + tment + alb + log2bili + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   9 -251.77                     \n2   6 -252.62 -3 1.7135     0.6339\n\n\nCode show/hide\n# Quadratic Poisson 3\npoismod_t26_q3 <- glm(fail ~ timegroup + tment + alb + log2bili + log2bili2 +\n                        offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t26_q3)\n\n\n\nCall:\nglm(formula = fail ~ timegroup + tment + alb + log2bili + log2bili2 + \n    offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n             Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -7.860086   1.851557  -4.245 2.18e-05 ***\ntimegroup1  -0.406020   0.604625  -0.672   0.5019    \ntimegroup2   0.439074   0.603467   0.728   0.4669    \ntment       -0.545495   0.222667  -2.450   0.0143 *  \nalb         -0.087106   0.021892  -3.979 6.92e-05 ***\nlog2bili     0.627828   0.497489   1.262   0.2070    \nlog2bili2    0.001641   0.042356   0.039   0.9691    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 329.25  on 604  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 519.25\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t26_q3, base_poismod_log)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + log2bili + log2bili2 + offset(log(risktime))\nModel 2: fail ~ timegroup + tment + alb + log2bili + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   7 -252.62                     \n2   6 -252.62 -1 0.0015     0.9691\n\n\n\n\n\n\nCode show/hide\n** Cox models **;\n\n* Base models for LR tests; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb bili/rl ties=breslow CONVERGELIKE=1E-8 type3(lr);\nrun;\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili/rl ties=breslow CONVERGELIKE=1E-8 type3(lr);\nrun;\n\n* Splines Cox 1; \n* LRT can here be read of type3 test result; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb albnorm bili/rl ties=breslow CONVERGELIKE=1E-8 type3(lr);\nrun;\n\n* Quadratic Cox 1; \n* LRT can here be read of type3 test result; \nproc phreg data=pbc3;\n  alb2=alb*alb;\n    class tment (ref='0');\n    model days*status(0)=tment alb10 alb2 bili100/rl type3(LR);\nrun;\n\n* Splines Cox 2;\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb bili bilihigh bilitoohigh \n                             bilimuchtoohigh/rl type3(lr) ties=breslow CONVERGELIKE=1E-8;\n  Wald_same_as_LRT: test  bilihigh=bilitoohigh=bilimuchtoohigh=0;\nrun;\n* LRT; \ndata p;\n    chi2=826.830-802.434;\n    p=1-probchi(chi2,3);\nproc print;\nrun;\n\n* Quadratic Cox 2; \n* LRT can here be read of type3 test result; \nproc phreg data=pbc3;\n  bili2=bili*bili;\n    class tment (ref='0');\n    model days*status(0)=tment alb10 bili bili2 / rl type3(LR);\nrun;\n\n* Splines Cox 3;\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili logbilihigh \n                             logbilitoohigh logbilimuchtoohigh/rl ties=breslow CONVERGELIKE=1E-8;\n  Wald_same_as_LRT: test  logbilihigh=logbilitoohigh=logbilimuchtoohigh=0;\nrun;\n* LRT; \ndata p;\n    chi2=805.881-804.267;\n    p=1-probchi(chi2,3);\nproc print;\nrun;\n\n* Quadratic Cox 3; \n* LRT can here be read of type3 test result; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb10 log2bili log2bili2/rl type3(LR);\nrun;\n\n* Split data into timegroups for Poisson models; \ndata pbc3mult; \n    set pbc3;\n    fail=(days<=2 * 365.25)*(status ne 0);\n    risktime=min(2 * 365.25,days);\n    logrisk=log(risktime); interv=1; output;  \n    if days>2* 365.25 then do;\n    fail=(days<=4* 365.25)*(status ne 0);\n    risktime=min(2* 365.25,days-2* 365.25);\n    logrisk=log(risktime); interv=2; output; end;\n    if days>4* 365.25 then do;\n    fail=status ne 0; \n    risktime=days-4* 365.25;\n    logrisk=log(risktime); interv=3; output; end;\nrun;\n\n\n** Possion models **;\n\n* Models to compare with for the LR tests; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb bili/ dist=poi offset=logrisk type3;\nrun;\n\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb log2bili/ dist=poi offset=logrisk type3;\nrun;\n\n* Splines Poisson 1; \n* LRT can here be read of type3 test result; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb albnorm bili/ dist=poi offset=logrisk type3;\nrun;\n\n* Quadratic Poisson 1;\n* LRT can here be read of type3 test result; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb10 alb2 bili100/ dist=poi offset=logrisk type3;\nrun;\n\n* Splines Poisson 2; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb bili bilihigh bilitoohigh  \n                 bilimuchtoohigh/ dist=poi offset=logrisk type3;\nrun;\n* LRT; \ndata p;\n    chi2=350.7253-326.1805;\n    p=1-probchi(chi2,3);\nproc print;\nrun;\n\n* Quadratic Poisson 2;\n* LRT can here be read of type3 test result; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb10 bili100 bili2/ dist=poi offset=logrisk type3;\nrun;\n\n* Splines Poisson 3;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb log2bili logbilihigh logbilitoohigh \n                 logbilimuchtoohigh / dist=poi offset=logrisk type3;\nrun;\n* LRT; \ndata p;\n    chi2=329.2509-327.5375;\n    p=1-probchi(chi2,3);\nproc print;\nrun;\n\n* Quadratic Poisson 3;\n* LRT can here be read of type3 test result; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb10 log2bili log2bili2/ dist=poi offset=logrisk type3;\nrun;\n\n\n\n\n\n\n\nFigure 2.6\n\nRSAS\n\n\n\n\nCode show/hide\n# The below linear predictors include estimates from the following models\npbc3mult$timegroup <- relevel(as.factor(pbc3mult$timegroup), ref = \"3\")\npbc3mult$tment_char <- as.factor(pbc3mult$tment_char)\npbc3mult$tment_char <- relevel(pbc3mult$tment_char, ref = \"Placebo\")\nbase_poismod <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + \n                      tment_char + alb + bili,\n                    data = pbc3mult, family = poisson)\npoismod_t26_l1 <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + \n                        tment_char + alb + bili + albnorm,\n                      data = pbc3mult, family = poisson)\npoismod_t26_l3 <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + \n                        tment_char + alb + \n                        bili + bilihigh + bilitoohigh + bilimuchtoohigh,\n                      data = pbc3mult,family = poisson)\n# Make a dataset with linear predictor information\nlin2 <- pbc3\nlin2$lp1 <- with(pbc3, 1.6076-0.1123*alb)\nlin2$lp2 <- with(pbc3, 0.7828-0.0864*alb-0.0474*albnorm)\nlin2$lp3 <- with(pbc3, 1.6076+0.0085*bili-38.7*0.1123)\nlin2$lp4 <- with(pbc3, -0.5534+0.0617*bili-0.0168*bilihigh+\n                   0.0027*bilitoohigh-0.0428*bilimuchtoohigh-0.0865*38.7)\nlin2row <- data.frame(effect = c(rep(\"Linear effect\", nrow(lin2)),\n                                 rep(\"Effect as linear spline\", nrow(lin2))), \n                      lp = c(lin2$lp1, lin2$lp2), alb = c(lin2$alb, lin2$alb))\nlibrary(ggplot2)\nfig2.6 <- ggplot(aes(x = alb, y = lp, linetype = effect), data = lin2row) +\n  geom_line(size = 1) + \n  xlab(\"Albumin\") + \n  ylab(\"Linear predictor\") + \n  scale_linetype_discrete(\"Effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.6\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Below is estimates from the following models collected; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb bili/ dist=poi offset=logrisk type3;\nrun;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb albnorm bili/ dist=poi offset=logrisk type3;\nrun;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb bili bilihigh bilitoohigh \n             logbilimuchtoohigh / dist=poi offset=logrisk type3;\nrun;\n\n* Collect linear predictor information; \ndata lin2; set pbc3;\n    lp1=1.6076-0.1123*alb; * bilirubin = 0; \n    lp2=0.7828-0.0864*alb-0.0474*albnorm;\n    lp3=1.6076+0.0085*bili-38.7*0.1123; *also an effect of albumin at 38.7; \n    lp4=-0.5534+0.0617*bili-0.0168*bilihigh+0.0027*bilitoohigh\n        -0.0428*bilimuchtoohigh-0.0865*38.7;\nrun;\nproc sort data=lin2; by alb; run;\nlegend1 label=none;\nproc gplot data=lin2;\n    plot (lp2 lp1)*alb/overlay haxis=axis1 vaxis=axis2 legend=legend1;\n    axis1 order=20 to 60 by 10 minor=none label=('Se-albumin');\n    axis2 order=-6 to 0 by 1 minor=none label=(a=90 'Linear predictor');\n    symbol1 v=none i=join r=1 c=red;\n    symbol2 v=none i=join r=1 c=blue;\n    label lp2=\"Effect as linear spline\";\n    label lp1=\"Linear effect\";\nrun; \nquit;\n\n\n\n\n\n\n\nFigure 2.7\n\nRSAS\n\n\n\n\nCode show/hide\n# bilirubin and the two last linear predictors\nlin2row2 <- data.frame(effect = c(rep(\"Linear effect\", nrow(lin2)),\n                                  rep(\"Effect as linear spline\", nrow(lin2))), \n                      lp = c(lin2$lp3, lin2$lp4),\n                      bili = c(lin2$bili, lin2$bili))\n\nfig2.7 <- ggplot(aes(x = bili, y = lp, linetype = effect), data = lin2row2) + \n  geom_line(size = 1) + \n  xlab(\"Bilirubin\") + \n  ylab(\"Linear predictor\") + \n  scale_linetype_discrete(\"Effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.7\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc sort data=lin2; by bili; run;\nproc gplot data=lin2;\n    plot (lp4 lp3)*bili/overlay haxis=axis1 vaxis=axis2 legend=legend1;\n    axis1 order=0 to 500 by 100 minor=none label=('Se-bilirubin');\n    axis2 order=-5 to 2 by 1 minor=none label=(a=90 'Linear predictor');\n    symbol1 v=none i=join r=1 c=red;\n    symbol2 v=none i=join r=1 c=blue;\n    label lp4=\"Effect as linear spline\";\n    label lp3=\"Linear effect\";\nrun;quit;\n\n\n\n\n\n\n\nFigure 2.8\n\nRSAS\n\n\n\n\nCode show/hide\n# The below linear predictors include estimates from the following models\nbase_poismod2_log <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + \n                           tment_char + alb + log2bili,\n                         data = pbc3mult, family = poisson)\npoismod_t26_l3 <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + \n                        tment_char + alb + log2bili + \n                        logbilihigh + logbilitoohigh + logbilimuchtoohigh,\n                        data = pbc3mult, family = poisson)\n# Make a dataset with linear predictor information\nlog2 <- pbc3\nlog2$lp3 <- with(pbc3, -2.0162+0.6469*log2bili-38.7*0.087)\nlog2$lp4 <- with(pbc3, -0.6194+0.198*log2bili\n                 +0.8815*logbilihigh-0.2336*logbilitoohigh\n                 -0.3139*logbilimuchtoohigh-0.0844*38.7)\nlog2row <- data.frame(effect = c(rep(\"Linear effect\", nrow(log2)),\n                                 rep(\"Effect as linear spline\", nrow(log2))), \n                      lp = c(log2$lp3, log2$lp4),\n                      log2bili = c(log2$log2bili, log2$log2bili)\n                      )\n\nfig2.8 <- ggplot(aes(x = log2bili, y = lp, linetype = effect), data = log2row) + \n  geom_line(size = 1) + \n  xlab(expression(log[2] * \"(bilirubin)\")) +\n  ylab(\"Linear predictor\") + \n  scale_linetype_discrete(\"Effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.8\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Linear predictors from the following models; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb log2bili / dist=poi offset=logrisk type3;\nrun;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb log2bili logbilihigh logbilitoohigh \n                 logbilimuchtoohigh / dist=poi offset=logrisk type3;\nrun;\n\n* Create data with linear predictors as a function of bilirubin values; \ndata log2; \n    set pbc3;\n    lp3=-2.0162+0.6469*log2bili-38.7*0.087;\n    lp4=-0.6194+0.198*log2bili+0.8815*logbilihigh-0.2336*logbilitoohigh\n        -0.3139*logbilimuchtoohigh-0.0844*38.7;\nrun; \nproc sort data=log2;by bili; run;\nproc gplot data=log2;\n    plot (lp4 lp3)*log2bili/overlay haxis=axis1 vaxis=axis2 legend=legend1;\n    axis1 order=1 to 9 by 1 minor=none label=('log2(Se-bilirubin)');\n    axis2 order=-5 to 1 by 1 minor=none label=(a=90 'Linear predictor');\n    symbol1 v=none i=join r=1 c=red;\n    symbol2 v=none i=join r=1 c=blue;\n    label lp4=\"Effect as linear spline\";\n    label lp3=\"Linear effect\";\nrun;quit;\n\n\n\n\n\n\n\nTable 2.7\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model\ncoxmod_t27 <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,\n                    eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t27\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + log2bili, \n    data = pbc3, method = \"breslow\", eps = 1e-08)\n\n             coef exp(coef) se(coef)      z        p\ntment    -0.57406   0.56323  0.22447 -2.557   0.0105\nalb      -0.09093   0.91308  0.02164 -4.201 2.65e-05\nlog2bili  0.66500   1.94449  0.07443  8.935  < 2e-16\n\nLikelihood ratio test=120  on 3 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\n# Poisson model\npoismod_t27 <- glm(fail ~ tment + alb + log2bili + timegroup + \n                     offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t27) \n\n\n\nCall:\nglm(formula = fail ~ tment + alb + log2bili + timegroup + offset(log(risktime)), \n    family = poisson, data = pbc3mult)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -7.47780    0.97577  -7.663 1.81e-14 ***\ntment       -0.54549    0.22265  -2.450 0.014288 *  \nalb         -0.08697    0.02162  -4.024 5.73e-05 ***\nlog2bili     0.64689    0.07326   8.830  < 2e-16 ***\ntimegroup3  -0.43894    0.60346  -0.727 0.466999    \ntimegroup1  -0.84401    0.22867  -3.691 0.000223 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 329.25  on 605  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 517.25\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\n\n\nCode show/hide\n* Cox model; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili / rl;\nrun;\n* Poisson model;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb log2bili / dist=poi offset=logrisk;\nrun;\n\n\n\n\n\n\n\nTable 2.8\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox models\n# Model for LR comparison\ncoxmod_t28_base <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,\n                      eps = 1e-8, method = \"breslow\", data = pbc3)\n# Cox model 1\npbc3$alb0 <- (pbc3$tment==0)*pbc3$alb\npbc3$alb1 <- (pbc3$tment==1)*pbc3$alb\ncoxmod_t28_1 <- coxph(Surv(days, status != 0) ~ tment + alb0 + alb1 + log2bili,\n                      eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t28_1\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb0 + alb1 + \n    log2bili, data = pbc3, method = \"breslow\", eps = 1e-08)\n\n              coef exp(coef)  se(coef)      z        p\ntment    -0.009736  0.990312  1.559670 -0.006 0.995020\nalb0     -0.081319  0.921900  0.034031 -2.390 0.016869\nalb1     -0.097043  0.907517  0.027344 -3.549 0.000387\nlog2bili  0.664413  1.943350  0.074494  8.919  < 2e-16\n\nLikelihood ratio test=120.2  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t28_1, coxmod_t28_base)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb0 + alb1 + log2bili\nModel 2: Surv(days, status != 0) ~ tment + alb + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   4 -402.87                     \n2   3 -402.94 -1 0.1338     0.7145\n\n\nCode show/hide\n# Cox model 2\npbc3$bili0 <- (pbc3$tment==0)*pbc3$log2bili\npbc3$bili1 <- (pbc3$tment==1)*pbc3$log2bili\ncoxmod_t28_2 <- coxph(Surv(days, status != 0) ~ tment + alb + bili0 + bili1,\n                      eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_t28_2\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + bili0 + \n    bili1, data = pbc3, method = \"breslow\", eps = 1e-08)\n\n          coef exp(coef) se(coef)      z        p\ntment  0.19880   1.21994  0.85653  0.232    0.816\nalb   -0.09331   0.91091  0.02191 -4.260 2.05e-05\nbili0  0.72558   2.06593  0.09865  7.355 1.91e-13\nbili1  0.59345   1.81022  0.10604  5.596 2.19e-08\n\nLikelihood ratio test=120.9  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\nlrtest(coxmod_t28_2, coxmod_t28_base)\n\n\nLikelihood ratio test\n\nModel 1: Surv(days, status != 0) ~ tment + alb + bili0 + bili1\nModel 2: Surv(days, status != 0) ~ tment + alb + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   4 -402.51                     \n2   3 -402.94 -1 0.8644     0.3525\n\n\nCode show/hide\n# Poisson models\n# Model for LR comparison - no interaction\npoismod_t28_base <- glm(fail ~ timegroup + tment + alb + log2bili+\n                          offset(log(risktime)), data=pbc3mult, family=poisson)\n\n# Poisson model 1\npbc3mult$alb0 <- (pbc3mult$tment==0)*pbc3mult$alb\npbc3mult$alb1 <- (pbc3mult$tment==1)*pbc3mult$alb\npoismod_t28_1 <- glm(fail ~ tment + alb0 + alb1 + log2bili + timegroup +\n                       offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t28_1) \n\n\n\nCall:\nglm(formula = fail ~ tment + alb0 + alb1 + log2bili + timegroup + \n    offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -7.86906    1.36181  -5.778 7.54e-09 ***\ntment        0.09200    1.55226   0.059 0.952738    \nalb0        -0.07628    0.03359  -2.271 0.023162 *  \nalb1        -0.09406    0.02755  -3.414 0.000639 ***\nlog2bili     0.64624    0.07334   8.812  < 2e-16 ***\ntimegroup3  -0.43125    0.60379  -0.714 0.475080    \ntimegroup1  -0.84426    0.22851  -3.695 0.000220 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 329.08  on 604  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 519.08\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t28_base, poismod_t28_1)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + log2bili + offset(log(risktime))\nModel 2: fail ~ tment + alb0 + alb1 + log2bili + timegroup + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   6 -252.62                     \n2   7 -252.54  1 0.1723      0.678\n\n\nCode show/hide\n# Poisson model 2\npbc3mult$bili0 <- (pbc3mult$tment==0)*pbc3mult$log2bili\npbc3mult$bili1 <- (pbc3mult$tment==1)*pbc3mult$log2bili\npoismod_t28_2 <- glm(fail ~ tment + alb + bili0 + bili1 + timegroup +\n                       offset(log(risktime)), data = pbc3mult, family = poisson)\nsummary(poismod_t28_2) \n\n\n\nCall:\nglm(formula = fail ~ tment + alb + bili0 + bili1 + timegroup + \n    offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -7.71515    1.01592  -7.594 3.10e-14 ***\ntment        0.18058    0.84828   0.213 0.831422    \nalb         -0.08909    0.02185  -4.078 4.54e-05 ***\nbili0        0.70368    0.09717   7.242 4.42e-13 ***\nbili1        0.57982    0.10472   5.537 3.08e-08 ***\ntimegroup3  -0.41713    0.60400  -0.691 0.489808    \ntimegroup1  -0.85694    0.22932  -3.737 0.000186 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 328.47  on 604  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 518.47\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t28_base, poismod_t28_2)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ timegroup + tment + alb + log2bili + offset(log(risktime))\nModel 2: fail ~ tment + alb + bili0 + bili1 + timegroup + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   6 -252.62                     \n2   7 -252.24  1 0.7787     0.3775\n\n\n\n\n\n\nCode show/hide\n* Cox model 1; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb tment*alb log2bili /rl type3 (LR);\n    estimate 'alb, tment=0' alb 1;\n    estimate 'alb, tment=1' alb 1 tment*alb 1;\nrun;\n* Cox model 2; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili tment*log2bili/rl  type3 (LR);\n    estimate 'log2bili, tment=0' log2bili 1;\n    estimate 'log2bili, tment=1' log2bili 1 tment*log2bili 1;\nrun;\n\n* Poisson model 1; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment log2bili alb(tment) / dist=poi offset=logrisk type3;\n    contrast 'LRT' alb(tment) 1 -1;\nrun;\n* Poisson model 2; \nproc genmod data=pbc3mult;\n    class tment (ref='0') interv;\n    model fail= interv tment alb log2bili(tment)/ dist=poi offset=logrisk type3;\n    contrast 'LRT' log2bili(tment) 1 -1;\nrun;\n\n\n\n\n\n\n\nTable 2.9\n\nRSAS\n\n\n\n\nCode show/hide\npbc3mult$tment1 <- (pbc3mult$timegroup==1)*pbc3mult$tment\npbc3mult$tment2 <- (pbc3mult$timegroup==2)*pbc3mult$tment\npbc3mult$tment3 <- (pbc3mult$timegroup==3)*pbc3mult$tment\npbc3mult$alb1 <- (pbc3mult$timegroup==1)*pbc3mult$alb\npbc3mult$alb2 <- (pbc3mult$timegroup==2)*pbc3mult$alb\npbc3mult$alb3 <- (pbc3mult$timegroup==3)*pbc3mult$alb\npbc3mult$bili1 <- (pbc3mult$timegroup==1)*pbc3mult$log2bili\npbc3mult$bili2 <- (pbc3mult$timegroup==2)*pbc3mult$log2bili\npbc3mult$bili3 <- (pbc3mult$timegroup==3)*pbc3mult$log2bili\n\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\npoismod_t29_base <- glm(fail~tment+alb+log2bili+timegroup+offset(log(risktime)),\n                     data = pbc3mult, family = poisson)\n\n# Treatment\npoismod_t29_tment <- glm(fail ~ tment1 + tment2 + tment3 + alb + log2bili+\n                       timegroup + offset(log(risktime)),\n                     data = pbc3mult, family = poisson)\nsummary(poismod_t29_tment) \n\n\n\nCall:\nglm(formula = fail ~ tment1 + tment2 + tment3 + alb + log2bili + \n    timegroup + offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -7.64593    1.17030  -6.533 6.43e-11 ***\ntment1      -0.56166    0.29091  -1.931   0.0535 .  \ntment2      -0.46193    0.34460  -1.340   0.1801    \ntment3      -1.26627    1.22939  -1.030   0.3030    \nalb         -0.08640    0.02166  -3.988 6.65e-05 ***\nlog2bili     0.64871    0.07367   8.806  < 2e-16 ***\ntimegroup1  -0.69911    0.74501  -0.938   0.3480    \ntimegroup2   0.09537    0.75000   0.127   0.8988    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 328.82  on 603  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 520.82\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t29_base, poismod_t29_tment)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ tment + alb + log2bili + timegroup + offset(log(risktime))\nModel 2: fail ~ tment1 + tment2 + tment3 + alb + log2bili + timegroup + \n    offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   6 -252.62                     \n2   8 -252.41  2 0.4312     0.8061\n\n\nCode show/hide\n# Albumin\npoismod_t29_alb <- glm(fail ~ tment + alb1 + alb2 + alb3 + log2bili+\n                       timegroup + offset(log(risktime)),\n                     data = pbc3mult, family = poisson)\nsummary(poismod_t29_alb) \n\n\n\nCall:\nglm(formula = fail ~ tment + alb1 + alb2 + alb3 + log2bili + \n    timegroup + offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -8.73232    5.94065  -1.470   0.1416    \ntment       -0.56130    0.22300  -2.517   0.0118 *  \nalb1        -0.11026    0.02791  -3.951 7.79e-05 ***\nalb2        -0.05231    0.03472  -1.507   0.1319    \nalb3        -0.06542    0.15336  -0.427   0.6697    \nlog2bili     0.64608    0.07361   8.777  < 2e-16 ***\ntimegroup1   1.22609    6.02995   0.203   0.8389    \ntimegroup2  -0.01433    6.09060  -0.002   0.9981    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 327.45  on 603  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 519.45\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t29_base, poismod_t29_alb)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ tment + alb + log2bili + timegroup + offset(log(risktime))\nModel 2: fail ~ tment + alb1 + alb2 + alb3 + log2bili + timegroup + offset(log(risktime))\n  #Df  LogLik Df Chisq Pr(>Chisq)\n1   6 -252.62                    \n2   8 -251.72  2 1.803      0.406\n\n\nCode show/hide\n# Bilirubin\npoismod_t29_bili <- glm(fail ~ tment + alb + bili1 + bili2 + bili3 +\n                       timegroup + offset(log(risktime)),\n                     data = pbc3mult, family = poisson)\nsummary(poismod_t29_bili) \n\n\n\nCall:\nglm(formula = fail ~ tment + alb + bili1 + bili2 + bili3 + timegroup + \n    offset(log(risktime)), family = poisson, data = pbc3mult)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -6.36112    2.36067  -2.695  0.00705 ** \ntment       -0.51454    0.22373  -2.300  0.02146 *  \nalb         -0.08570    0.02174  -3.942 8.10e-05 ***\nbili1        0.71044    0.09260   7.672 1.69e-14 ***\nbili2        0.55747    0.12113   4.602 4.18e-06 ***\nbili3        0.30512    0.48171   0.633  0.52646    \ntimegroup1  -2.41998    2.30859  -1.048  0.29452    \ntimegroup2  -0.69600    2.32124  -0.300  0.76430    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 449.14  on 610  degrees of freedom\nResidual deviance: 327.67  on 603  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 519.67\n\nNumber of Fisher Scoring iterations: 6\n\n\nCode show/hide\nlrtest(poismod_t29_base, poismod_t29_bili)\n\n\nLikelihood ratio test\n\nModel 1: fail ~ tment + alb + log2bili + timegroup + offset(log(risktime))\nModel 2: fail ~ tment + alb + bili1 + bili2 + bili3 + timegroup + offset(log(risktime))\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   6 -252.62                     \n2   8 -251.84  2 1.5777     0.4544\n\n\n\n\n\n\nCode show/hide\n* Treatment; \n* Estimates ;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv(ref='1');\n    model fail= interv tment(interv) alb log2bili/ dist=poi offset=logrisk type3;\nrun;\n* LRT ;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv(ref='1');\n    model fail= interv tment interv*tment alb log2bili/ dist=poi offset=logrisk type3;\nrun;\n\n* Albumin;\n* Estimates ;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv(ref='1');\n    model fail= interv tment log2bili alb(interv) / dist=poi offset=logrisk type3;\nrun;\n* LRT ;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv(ref='1');\n    model fail= interv tment alb log2bili alb*interv/ dist=poi offset=logrisk type3;\nrun;\n\n* Bilirubin;\n* Estimates ;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv(ref='1');\n    model fail= interv tment alb log2bili(interv)/ dist=poi offset=logrisk type3;\nrun;\n* LRT ;\nproc genmod data=pbc3mult;\n    class tment (ref='0') interv(ref='1');\n    model fail= interv tment alb log2bili log2bili*interv/ dist=poi offset=logrisk type3;\nrun;\n\n\n\n\n\n\n\nIn-text, p. 51: stratified Cox model\n\nRSAS\n\n\n\n\nCode show/hide\ncoxmod_f29 <- coxph(Surv(days, status != 0) ~ strata(tment) + alb + log2bili,\n                      eps = 1e-8, method = \"breslow\", data = pbc3)\ncoxmod_f29\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ strata(tment) + alb + \n    log2bili, data = pbc3, method = \"breslow\", eps = 1e-08)\n\n             coef exp(coef) se(coef)      z        p\nalb      -0.09002   0.91391  0.02168 -4.153 3.28e-05\nlog2bili  0.66328   1.94114  0.07531  8.807  < 2e-16\n\nLikelihood ratio test=119.3  on 2 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    model days*status(0)= alb log2bili / rl;\n    strata tment;\nrun;\n\n\n\n\n\n\n\nFigure 2.10\n\nRSAS\n\n\n\n\nCode show/hide\n# Extracting cumulative baseline hazards per treatment\ncumhaz_treat <- basehaz(coxmod_f29, centered = FALSE)\ncumhaz_treat <- as.data.frame(cumhaz_treat)\n# Per treatment\nhazard_t0 <- cumhaz_treat[cumhaz_treat$strata == \"tment=0\",]\nhazard_t0[1,] <- c(0, 0, \"tment=0\")\nhazard_t0$time<- as.numeric(hazard_t0$time)\nhazard_t0$hazard <- as.numeric(hazard_t0$hazard)\nhazard_t1 <- cumhaz_treat[cumhaz_treat$strata == \"tment=1\",]\n# Match times\nalltimes <- sort(unique(cumhaz_treat$time))\nhazard_t0_allt <- as.numeric(sapply(1:length(alltimes),function(k) \n  tail(hazard_t0$hazard[hazard_t0$time <= alltimes[k]], 1)))\nhazard_t1_allt <- as.numeric(sapply(1:length(alltimes), function(k)\n  tail(hazard_t1$hazard[hazard_t1$time <= alltimes[k]], 1))) \nhazards <- data.frame(hazard_t0_allt, hazard_t1_allt)\n# Extract coefficient\ncoxmod_f29_t <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,\n                      eps = 1e-8, method = \"breslow\", data = pbc3)\n# Make plot\nlibrary(ggplot2)\nfig2.10 <- ggplot(aes(x = hazard_t0_allt, y = hazard_t1_allt), data = hazards) + \n  geom_step(linewidth = 1) + \n  geom_abline(intercept = 0, slope = exp(coef(coxmod_f29_t)[[\"tment\"]]), \n              linetype = \"dashed\", size = 1) + \n  xlab(\"Cumulative baseline hazard: placebo\") +\n  ylab(\"Cumulative baseline hazard: CyA\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.10\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata covstr;\n    alb=0; log2bili=0;\nrun;\nproc phreg data=pbc3;\n    model days*status(0)= alb log2bili/rl;\n    strata tment;\n    baseline out=breslowstr cumhaz=breslow covariates=covstr;\nrun;\ndata breslow0;\n    set breslowstr; \n    if tment=0; \n  a00=breslow; \nrun;\ndata breslow1; \n    set breslowstr; \n    if tment=1;     \n    a01=breslow; \nrun;\ndata breslow01; \n    merge breslow0 breslow1; \n    by days; \nrun;\ndata breslowrev; \n  set breslow01;\n    by days;\n    retain last1 last2;\n    if a00=. then cumhaz0=last1; if a00 ne . then cumhaz0=a00; \n    if a01=. then cumhaz1=last2; if a01 ne . then cumhaz1=a01;\n    output;\n    last1=cumhaz0; last2=cumhaz1; \nrun;\ndata breslowrev; \n    set breslowrev;\n    line=exp(-0.574)*cumhaz0;\nrun;\nproc gplot data=breslowrev;\n    plot cumhaz1*cumhaz0 line*cumhaz0/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 1.5 by 0.5 minor=none label=('Cumulative baseline hazard: placebo');\n    axis2 order=0 to 1 by 0.5 minor=none label=(a=90 'Cumulative baseline hazard: CyA');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=rl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 2.11\n\nRSAS-NA\n\n\n\n\nCode show/hide\n# Additive Aalen models - available with timereg\nlibrary(timereg)\nnonparmod <- aalen(Surv(days, status != 0) ~ tment, data = pbc3)\nsummary(nonparmod)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          5.96               0.000\ntment                                1.60               0.714\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                         0.107                       0.565\ntment                               0.136                       0.648\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                          7.62                       0.444\ntment                                4.54                       0.730\n\n   \n   \n  Call: \naalen(formula = Surv(days, status != 0) ~ tment, data = pbc3)\n\n\nCode show/hide\ncumhazdata <- data.frame(eventtimes = nonparmod$cum[,1],\n                         basecumhaz = nonparmod$cum[,2], \n                         cumhaztreat = nonparmod$cum[,3], \n                         cumhaztreat_ll = nonparmod$cum[,3]\n                                          -1.96*sqrt(nonparmod$var.cum[,3]),\n                         cumhaztreat_ul = nonparmod$cum[,3]\n                                          +1.96*sqrt(nonparmod$var.cum[,3]))\n# Extend lines to last observed time\ncumhazdata[nrow(cumhazdata)+1,] <- c(max(pbc3$days), tail(cumhazdata, 1)[-1])\n\n# Left figure\nfig2.11.left <- ggplot(aes(x = eventtimes / 365.25, y = basecumhaz), \n                       data = cumhazdata) + \n  geom_step(size = 1) + \n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Cumulative baseline hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), \n                     limits = c(0, 6),breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.11.left\n\n\n\n\n\nCode show/hide\n# Right figure\nfig2.11.right <- ggplot(aes(x = eventtimes / 365.25, y = cumhaztreat), \n                        data = cumhazdata) + \n  geom_step(size = 1) + \n  geom_step(size = 1, aes(x = eventtimes / 365.25, y = cumhaztreat_ll), \n            linetype = \"dashed\") +  \n  geom_step(size = 1, aes(x = eventtimes / 365.25, y = cumhaztreat_ul), \n            linetype = \"dashed\") +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Cumulative treatment effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), \n                     limits = c(0, 6), breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.11.right\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn-text, p. 55: simple Aalen model\n\nRSAS-NA\n\n\n\n\nCode show/hide\n# Additive model treatment only\n# p-values not exactly as in book because seed changes\nnonparmod0 <- aalen(Surv(days, status != 0) ~ tment, data = pbc3) \nsummary(nonparmod0)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          5.96               0.000\ntment                                1.60               0.738\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                         0.107                       0.563\ntment                               0.136                       0.608\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                          7.62                       0.426\ntment                                4.54                       0.721\n\n   \n   \n  Call: \naalen(formula = Surv(days, status != 0) ~ tment, data = pbc3)\n\n\nCode show/hide\n# Constant effect of treatment per year\nnonparmod01 <- aalen(Surv(days/365.25, status != 0) ~ const(tment), data = pbc3) \nsummary(nonparmod01)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          6.62                   0\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                        0.0914                         0.4\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                        0.0136                        0.28\n\nParametric terms :     \n                Coef.    SE Robust SE     z P-val lower2.5% upper97.5%\nconst(tment) -0.00587 0.021     0.021 -0.28 0.779    -0.047     0.0353\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment), \n    data = pbc3)\n\n\n\n\n\n\n\n\n\n\nFigure 2.12\n\nRSAS-NA\n\n\n\n\nCode show/hide\n# Make Aalen model fit\nlibrary(timereg)\nnonparmod2 <- aalen(Surv(days, status != 0) ~ tment + alb + bili, data = pbc3) \ncumhazdata <- data.frame(eventtimes = nonparmod2$cum[,1],\n                         basecumhaz = nonparmod2$cum[,2], \n                         cumhaztreat = nonparmod2$cum[,3], \n                         cumhazalb = nonparmod2$cum[,4], \n                         cumhazbili= nonparmod2$cum[,5])\n# Extend lines to last observed time\ncumhazdata[nrow(cumhazdata)+1,] <- c(max(pbc3$days), tail(cumhazdata, 1)[-1])\n\n# Figure treatment\nfig2.12.1 <- ggplot(aes(x = eventtimes / 365.25, y = cumhaztreat), \n                    data = cumhazdata) + \n  geom_step(size = 1) + \n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Cumulative treatment effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), \n                     limits = c(0, 6), breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\n# Figure albumin\nfig2.12.2 <- ggplot(aes(x = eventtimes / 365.25, y = cumhazalb), \n                    data = cumhazdata) + \n  geom_step(size = 1) + \n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Cumulative albumin effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), \n                     limits = c(0, 6), breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\n# Figure bilirubin\nfig2.12.3 <- ggplot(aes(x = eventtimes / 365.25, y = cumhazbili), \n                    data = cumhazdata) + \n  geom_step(size = 1) + \n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Cumulative bilirubin effect\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)),\n                     limits = c(0, 6), breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig2.12.1\n\n\n\n\n\nCode show/hide\nfig2.12.2\n\n\n\n\n\nCode show/hide\nfig2.12.3\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 2.10\n\nRSAS-NA\n\n\n\n\nCode show/hide\n# Additive model with treatment, albumin, bilirubin\n# Table 2.10, first two columns\n# p-values not exactly as in book because seed changes\nnonparmod1 <- aalen(Surv(days, status != 0) ~ tment + alb + bili, data = pbc3) \nsummary(nonparmod1)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          3.62               0.003\ntment                                2.66               0.120\nalb                                  3.82               0.002\nbili                                 4.83               0.000\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                       0.30300                       0.931\ntment                             0.12100                       0.666\nalb                               0.00666                       0.966\nbili                              0.00300                       0.201\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                      14.20000                       0.992\ntment                             3.29000                       0.769\nalb                               0.00826                       0.993\nbili                              0.00203                       0.344\n\n   \n   \n  Call: \naalen(formula = Surv(days, status != 0) ~ tment + alb + bili, \n    data = pbc3)\n\n\nCode show/hide\n# Constant effects per year\n# Table 2.10, last two columns\nnonparmod2 <- aalen(Surv(days/365.25, status != 0) ~ \n                      const(tment) + const(alb) + const(bili), data = pbc3) \nsummary(nonparmod2)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          4.03                   0\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                         0.119                       0.194\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                        0.0263                       0.123\n\nParametric terms :     \n                Coef.       SE Robust SE     z    P-val lower2.5% upper97.5%\nconst(tment) -0.04130 0.021600  0.020100 -2.05 4.02e-02  -0.08360    0.00104\nconst(alb)   -0.00842 0.002290  0.002230 -3.77 1.63e-04  -0.01290   -0.00393\nconst(bili)   0.00230 0.000483  0.000384  5.98 2.17e-09   0.00135    0.00325\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment) + \n    const(alb) + const(bili), data = pbc3)\n\n\n\n\n\n\n\n\n\n\nIn-text, p. 57: Aalen models\n\nRSAS-NA\n\n\n\n\nCode show/hide\n# In-text\n# Constant effect of treatment, adjusted for albumin and bilirubin\nnonparmod3 <- aalen(Surv(days/365.25, status != 0) ~ \n                      const(tment) + alb + bili, data = pbc3) \nsummary(nonparmod3)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          3.60               0.005\nalb                                  3.80               0.001\nbili                                 4.83               0.000\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                       0.28500                       0.950\nalb                               0.00954                       0.805\nbili                              0.00315                       0.130\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                      3.16e-02                       0.996\nalb                              5.26e-05                       0.913\nbili                             6.52e-06                       0.257\n\nParametric terms :     \n               Coef.     SE Robust SE     z P-val lower2.5% upper97.5%\nconst(tment) -0.0401 0.0216    0.0204 -1.97 0.049   -0.0824    0.00224\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment) + \n    alb + bili, data = pbc3)\n\n\nCode show/hide\n# Quadratic effect for albumin; p-values not exactly as in book because seed changes\nnonparmod44 <- aalen(Surv(days/365.25, status != 0) ~ const(tment)\n                       + I(alb/10) + I(bili/100) + I((alb/10)^2), data = pbc3) \nsummary(nonparmod44)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n              Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                            3.23               0.018\nI(alb/10)                              3.00               0.045\nI(bili/100)                            4.88               0.000\nI((alb/10)^2)                          2.77               0.080\n\nTest for time invariant effects \n                    Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                           9.420                       0.241\nI(alb/10)                             4.950                       0.240\nI(bili/100)                           0.365                       0.064\nI((alb/10)^2)                         0.635                       0.249\n                      Cramer von Mises test p-value H_0:constant effect\n(Intercept)                         83.6000                       0.347\nI(alb/10)                           24.4000                       0.341\nI(bili/100)                          0.0949                       0.173\nI((alb/10)^2)                        0.4160                       0.336\n\nParametric terms :     \n               Coef.     SE Robust SE     z  P-val lower2.5% upper97.5%\nconst(tment) -0.0421 0.0215    0.0201 -2.09 0.0366   -0.0842   3.92e-05\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment) + \n    I(alb/10) + I(bili/100) + I((alb/10)^2), data = pbc3)\n\n\nCode show/hide\n# Quadratic effect for bilirubin; p-values not exactly as in book as seed changes\nnonparmod43 <- aalen(Surv(days/365.25, status != 0) ~ const(tment)\n                       + I(alb/10) + I(bili/100) + I((bili/100)^2), data = pbc3) \nsummary(nonparmod43)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n                Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                              3.82               0.005\nI(alb/10)                                4.02               0.003\nI(bili/100)                              3.85               0.005\nI((bili/100)^2)                          3.01               0.041\n\nTest for time invariant effects \n                      Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                             0.440                       0.687\nI(alb/10)                               0.117                       0.625\nI(bili/100)                             0.612                       0.402\nI((bili/100)^2)                         0.515                       0.152\n                        Cramer von Mises test p-value H_0:constant effect\n(Intercept)                            0.1320                       0.776\nI(alb/10)                              0.0124                       0.626\nI(bili/100)                            0.4640                       0.293\nI((bili/100)^2)                        0.2880                       0.148\n\nParametric terms :     \n               Coef.     SE Robust SE     z  P-val lower2.5% upper97.5%\nconst(tment) -0.0395 0.0213    0.0208 -1.89 0.0582   -0.0812    0.00225\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment) + \n    I(alb/10) + I(bili/100) + I((bili/100)^2), data = pbc3)\n\n\nCode show/hide\n# Interactions\nnonparmod51 <- aalen(Surv(days/365.25, status != 0) ~ const(tment) + const(alb)\n                     + const(bili) + const(tment * bili),data = pbc3) \nsummary(nonparmod51)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          4.03                   0\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                         0.123                        0.15\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                        0.0287                         0.1\n\nParametric terms :     \n                       Coef.       SE Robust SE       z    P-val lower2.5%\nconst(tment)        -0.00194 0.029400  0.022800 -0.0851 9.32e-01  -0.05960\nconst(alb)          -0.00859 0.002260  0.002200 -3.9000 9.69e-05  -0.01300\nconst(bili)          0.00299 0.000869  0.000437  6.8400 7.77e-12   0.00129\nconst(tment * bili) -0.00116 0.001020  0.000658 -1.7600 7.92e-02  -0.00316\n                    upper97.5%\nconst(tment)          0.055700\nconst(alb)           -0.004160\nconst(bili)           0.004690\nconst(tment * bili)   0.000839\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment) + \n    const(alb) + const(bili) + const(tment * bili), data = pbc3)\n\n\nCode show/hide\nnonparmod52 <- aalen(Surv(days/365.25, status != 0) ~ const(tment) + const(bili) \n                     + const(alb) + const(tment * alb), data = pbc3) \nsummary(nonparmod52)\n\n\nAdditive Aalen Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          3.06               0.003\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                          0.12                       0.198\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                        0.0265                       0.126\n\nParametric terms :     \n                      Coef.       SE Robust SE       z    P-val lower2.5%\nconst(tment)        0.01010 0.199000  0.176000  0.0576 9.54e-01  -0.38000\nconst(bili)         0.00230 0.000482  0.000385  5.9600 2.45e-09   0.00136\nconst(alb)         -0.00771 0.003150  0.002780 -2.7700 5.54e-03  -0.01390\nconst(tment * alb) -0.00132 0.004790  0.004300 -0.3060 7.59e-01  -0.01070\n                   upper97.5%\nconst(tment)          0.40000\nconst(bili)           0.00324\nconst(alb)           -0.00154\nconst(tment * alb)    0.00807\n   \n  Call: \naalen(formula = Surv(days/365.25, status != 0) ~ const(tment) + \n    const(bili) + const(alb) + const(tment * alb), data = pbc3)\n\n\n\n\n\n\n\n\n\n\nIn-text, p. 58: additive Poisson model\n\nRSAS\n\n\n\n\nCode show/hide\n# Additive hazards model with piecewise constant baseline hazards\n# Model with only treatment as covariate\n# update data set\npbc3add <- pbc3mult\npbc3add$time1 <-  with(pbc3add, (timegroup == 1)*risktime/365.25)\npbc3add$time2 <-  with(pbc3add, (timegroup == 2)*risktime/365.25)\npbc3add$time3 <-  with(pbc3add, (timegroup == 3)*risktime/365.25)\npbc3add$tment0 <- with(pbc3add, (tment == 0)*risktime/365.25)\npbc3add$tment1 <- with(pbc3add, (tment == 1)*risktime/365.25)\npbc3add$albny <-  with(pbc3add, ((alb-35)/100)*risktime/365.25)\npbc3add$biliny <- with(pbc3add, ((bili-50)/1000)*risktime/365.25)\n\n# In-text\nadditive_pcw <- glm(fail ~ time1 + time2 + time3 + tment1 - 1,\n                    data = pbc3add, start = c(0.1, 0.1, 0.1, 0),\n                    family = poisson(link = \"identity\"))\nsummary(additive_pcw)\n\n\n\nCall:\nglm(formula = fail ~ time1 + time2 + time3 + tment1 - 1, family = poisson(link = \"identity\"), \n    data = pbc3add, start = c(0.1, 0.1, 0.1, 0))\n\nCoefficients:\n        Estimate Std. Error z value Pr(>|z|)    \ntime1   0.091109   0.016429   5.546 2.93e-08 ***\ntime2   0.131729   0.024143   5.456 4.87e-08 ***\ntime3   0.093734   0.046162   2.031   0.0423 *  \ntment1 -0.007261   0.020758  -0.350   0.7265    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance:    Inf  on 623  degrees of freedom\nResidual deviance: 459.54  on 619  degrees of freedom\nAIC: 647.54\n\nNumber of Fisher Scoring iterations: 4\n\n\n\n\n\n\nCode show/hide\n* Only constant effect per year possible;\n* Create new variables;\ndata pbc3add; \n    set pbc3mult;\n    time1=(interv=1)*risktime/365.25; \n    time2=(interv=2)*risktime/365.25; \n    time3=(interv=3)*risktime/365.25;\n    tment0=(tment=0)*risktime/365.25; \n    tment1=(tment=1)*risktime/365.25;\nrun;\n\n* link=id;\n* Constant effect of treatment per year;\nproc genmod data=pbc3add;\n    model fail=time1 time2 time3 tment1/dist=poi link=id noint;\nrun;\n\n\n\n\n\n\n\nTable 2.11\nQuestionable fit.\n\nRSAS\n\n\n\n\nCode show/hide\n#------------------------------------------------------------------#\n# Table 2.11 \n#------------------------------------------------------------------#\n\n# Table 2.11 - questionable fit\nadditive_pcw2.11 <- glm(fail ~ time1 + time2 + time3 + tment1 + albny + biliny -1,\n                    data = pbc3add, start = c(0.3, 0.35, 0.4, -0.05, -0.8, 2),\n                    family = poisson(link = \"identity\"))\nsummary(additive_pcw2.11)\n\n\n\nCall:\nglm(formula = fail ~ time1 + time2 + time3 + tment1 + albny + \n    biliny - 1, family = poisson(link = \"identity\"), data = pbc3add, \n    start = c(0.3, 0.35, 0.4, -0.05, -0.8, 2))\n\nCoefficients:\n       Estimate Std. Error z value Pr(>|z|)    \ntime1   0.18451    0.02129   8.666  < 2e-16 ***\ntime2   0.24074    0.02584   9.316  < 2e-16 ***\ntime3   0.22943    0.05441   4.217 2.48e-05 ***\ntment1 -0.02243    0.01732  -1.295 0.195235    \nalbny  -0.43637    0.12842  -3.398 0.000679 ***\nbiliny  2.22490    0.40809   5.452 4.98e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance:    Inf  on 611  degrees of freedom\nResidual deviance: 368.29  on 605  degrees of freedom\n  (12 observations deleted due to missingness)\nAIC: 556.29\n\nNumber of Fisher Scoring iterations: 25\n\n\n\n\n\n\nCode show/hide\n* Only constant effect per year possible;\n* Create new variables;\ndata pbc3add; \n    set pbc3mult;\n    time1=(interv=1)*risktime/365.25; \n    time2=(interv=2)*risktime/365.25; \n    time3=(interv=3)*risktime/365.25;\n    tment0=(tment=0)*risktime/365.25; \n    tment1=(tment=1)*risktime/365.25;\n    albny=(alb-35)*risktime/365.25;\n    biliny=(bili-50)*risktime/365.25;\nrun;\n\n* link=id;\n* Constant effects per year;\nproc genmod data=pbc3add;\n    model fail=time1 time2 time3 tment1 albny biliny/dist=poi link=id noint;\nrun;\n\n\n\n\n\n\n\nTable 2.13\n\nRSAS\n\n\n\n\nCode show/hide\n# Death without transplantation\ncoxph(Surv(days, status == 2) ~ tment + alb + log2bili + sex + age,\n           method = \"breslow\", data = pbc3)\n\n\nCall:\ncoxph(formula = Surv(days, status == 2) ~ tment + alb + log2bili + \n    sex + age, data = pbc3, method = \"breslow\")\n\n             coef exp(coef) se(coef)      z        p\ntment    -0.42049   0.65672  0.26822 -1.568   0.1169\nalb      -0.06992   0.93247  0.02906 -2.406   0.0161\nlog2bili  0.69178   1.99726  0.09303  7.436 1.04e-13\nsex       0.48557   1.62510  0.31943  1.520   0.1285\nage       0.07335   1.07611  0.01621  4.524 6.06e-06\n\nLikelihood ratio test=98.71  on 5 df, p=< 2.2e-16\nn= 343, number of events= 60 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\n# Transplantation\ncoxph(Surv(days, status == 1) ~ tment + alb + log2bili + sex + age,\n           method = \"breslow\", data = pbc3) \n\n\nCall:\ncoxph(formula = Surv(days, status == 1) ~ tment + alb + log2bili + \n    sex + age, data = pbc3, method = \"breslow\")\n\n             coef exp(coef) se(coef)      z        p\ntment    -0.67305   0.51015  0.41318 -1.629   0.1033\nalb      -0.09400   0.91029  0.03871 -2.428   0.0152\nlog2bili  0.83213   2.29820  0.14655  5.678 1.36e-08\nsex       0.20378   1.22602  0.56329  0.362   0.7175\nage      -0.04805   0.95309  0.02138 -2.247   0.0246\n\nLikelihood ratio test=64.95  on 5 df, p=1.15e-12\nn= 343, number of events= 28 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\n# Failure of medical treatment\ncoxph(Surv(days, status != 0) ~ tment + alb + log2bili + sex + age,\n           method = \"breslow\", data = pbc3)\n\n\nCall:\ncoxph(formula = Surv(days, status != 0) ~ tment + alb + log2bili + \n    sex + age, data = pbc3, method = \"breslow\")\n\n             coef exp(coef) se(coef)      z       p\ntment    -0.50964   0.60071  0.22339 -2.281 0.02252\nalb      -0.07136   0.93112  0.02293 -3.112 0.00186\nlog2bili  0.73778   2.09128  0.07768  9.497 < 2e-16\nsex       0.58536   1.79563  0.26738  2.189 0.02858\nage       0.03077   1.03125  0.01199  2.566 0.01029\n\nLikelihood ratio test=134.3  on 5 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0 1)=tment alb log2bili sex age / rl;\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0 2)=tment alb log2bili sex age / rl;\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili sex age / rl;\nrun;"
  },
  {
    "objectID": "Ch2.html#guinea-bissau-childhood-vaccination-study",
    "href": "Ch2.html#guinea-bissau-childhood-vaccination-study",
    "title": "2  Intuition for intensity models",
    "section": "Guinea-Bissau childhood vaccination study",
    "text": "Guinea-Bissau childhood vaccination study\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nbissau <- read.csv(\"data/bissau.csv\")\nbissau$agem <- as.integer(bissau$age/30.4)\n\n\n\n\n\n\nCode show/hide\nproc import out=bissau\n    datafile=\"data/bissau.csv\"\n    dbms=csv replace;\nrun;\ndata bissau; \n    set bissau; \n    agem = int(age/30.4); * Age in months; \nrun;\n\n\n\n\n\n\n\nIn-text, p. 58: Cox model unadjusted for age\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\ncoxfit0 <- coxph(Surv(fuptime, dead) ~ bcg, \n                 data = bissau, method = \"breslow\")\ncoxfit0\n\n\nCall:\ncoxph(formula = Surv(fuptime, dead) ~ bcg, data = bissau, method = \"breslow\")\n\n       coef exp(coef) se(coef)      z      p\nbcg -0.2821    0.7542   0.1353 -2.085 0.0371\n\nLikelihood ratio test=4.28  on 1 df, p=0.03851\nn= 5274, number of events= 222 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=bissau;\n    model fuptime*dead(0)=bcg / rl;\nrun;\n\n\n\n\n\n\n\nTable 2.12\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model in column 1\ncoxfit1 <- coxph(Surv(fuptime, dead) ~ bcg + agem, \n                 data = bissau, method = \"breslow\")\ncoxfit1\n\n\nCall:\ncoxph(formula = Surv(fuptime, dead) ~ bcg + agem, data = bissau, \n    method = \"breslow\")\n\n         coef exp(coef) se(coef)      z      p\nbcg  -0.35346   0.70225  0.14423 -2.451 0.0143\nagem  0.05472   1.05624  0.03844  1.424 0.1546\n\nLikelihood ratio test=6.29  on 2 df, p=0.04301\nn= 5274, number of events= 222 \n\n\nCode show/hide\n# Make age the time variable instead\nbissau$agein <- bissau$age/(365.24/12)\nbissau$ageout <- bissau$agein + bissau$fuptime/(365.24/12)\n\n# Cox model in column 2\n# option timefix=F aligns to SAS calculation\n# see vignette 'Roundoff error and tied times' for survival package\ncoxfit2 <- coxph(Surv(agein, ageout, dead) ~ bcg, \n                 data = bissau, method = \"breslow\",timefix=F)\ncoxfit2\n\n\nCall:\ncoxph(formula = Surv(agein, ageout, dead) ~ bcg, data = bissau, \n    method = \"breslow\", timefix = F)\n\n       coef exp(coef) se(coef)      z      p\nbcg -0.3558    0.7006   0.1407 -2.529 0.0114\n\nLikelihood ratio test=6.28  on 1 df, p=0.01218\nn= 5274, number of events= 222 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=bissau;\n    model fuptime*dead(0)=bcg agem / rl;\nrun;\n\n* Make age the time variable instead;\ndata bissau; \n    set bissau;\n    agein=age/(365.24/12);\n    ageout=agein+fuptime/(365.24/12);\nrun;\n\n* Cox model fit - column 2; \nproc phreg data=bissau;\n    model ageout*dead(0)=bcg / entry=agein rl;\nrun;\n\n\n\n\n\n\n\nFigure 2.13\n\nRSAS\n\n\n\n\nCode show/hide\n# General plotting style \nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20),\n        legend.position = \"bottom\", \n        legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        legend.key.size = unit(2,\"line\")) \n\n\n# Extract cumulative baseline hazard for covariate pattern\ncovdata<-data.frame(rbind(c(bcg=0, agem=3)))\ncoxcumhaz <- basehaz(coxfit1, covdata)\n# Create figure\nfig2.13 <- ggplot(aes(x = time / (365.24/12), y = hazard), data = coxcumhaz) + \n  geom_step(size = 1) + \n  xlab(\"Follow-up time (months)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     breaks = seq(0, 7, by = 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  theme_general\n\nfig2.13\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Cox model fit and get cumulative baseline hazard ; \nproc phreg data=bissau;\n    model fuptime*dead(0)=bcg agem/rl;\n    baseline out=hazfuptime covariates=cov1 cumhaz=basefup;\nrun;\ndata hazfuptime_months; \n    set hazfuptime; \n    fuptime_m = fuptime / (365.24/12); \nrun;\nproc gplot data=hazfuptime_months;\n    plot basefup*fuptime_m/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 7 by 1 minor=none\n    label=('Follow-up time (months)');\n    axis2 order=0 to 0.06 by 0.01 minor=none\n    label=(a=90 'Cumulative hazard');\n    symbol1 v=none i=stepjl c=blue;\nrun;\nquit;\n* or using proc sgplot;\nods graphics on;\nproc sgplot data=hazfuptime_months;\n  step x=fuptime_m y=basefup / justify=left;\n    xaxis grid values=(0 to 7 by 1);\n    yaxis grid values=(0 to 0.06 by 0.01);\n    label fuptime_m=\"Follow-up time (months)\";\n    label basefup=\"Cumulative hazard\";\nrun;\n\n\n\n\n\n\n\nFigure 2.14\n\nRSAS\n\n\n\n\nCode show/hide\n# Extract cumulative baseline hazard\ncoxcumhaz <- basehaz(coxfit2, centered = FALSE)\nfig2.14 <- ggplot(aes(x = time, y = hazard), data = coxcumhaz) + \n  geom_step(size = 1) + \n  xlab(\"Age (months)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     breaks = seq(0, 15, by = 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.1)), \n                     breaks = seq(0, 0.15, by = 0.05), \n                     labels = c(\"0\", \"0.05\", \"0.10\", \"0.15\")) +\n  theme_general\n\nfig2.14\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata cov2;\ninput bcg;\ndatalines;\n0\n;\nrun;\n* Cox model fit and get cumulative baseline hazard ; \nproc phreg data=bissau;\n    model ageout*dead(0)=bcg / entry=agein rl;\n    baseline out=hazage covariates=cov2 cumhaz=baseage;\nrun;\nproc gplot data=hazage;\n    plot baseage*ageout/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 15 by 5 minor=none\n        label=('Age (months)');\n    axis2 order=0 to 0.15 by 0.05 minor=none \n        label=(a=90 'Cumulative baseline hazard');\n    symbol1  v=none i=stepjl c=blue;\nrun;\nquit;"
  },
  {
    "objectID": "Ch2.html#recurrent-episodes-in-affective-disorders",
    "href": "Ch2.html#recurrent-episodes-in-affective-disorders",
    "title": "2  Intuition for intensity models",
    "section": "Recurrent episodes in affective disorders",
    "text": "Recurrent episodes in affective disorders\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\naffective <- read.csv(\"data/affective.csv\")\naffective$wait <- with(affective, stop - start)\n\n\n\n\n\n\nCode show/hide\nproc import out=affective\n    datafile=\"data/affective.csv\"\n    dbms=csv replace;\nrun;\ndata affective; \n    set affective; \n    wait = stop - start; \nrun; \n\n\n\n\n\n\n\nTable 2.14\nNB: Small differences in estimates between R and SAS (SAS output used for table in book).\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model for 1., 2., 3., 4. episode 'Markov': Column 1\nlibrary(survival)\ncoxph(Surv(start, stop, status == 1) ~ bip, method = \"breslow\",\n                        data = subset(affective, episode == 1 & state == 0))\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip, data = subset(affective, \n    episode == 1 & state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)     z     p\nbip 0.3552    1.4264   0.2500 1.421 0.155\n\nLikelihood ratio test=1.89  on 1 df, p=0.1692\nn= 116, number of events= 99 \n\n\nCode show/hide\ncoxph(Surv(start, stop, status == 1) ~ bip, method = \"breslow\",\n                        data = subset(affective, episode == 2 & state == 0))\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip, data = subset(affective, \n    episode == 2 & state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)     z     p\nbip 0.1890    1.2080   0.2604 0.726 0.468\n\nLikelihood ratio test=0.51  on 1 df, p=0.4751\nn= 91, number of events= 82 \n\n\nCode show/hide\ncoxph(Surv(start, stop, status == 1) ~ bip, method = \"breslow\",\n                        data = subset(affective, episode == 3 & state == 0)) \n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip, data = subset(affective, \n    episode == 3 & state == 0), method = \"breslow\")\n\n       coef exp(coef) se(coef)      z     p\nbip -0.1175    0.8891   0.3005 -0.391 0.696\n\nLikelihood ratio test=0.16  on 1 df, p=0.6936\nn= 74, number of events= 62 \n\n\nCode show/hide\ncoxph(Surv(start, stop, status == 1) ~ bip, method = \"breslow\",\n                        data = subset(affective, episode == 4 & state == 0)) \n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip, data = subset(affective, \n    episode == 4 & state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)     z       p\nbip 1.1500    3.1581   0.3536 3.252 0.00114\n\nLikelihood ratio test=9.93  on 1 df, p=0.001623\nn= 56, number of events= 47 \n\n\nCode show/hide\n# Cox model for 1., 2., 3., 4. episode 'Gap time': Column 2\ncoxph(Surv(wait, status == 1) ~ bip, method = \"breslow\",\n                        data = subset(affective, episode == 1 & state == 0)) \n\n\nCall:\ncoxph(formula = Surv(wait, status == 1) ~ bip, data = subset(affective, \n    episode == 1 & state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)     z     p\nbip 0.3991    1.4905   0.2487 1.605 0.109\n\nLikelihood ratio test=2.39  on 1 df, p=0.1222\nn= 116, number of events= 99 \n\n\nCode show/hide\ncoxph(Surv(wait, status == 1) ~ bip, method = \"breslow\",\n                     data = subset(affective, episode == 2 & state == 0))\n\n\nCall:\ncoxph(formula = Surv(wait, status == 1) ~ bip, data = subset(affective, \n    episode == 2 & state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)    z     p\nbip 0.2165    1.2418   0.2579 0.84 0.401\n\nLikelihood ratio test=0.68  on 1 df, p=0.41\nn= 91, number of events= 82 \n\n\nCode show/hide\ncoxph(Surv(wait, status == 1) ~ bip, method = \"breslow\",\n                     data = subset(affective, episode == 3 & state == 0)) \n\n\nCall:\ncoxph(formula = Surv(wait, status == 1) ~ bip, data = subset(affective, \n    episode == 3 & state == 0), method = \"breslow\")\n\n       coef exp(coef) se(coef)      z     p\nbip -0.1114    0.8946   0.2867 -0.389 0.698\n\nLikelihood ratio test=0.15  on 1 df, p=0.6953\nn= 74, number of events= 62 \n\n\nCode show/hide\ncoxph(Surv(wait, status == 1) ~ bip, method = \"breslow\",\n                     data = subset(affective, episode == 4 & state == 0)) \n\n\nCall:\ncoxph(formula = Surv(wait, status == 1) ~ bip, data = subset(affective, \n    episode == 4 & state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)     z     p\nbip 0.5964    1.8155   0.3183 1.874 0.061\n\nLikelihood ratio test=3.31  on 1 df, p=0.06905\nn= 56, number of events= 47 \n\n\nCode show/hide\n# AG cox model, total time\ncoxph(Surv(start, stop, status == 1) ~ bip, method = \"breslow\",\n                        data = subset(affective, state == 0))\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip, data = subset(affective, \n    state == 0), method = \"breslow\")\n\n       coef exp(coef) se(coef)     z        p\nbip 0.36593   1.44186  0.09448 3.873 0.000107\n\nLikelihood ratio test=14.24  on 1 df, p=0.0001612\nn= 626, number of events= 542 \n\n\nCode show/hide\n# AG cox model, gap time\ncoxph(Surv(wait, status == 1) ~ bip, method = \"breslow\",\n                   data = subset(affective, state == 0))\n\n\nCall:\ncoxph(formula = Surv(wait, status == 1) ~ bip, data = subset(affective, \n    state == 0), method = \"breslow\")\n\n       coef exp(coef) se(coef)     z     p\nbip 0.12555   1.13377  0.09445 1.329 0.184\n\nLikelihood ratio test=1.74  on 1 df, p=0.1875\nn= 626, number of events= 542 \n\n\nCode show/hide\n# PWP cox model, total time\ncoxph(Surv(start, stop, status == 1) ~ strata(episode) + bip, method = \"breslow\",\n                   data = subset(affective, state == 0)) \n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ strata(episode) + \n    bip, data = subset(affective, state == 0), method = \"breslow\")\n\n      coef exp(coef) se(coef)     z     p\nbip 0.2418    1.2736   0.1121 2.157 0.031\n\nLikelihood ratio test=4.54  on 1 df, p=0.03312\nn= 626, number of events= 542 \n\n\nCode show/hide\n# PWP cox model, gap time\ncoxph(Surv(wait, status == 1) ~ strata(episode) + bip, method = \"breslow\", \n                    data = subset(affective, state == 0)) \n\n\nCall:\ncoxph(formula = Surv(wait, status == 1) ~ strata(episode) + bip, \n    data = subset(affective, state == 0), method = \"breslow\")\n\n       coef exp(coef) se(coef)     z     p\nbip 0.02781   1.02820  0.10040 0.277 0.782\n\nLikelihood ratio test=0.08  on 1 df, p=0.7821\nn= 626, number of events= 542 \n\n\n\n\n\n\nCode show/hide\nproc sort data=affective out=state0;\n  where state=0;\n  by state episode;\nrun;\n\n* Cox model for 1., 2., 3., 4. episode 'Markov': Column 1; \nproc phreg data=state0;\n  where episode<=4;\n    model stop*status (2 3)= bip / entry=start;\n    by episode;\nrun;\n\n* AG model, no past; \nproc phreg data=state0;\n    model stop*status (2 3)= bip / entry=start;\nrun;\n\n* PWP model; \nproc phreg data=state0; \n    model stop*status (2 3)= bip / entry=start;\n    strata episode;\nrun; \n\n* Cox model for 1., 2., 3., 4. episode 'Gap time': Column 2; \nproc phreg data=state0;\n  where episode<=4;\n    model wait*status (2 3)= bip;\n    by episode;\nrun;\n\n* AG gap time model; \nproc phreg data=state0;\n    model wait*status (2 3)= bip;\nrun;\n\n* PWP gap time model; \nproc phreg data=state0;\n    model wait*status (2 3)= bip;\n    strata episode;\nrun;"
  },
  {
    "objectID": "Ch2.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "href": "Ch2.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "title": "2  Intuition for intensity models",
    "section": "LEADER cardiovascular trial in type 2 diabetes",
    "text": "LEADER cardiovascular trial in type 2 diabetes\n\n\n\n\nRead data\n\nRSAS\n\n\nAssume that the LEADER data set is loaded in data set leader.\n\n\nCode show/hide\n# One data set per recurrent endpoint type\nleader_mi <- subset(leader, type == \"recurrent_mi\")\nleader_3p <- subset(leader, type == \"recurrent_comb\")\n\n\n\n\n\n\nCode show/hide\ndata leader_mi; \n    set leader; \n    where type = \"recurrent_mi\"; \nrun; \n\n\n\n\n\n\n\nFigure 2.15\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\",\n        legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        legend.key.size = unit(2,\"line\"),\n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Nelson-Aalen estimate of the cumulative hazard of MI\nlibrary(survival)\nfit <- survfit(Surv(start, stop, status == 1) ~ treat, data = leader_mi,\n               id = id, ctype = 1)\n\nplotdata <- data.frame(cumhaz = fit$cumhaz, time = fit$time,\n                       treat = c(rep(\"Placebo\", fit$strata[[1]]),\n                                 rep(\"Liraglutide\", fit$strata[[2]])))\n\nfig2.15 <- ggplot(aes(x = time * 1 / (365.25 / 12), y = cumhaz), data = plotdata) +\n  geom_step(aes(linetype = treat), linewidth = 1) +\n  scale_linetype_discrete(\"Treatment\") +\n  ylab(\"Cumulative hazard\") +\n  xlab(\"Time since randomization (months)\") +\n  theme_bw() +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)),\n                     limits = c(0, 65), breaks = seq(0, 60, by = 12)) +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)),\n                     limits = c(0, 0.12), breaks = seq(0, 0.12, by = 0.02)) +\n  theme_general\n\nfig2.15\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Nelson-Aalen estimates; \nproc phreg data=leader_mi noprint;\n    model stop*status(0 2)=/entry=start;\n    id id;\n    strata treat;\n  baseline out=na_data cumhaz=naa;\nrun;\ndata na_est;\n    set na_data; \n    time = stop/(365.25/12);\nrun; \nproc sgplot data=na_est;\n    step x=time y=naa / group=treat justify=left;\n    xaxis grid values=(0 to 60 by 12);\n    yaxis grid values=(0 to 0.12 by 0.02);\n    label time=\"Time since randomisation (months)\";\n    label cumevent=\"Cumulative hazard\"; \nrun; \n\n\n\n\n\n\n\nTable 2.15\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model first event\nlibrary(survival)\ncoxph(Surv(start, stop, status == 1) ~ treat,\n      data = subset(leader_mi, eventno == 1), method = \"breslow\",)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = subset(leader_mi, \n    eventno == 1), method = \"breslow\")\n\n          coef exp(coef) se(coef)      z      p\ntreat -0.15949   0.85258  0.07984 -1.998 0.0458\n\nLikelihood ratio test=4  on 1 df, p=0.04545\nn= 9340, number of events= 631 \n\n\nCode show/hide\n# AG Cox type\ncoxph(Surv(start, stop, status == 1) ~ treat, data = leader_mi,\n                   method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = leader_mi, \n    method = \"breslow\")\n\n          coef exp(coef) se(coef)      z      p\ntreat -0.16418   0.84859  0.07184 -2.285 0.0223\n\nLikelihood ratio test=5.24  on 1 df, p=0.02208\nn= 10120, number of events= 780 \n\n\nCode show/hide\n# AG model, piece-wise constant hazards\n# Calculating cuts -> 5\nalltimes <- seq(0,max(leader_mi$stop),length=99)\nFunctionIntervalM <- function(a,b) {\n  seq(from=min(a), to = max(a), by = (max(a)-min(a))/b)\n}\ncuts <- FunctionIntervalM(a = alltimes, b = 5)\ncut_data <- survSplit(Surv(start, stop, status == 1) ~ .,\n                      leader_mi,\n                      cut = cuts[-1],\n                      episode = \"timegroup\")\ncoxph(Surv(start, stop, event) ~ treat + strata(timegroup), data = cut_data)\n\n\nCall:\ncoxph(formula = Surv(start, stop, event) ~ treat + strata(timegroup), \n    data = cut_data)\n\n          coef exp(coef) se(coef)      z      p\ntreat -0.16418   0.84859  0.07184 -2.285 0.0223\n\nLikelihood ratio test=5.24  on 1 df, p=0.02207\nn= 39070, number of events= 780 \n\n\nCode show/hide\n# PWP 2nd event\ncoxph(Surv(start, stop, status == 1) ~ treat,\n                     method = \"breslow\", subset = (eventno == 2),\n                     data = leader_mi)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = leader_mi, \n    subset = (eventno == 2), method = \"breslow\")\n\n          coef exp(coef) se(coef)      z     p\ntreat -0.04662   0.95445  0.19686 -0.237 0.813\n\nLikelihood ratio test=0.06  on 1 df, p=0.8126\nn= 631, number of events= 105 \n\n\nCode show/hide\n# PWP 3rd event\ncoxph(Surv(start, stop, status == 1) ~ treat,\n                   method = \"breslow\", subset = (eventno == 3),\n                   data = leader_mi)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = leader_mi, \n    subset = (eventno == 3), method = \"breslow\")\n\n          coef exp(coef) se(coef)      z     p\ntreat -0.02328   0.97699  0.39979 -0.058 0.954\n\nLikelihood ratio test=0  on 1 df, p=0.9536\nn= 105, number of events= 27 \n\n\nCode show/hide\n# PWP 4th event\ncoxph(Surv(start, stop, status == 1) ~ treat,\n                   method = \"breslow\", subset = (eventno == 4),\n                   data = leader_mi)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = leader_mi, \n    subset = (eventno == 4), method = \"breslow\")\n\n        coef exp(coef) se(coef)     z     p\ntreat 0.6288    1.8753   0.7370 0.853 0.394\n\nLikelihood ratio test=0.75  on 1 df, p=0.3852\nn= 27, number of events= 9 \n\n\nCode show/hide\n# PWP 5th event\ncoxph(Surv(start, stop, status == 1) ~ treat,\n                   method = \"breslow\", subset = (eventno == 5),\n                   data = leader_mi)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = leader_mi, \n    subset = (eventno == 5), method = \"breslow\")\n\n         coef exp(coef) se(coef)      z     p\ntreat -0.4287    0.6514   1.2299 -0.349 0.727\n\nLikelihood ratio test=0.13  on 1 df, p=0.7221\nn= 9, number of events= 3 \n\n\nCode show/hide\n# PWP all\ncoxph(Surv(start, stop, status == 1) ~ treat + strata(eventno),\n                   method = \"breslow\",\n                   data = leader_mi)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat + strata(eventno), \n    data = leader_mi, method = \"breslow\")\n\n          coef exp(coef) se(coef)      z      p\ntreat -0.13020   0.87792  0.07222 -1.803 0.0714\n\nLikelihood ratio test=3.26  on 1 df, p=0.07103\nn= 10120, number of events= 780 \n\n\n\n\n\n\nCode show/hide\nproc sort data=leader_mi;\n  by eventno;\nrun;\n\n* AG Cox type;\nproc phreg data=leader_mi;\n  model stop*status(0 2)= treat / entry=start; \nrun;\n\n* Cox model first event and PWP models 2nd, ..., 5th event;\nproc phreg data=leader_mi;\n  where eventno<=5;\n  model stop*status(0 2)= treat / entry=start; \n    by eventno;\nrun;\n\n* PWP model all events;\nproc phreg data=leader_mi;\n  model stop*status(0 2)= treat / entry=start; \n    strata eventno;\nrun;"
  },
  {
    "objectID": "Ch2.html#exercises",
    "href": "Ch2.html#exercises",
    "title": "2  Intuition for intensity models",
    "section": "Exercises",
    "text": "Exercises\nThe SAS solutions are available as single files for download:\n\nExercises 2.1 - 2.7 (The Copenhagen Holter study)\nExercise 2.8 (Recurrent episodes in affective disorders)\n\n\nExercise 2.1\nConsider the data from the Copenhagen Holter study (Example 1.1.8).\nThe data should be loaded as chs_data:\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nNote that the time variables, timeafib, timestroke and timedeath, are measured in days. We will first convert them to years for easier interpretations.\n\n\nCode show/hide\nchs_data$timeafib   <- chs_data$timeafib/365.25\nchs_data$timestroke <- chs_data$timestroke/365.25\nchs_data$timedeath  <- chs_data$timedeath/365.25\n\n\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out = chs_data\ndatafile = 'data/cphholter.csv'\ndbms= csv replace;\ngetnames=yes;\nrun;\n\n* We will convert the time variables ('timeafib', 'timestroke', and 'timedeath') from days to years;\n\ndata chs_data;\nset chs_data;\ntimeafib = timeafib/365.25;\ntimestroke = timestroke/365.25;\ntimedeath = timedeath/365.25;\nrun;\n\n\n\n\n\n\n1.\nEstimate non-parametrically the cumulative hazards of death for subjects with or without ESVEA.\n\nRSAS\n\n\nThe cumulative hazard can be estimated non-parametrically using the Nelson-Aalen estimator. It is implemented in the survfit function from the survival package. The formula argument must have a Surv object on the left side of ‘~’. Since the event of interest is death the time variable of the Surv object is timedeath and the status indicator is death. The covariate(s), esvea in this analysis, should be on the right side of the ‘~’. The cumulative hazard is then stored as the object cumhaz, and can be plotted against time.\n\n\nCode show/hide\n# Estimating the cumulative hazards for subjects with or without ESVEA non-parametrically.\nnaafit211 <- survfit(formula = Surv(timedeath, death) ~ esvea, data = chs_data)\n\nnaadata211 <- data.frame(time = naafit211$time,\n                         cumhaz = naafit211$cumhaz, \n                         esvea = c(rep(names(naafit211$strata)[1], naafit211$strata[1]),\n                                   rep(names(naafit211$strata)[2], naafit211$strata[2])))\n\n(fig211 <- ggplot(data = naadata211) + geom_step(aes(x = time, y = cumhaz, linetype = esvea), linewidth = 1) + \n    scale_linetype_discrete(\"ESVEA\", labels = c(\"0\", \"1\")) + \n    xlab(\"Time since randomization (years)\") + \n    ylab(\"Cumulative hazard\"))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* We will estimate the cumulative hazards of death for subjects with or without ESVEA non-parametrically with the Nelson-Aalen \n  estimator. This can be done with the 'phreg' procedure. Since the event of interest is death the time variable used in the model \n  statement is 'timedeath' and the censoring variable is 'death'. Furthermore, 'esvea' is specified in the strata statement to \n  obtain different estimates of the hazards for subjects with or without ESVEA. The cumulative hazard are the stored in the\n  'hazdata' file created with the baseline statement;\n\nproc phreg data=chs_data noprint; \n    model timedeath*death(0)=;\n    strata esvea;\n    baseline out=hazdata cumhaz=naa;\nrun;\n\n* The estimates are then plotted using the gplot procedure;\n\ntitle \"2.1.1: Nelson-Aalen estimates for subjects with or without ESVEA\";\nproc gplot data=hazdata;\n    plot naa*timedeath=esvea /haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 15.19 by 1 label=('Time (Years)');\n    axis2 order=0 to 1 by 0.2 label=(a=90 'Cumulative hazard');\n    symbol1 i=stepjl c=red;\n    symbol2 i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\n2.\nMake a non-parametric test for comparison of the two.\n\nRSAS\n\n\nThe Nelson-Aalen estimate of the cumulative hazards for subjects with or without ESVEA can be compared with a logrank test which is implemented as the function survdiff from the survival package.\n\n\nCode show/hide\n# Logrank test\nsurvdiff(formula = Surv(timedeath, death) ~ esvea, data = chs_data)\n\n\nCall:\nsurvdiff(formula = Surv(timedeath, death) ~ esvea, data = chs_data)\n\n          N Observed Expected (O-E)^2/E (O-E)^2/V\nesvea=0 579      206    228.4       2.2      17.7\nesvea=1  99       55     32.6      15.4      17.7\n\n Chisq= 17.7  on 1 degrees of freedom, p= 3e-05 \n\n\nWe get a chi-square statistic of 17.7 on 1 degree of freedom and a corresponding p-value of \\(3 \\cdot 10^{-5}\\).\n\n\n\n\nCode show/hide\n* The hazards can be compared with a log rank test which is implemented in the lifetest procedure. The relevant time variable \n  'timedeath' and censoring variable 'death' are specified in the time statement and 'esvea' is used in the strata statement.;\n\ntitle \"2.1.2: Log rank test comparing the hazards for the subjects with or without ESVEA\";\nproc lifetest data=chs_data notable plots=none; \n    time timedeath*death(0);\n    strata esvea;\nrun; \n\n* We get a Chi-square statistic of 17.66 on 1 degree of freedom with a corresponding p-value <0.0001;\n\n\n\n\n\n\n\n3.\nMake a similar analysis based on a model where the hazard is assumed constant within 5-year intervals.\n\nRSAS\n\n\nTo estimate the cumulative hazard under the assumption that the hazard is constant within 5-year intervals we must first split each record into sub-records with cut times at 5 and 10 years. This can be done using the survSplit function from the survival package. Duration of each sub-record is then stored as the column duration.\n\n\nCode show/hide\n#Splitting each record into subrecords\ndata_pch <- survSplit(formula = Surv(timedeath, death) ~ esvea, \n          data = chs_data, \n          cut = c(5,10), #Cut points\n          episode = \"interval\")\n#Adding column with name interval\ndata_pch$duration <- data_pch$timedeath - data_pch$tstart #Duration of each subrecord\n\n\nWe can then estimate the hazard within each of the intervals \\([0,5), [5,10), [10,15.19)\\) using an occurrence/exposure rate.\nFor subjects without ESVEA we get the following estimates:\n\n\nCode show/hide\nint1esvea0 <- subset(data_pch, interval == 1 & esvea == 0) #All subrecords in the interval [0,5) with ESVEA = 0\nint2esvea0 <- subset(data_pch, interval == 2 & esvea == 0) #All subrecords in the interval [5,10) with ESVEA = 0\nint3esvea0 <- subset(data_pch, interval == 3 & esvea == 0) #All subrecords in the interval [10,15.19) with ESVEA = 0\n\nhaz1esvea0 <- sum(int1esvea0$death)/sum(int1esvea0$duration) #Hazard estimate for the interval [0,5)\nhaz2esvea0 <- sum(int2esvea0$death)/sum(int2esvea0$duration) #Hazard estimate for the interval [5,10) \nhaz3esvea0 <- sum(int3esvea0$death)/sum(int3esvea0$duration) #Hazard estimate for the interval [10,15.19)\n\n#Table with hazard estimates for subjects without ESVEA\ncbind(c(\"0-5 years\",\"5-10 years\",\"10+ years\"), c(haz1esvea0,haz2esvea0,haz3esvea0))\n\n\n     [,1]         [,2]                \n[1,] \"0-5 years\"  \"0.0157326574030543\"\n[2,] \"5-10 years\" \"0.0296926508258624\"\n[3,] \"10+ years\"  \"0.0454654436742393\"\n\n\nAnd for the group with ESVEA we get\n\n\nCode show/hide\nint1esvea1 <- subset(data_pch, interval == 1 & esvea == 1) #All subrecords in the interval [0,5) with ESVEA = 1\nint2esvea1 <- subset(data_pch, interval ==2 & esvea == 1) #All subrecords in the interval [5,10) with ESVEA = 1\nint3esvea1 <- subset(data_pch, interval ==3 & esvea == 1) #All subrecords in the interval [10,15,19) with ESVEA = 1\n\nhaz1esvea1 <- sum(int1esvea1$death)/sum(int1esvea1$duration) #Hazard estimate for the interval [0,5)\nhaz2esvea1 <- sum(int2esvea1$death)/sum(int2esvea1) #Hazard estimate for the interval [5,10)\nhaz3esvea1 <- sum(int3esvea1$death)/sum(int3esvea1$duration) #Hazard estimate for the interval [10,15)\n\n#Table with estimates for subjects with ESVEA\ncbind(c(\"0-5 years\",\"5-10 years\",\"10+ years\"), c(haz1esvea1,haz2esvea1,haz3esvea1))\n\n\n     [,1]         [,2]                 \n[1,] \"0-5 years\"  \"0.0386657394025027\" \n[2,] \"5-10 years\" \"0.00940130241177833\"\n[3,] \"10+ years\"  \"0.0813048849711176\" \n\n\nAlternatively, all estimates can be obtained at once through a Poisson regression using the glm function with death as the dependent variable, the categorical variable of the different combinations of interval and ESVEA status, int_esvea, as the covariate and the logarithm of duration as an offset. Furthermore, we must include ‘-1’ as a ‘covariate to’ avoid estimating an intercept.\nWe get the hazards by taking the exponential of the coefficients estimated from this Poisson model.\n\n\nCode show/hide\n# Adding a categorical covariate indicating the interval and ESVEA status for each subrecord\ndata_pch$int_esvea <- data_pch$interval + (data_pch$esvea*3)\n\n#Poisson regression \npoisson213 <- glm(death ~ factor(int_esvea) - 1 + offset(log(duration)), family = poisson(), data = data_pch)\npoisson_est <- as.numeric(exp(coefficients(poisson213)))\n\n#Table with estimates\ncbind(c(\"0-5 years, ESVEA = 0\",\"5-10 years, ESVEA = 0\",\"10+ years, ESVEA = 0\", \"0-5 years, ESVEA = 1\",\"5-10 years, ESVEA = 1\",\"10+ years, ESVEA = 1\"), poisson_est)\n\n\n                             poisson_est         \n[1,] \"0-5 years, ESVEA = 0\"  \"0.0157326574052703\"\n[2,] \"5-10 years, ESVEA = 0\" \"0.0296926510588424\"\n[3,] \"10+ years, ESVEA = 0\"  \"0.0454654437768701\"\n[4,] \"0-5 years, ESVEA = 1\"  \"0.0386657394029923\"\n[5,] \"5-10 years, ESVEA = 1\" \"0.0460542296617026\"\n[6,] \"10+ years, ESVEA = 1\"  \"0.0813048849874842\"\n\n\nThe cumulative hazards for subjects with or without ESVEA under the piece-wise constant hazard assumption can be compared using a likelihood ratio test (LRT). This is done by fitting a model under the null hypothesis (i.e only considering the intervals \\([0,5), [5,10)\\) and \\([10,15.19)\\) but not whether subjects have ESVEA or not) and then comparing the two models using anova with the argument ‘test = “LRT”’.\n\n\nCode show/hide\n#Null model\npoisson_null213 <- glm(death ~ factor(interval) - 1 + offset(log(duration)), family = poisson(), data = data_pch)\n\n#Likelihood ratio test (LRT)\nanova(poisson_null213,poisson213, test = \"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: death ~ factor(interval) - 1 + offset(log(duration))\nModel 2: death ~ factor(int_esvea) - 1 + offset(log(duration))\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)   \n1      1816     1444.7                        \n2      1813     1428.5  3    16.22 0.001022 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe get a chi-squared statistic of 16.22 with 3 degrees of freedom and a corresponding p-value of 0.001.\nThe piece-wise constant cumulative hazards are plotted together with the Nelson-Aalen cumulative hazards below\n\n\nCode show/hide\n#Data frame with time and cumulative hazard under poisson assumption for subjects without ESVEA\npoisson_esvea0 <- as.data.frame(\n  cbind(time = c(0,5,10,15.19), \n        cumhaz = c(0,5*poisson_est[1], 5*poisson_est[1] + 5*poisson_est[2], 5*poisson_est[1] + 5*poisson_est[2] + 5.19*poisson_est[3])))\n\n#Data frame with time and cumulative hazard under poisson assumption for subjects with ESVEA\npoisson_esvea1 <- as.data.frame(\n  cbind(time = c(0,5,10,15.19), \n        cumhaz = c(0,5*poisson_est[4], 5*poisson_est[4] + 5*poisson_est[5], 5*poisson_est[4] + 5*poisson_est[5] + 5.19*poisson_est[6])))\n\n#Plot of Nelson-Aalen together with Poisson cumulative hazard\nfig211 + geom_line(data = poisson_esvea0, aes(x = time, y = cumhaz), linewidth = 1) + \n         geom_line(data = poisson_esvea1, aes(x = time, y = cumhaz), linewidth = 1, linetype = \"dotted\") \n\n\n\n\n\nCode show/hide\n#  geom_line(data =poisson_esvea1, aes(x = x, y = y), color =\"#00BFC4\", linewidth = 0.8)\n\n\n\n\n\n\nCode show/hide\n* To estimate the cumulative hazard under the assumption that the hazard is constant within 5-year intervals we must first split \n  each record into subrecords with cut times at 5 and 10 years. We will create a new data set 'chs_pch213' where 'cens' indicates if the\n  subject died during each 5-year interval, 'risktime' is the time at risk during each 5-year interval, logrisk is the logarithm of\n  the risk time and 'interval' is a categorical variable with 6 levels corresponding to the different combinations of interval and \n  ESVEA status;\n  \ndata chs_pch213; \n    set chs_data;\n    cens=(timedeath<=5)*(death = 1);\n    risktime=min(5,timedeath);\n    logrisk = log(risktime);\n    interval=1;\n    if esvea = 1 then do; interval =4; end; output;\n    if timedeath>5 then do;\n    cens=(timedeath<=10)*(death = 1);\n    risktime=min(5,timedeath-5);\n    logrisk = log(risktime);\n    interval=2;\n    if esvea = 1 then do; interval = 5; end; output; end;\n    if timedeath>10 then do;\n    cens= (death = 1); \n    risktime=timedeath-10;\n    logrisk = log(risktime);\n    interval=3;\n    if esvea = 1 then do; interval = 6; end; output; end;\nrun;\n\n\n* We can then estimate the hazard within each of the intervals [0,5), [5,10), [10,15.19). \n  This can be done with the sql procedure;\n\ntitle \"2.1.3: Estimate of the hazards for subjects with or without ESVEA under the piece-wise constant hazards assumption\";\nproc sql;\n    select interval,\n    sum(cens) as sum_death, \n    sum(risktime) as sum_risktime,\n    calculated sum_death / calculated sum_risktime as hazard\n    from chs_pch213\n    group by interval;\nquit;\n\n* Alternatively, all estimates can be obtained at once through a Poisson regression using the genmod procedure. Since 'interval' is \n  a categorical variable it must be included in the class statement. 'cens' is included in the model statement as the dependent\n  variable whilst interval is included as the only explanatory variable. Furthermore the probability distribution is specified through \n  'dist = poi' and the logarithm of the offset is included as well as the argument 'noint' which is added to obtain a model without an \n  intercept. The estimates for the hazard for each of interval and status of ESVEA are then given using the estimate statement. These \n  estimates corresponds to the exponential of the estimates from the table of the maximum likelihood parameter estimation;\n\nproc genmod data=chs_pch213;\n    class interval;\n    model cens=interval / dist=poi offset=logrisk noint;\n    estimate '0-5 years, ESVEA = 0' interval 1 0 0 0 0 0;\n    estimate '5-10 years, ESVEA = 0' interval 0 1 0 0 0 0;\n    estimate '10+ years, ESVEA = 0' interval 0 0 1 0 0 0;\n    estimate '0-5 years, ESVEA = 1' interval 0 0 0 1 0 0;\n    estimate '5-10 years, ESVEA = 1' interval 0 0 0 0 1 0;\n    estimate '10+ years, ESVEA = 1' interval 0 0 0 0 0 1;\nrun;\n\n* To investigate if the hazards differ between the two groups we must fit a Poisson model where we do not stratify by ESVEA \n  and then compare the two Poisson models using a likelihood ratio test (LRT). Thus, we repeat the procedure and first create\n  a new data set 'chs_pch_null213' where no distinction is made between subjects with or without ESVEA;\n\ndata chs_pch_null213;\n  set chs_pch213;\n  if interval in (4,5,6) then interval = interval - 3;\nrun;\n\n* Then, the Poisson model is fitted;\n\ntitle \"2.1.3: Estimate of the hazard under the piece-wise constant hazards assumption with no distinction between subjects with or \n       without ESVEA\";\nproc genmod data=chs_pch_null213;\n    class interval;\n    model cens=interval/dist=poi offset=logrisk noint;\n    estimate '0-5 years' interval 1 0 0;\n    estimate '5-10 years' interval 0 1 0;\n    estimate '10+ years' interval 0 0 1;\nrun;\n\n* Lastly, the two models are compared with a likelihood ratio test. This is done by comparing the max log likelihoods for the two models \n  and then calculating the p-value using the Chi-square distribution with 3 degrees of freedom. The likelihood scores are found in the 'Criteria For\n  Accessing Goodness Of Fit' table;\n  \ntitle \"2.1.3: Likelihood ratio test comparing the two piece-wise constant hazards models\";\ndata p;\n    chi2=1444.6862-1428.4662;\n    p=1-probchi(chi2,3);\nproc print;\nrun;\n\n* We get a Chi-square statistics of 16.22 on 3 degrees of freedom with a corresponding p-value of 0.001\n  We conclude once more that the hazards seem different for the subjects with or without ESVEA also under this model.; \n\n\n\n\n\n\n\n\nExercise 2.2\nConsider the data from the Copenhagen Holter study.\nThe data should be loaded as chs_data:\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nNote that the time variables, timeafib, timestroke and timedeath, are measured in days. We will first convert them to years for easier interpretations.\n\n\nCode show/hide\nchs_data$timeafib   <- chs_data$timeafib/365.25\nchs_data$timestroke <- chs_data$timestroke/365.25\nchs_data$timedeath  <- chs_data$timedeath/365.25\n\n\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out = chs_data\ndatafile = 'data/cphholter.csv'\ndbms= csv replace;\ngetnames=yes;\nrun;\n\n* We will convert the time variables ('timeafib', 'timestroke', and 'timedeath') from days to years;\n\ndata chs_data;\nset chs_data;\ntimeafib = timeafib/365.25;\ntimestroke = timestroke/365.25;\ntimedeath = timedeath/365.25;\nrun;\n\n\n\n\n\n\n1.\nMake a version of the data set enabling an analysis of the composite endpoint of stroke or death without stroke (‘stroke-free survival’, i.e. define the relevant Time and Status variables), see Section 1.2.4.\n\nRSAS\n\n\nTo estimate the cumulative hazards for the composite end-point of stroke or death we must first create a suitable time variable, timestrokeordeath and status indicator, strokeordeath.\n\n\nCode show/hide\nchs_data$timestrokeordeath <- ifelse(chs_data$stroke == 1, chs_data$timestroke, chs_data$timedeath) \nchs_data$strokeordeath <- ifelse(chs_data$stroke == 1, 1, chs_data$death) \n\n\n\n\n\n\nCode show/hide\n* To enable the analysis of the composite end-point stroke or death we will create a new time variable with the smallest value of\n  'timestroke' and 'timedeath' called 'timestrokeordeath' and a censoring variable called 'strokeordeath' which is 1 if stroke and/\n  or death occured and 0 otherwise for each subject.;\n\ntitle \"2.2.1\";\ndata chs_data;\n    set chs_data;\n    timestrokeordeath = timedeath;\n    if stroke = 1 then timestrokeordeath = timestroke;\n    strokeordeath = death;\n    if stroke = 1 then strokeordeath = 1;\nrun;\n\n\n\n\n\n\n\n2.\nEstimate non-parametrically the cumulative hazards of stroke-free survival for subjects with or without ESVEA.\n\nRSAS\n\n\nWe repeat the procedure from exercise 2.1.1 to obtain the Nelson-Aalen estimate of the cumulative hazards.\n\n\nCode show/hide\n# Estimating the cumulative hazards for subjects with or without ESVEA non-parametrically\nnaafit222 <- survfit(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea, data = chs_data)\n\nnaadata222 <- data.frame(time = naafit222$time,\n                        cumhaz = naafit222$cumhaz, \n                        esvea = c(rep(names(naafit222$strata)[1], naafit222$strata[1]),\n                               rep(names(naafit222$strata)[2], naafit222$strata[2])))\n\n\n(fig222 <- ggplot(data = naadata222) + geom_step(aes(x = time, y = cumhaz, linetype = esvea), linewidth = 1) + \n          scale_linetype_discrete(\"ESVEA\", labels = c(\"0\", \"1\")) + \n          xlab(\"Time since randomization (years)\") + \n          ylab(\"Cumulative hazard\"))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* We then repeat the procedure from exercise 2.1.1 to obtain the Nelson-Aalen estimate of the cumulative hazards.;\n\ntitle \"2.2.2\";\nproc phreg data=chs_data; \n    model timestrokeordeath*strokeordeath(0)=;\n    strata esvea;\n    baseline out=hazdat cumhaz=naa;\nrun;\n\n* The estimates are then plotted;\n\ntitle \"2.2.2: Nelson-Aalen estimate of the cumulative hazards for stroke-free survival for subjects with or without ESVEA \";\nproc gplot data=hazdat;\n    plot naa*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 15.19 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\n3.\nMake a non-parametric test for comparison of the two.\n\nRSAS\n\n\nThe hazards are compared using a logrank test\n\n\nCode show/hide\n# Logrank test\nsurvdiff(Surv(timestrokeordeath, strokeordeath) ~ esvea, data = chs_data)\n\n\nCall:\nsurvdiff(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea, \n    data = chs_data)\n\n          N Observed Expected (O-E)^2/E (O-E)^2/V\nesvea=0 579      230    253.4      2.17      18.6\nesvea=1  99       57     33.6     16.37      18.6\n\n Chisq= 18.6  on 1 degrees of freedom, p= 2e-05 \n\n\nWe get a chi-squared statistic of 18.6 on 1 degree of freedom and a corresponding p-value of \\(2 \\cdot 10^{-5}\\).\n\n\n\n\nCode show/hide\n* The hazards are compared with a log rank test which is implemented in the lifetest procedure;\n\ntitle \"2.2.3: Log rank test comparing the hazards for the subjects with or without ESVEA\";\nproc lifetest data=chs_data notable plots=none; \n    time timestrokeordeath*strokeordeath(0);\n    strata esvea;\nrun; \n\n* With a Chi-square statistic of 18.6 and a corresponding p-value of <0.0001 we conclude that hazards are different\n  for the groups with or without ESVEA under this model; \n\n\n\n\n\n\n\n4.\nMake a similar analysis based on a model where the hazard is assumed constant within 5-year intervals.\n\nRSAS\n\n\nWe fit a Poisson model where the hazards are assumed constant within (approximate) 5-year intervals.\n\n\nCode show/hide\n#Splitting records in 5-year intervals\ndata_pch <- survSplit(Surv(timestrokeordeath, strokeordeath) ~ esvea, \n          data = chs_data, \n          cut = c(5,10), \n          episode = \"interval\")\ndata_pch$duration <- data_pch$timestrokeordeath - data_pch$tstart\ndata_pch$int_esvea <- data_pch$interval + (data_pch$esvea*3)\n\n#Poisson regression\npoisson224 <- glm(strokeordeath ~ factor(int_esvea) - 1 + offset(log(duration)), family = poisson(), data = data_pch)\npoisson_est <- as.numeric(exp(coefficients(poisson224)))\n\n#Table with estimate of the coefficients\ncbind(c(\"0-5 years, ESVEA = 0\",\"5-10 years, ESVEA = 0\",\"10+ years, ESVEA = 0\", \"0-5 years, ESVEA = 1\",\"5-10 years, ESVEA = 1\",\"10+ years, ESVEA = 1\"), poisson_est)\n\n\n                             poisson_est         \n[1,] \"0-5 years, ESVEA = 0\"  \"0.0187322517434922\"\n[2,] \"5-10 years, ESVEA = 0\" \"0.0355788210802352\"\n[3,] \"10+ years, ESVEA = 0\"  \"0.0503486257754533\"\n[4,] \"0-5 years, ESVEA = 1\"  \"0.0582424237782578\"\n[5,] \"5-10 years, ESVEA = 1\" \"0.0631007474577195\"\n[6,] \"10+ years, ESVEA = 1\"  \"0.0520302535222435\"\n\n\nThe hazards are then compared using a likelihood ratio test\n\n\nCode show/hide\n#Null model\npoisson_null224 <-  glm(strokeordeath ~ factor(interval) - 1 + offset(log(duration)), family = poisson(), data = data_pch)\n\n#LRT\nanova(poisson_null224, poisson224, test = \"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: strokeordeath ~ factor(interval) - 1 + offset(log(duration))\nModel 2: strokeordeath ~ factor(int_esvea) - 1 + offset(log(duration))\n  Resid. Df Resid. Dev Df Deviance  Pr(>Chi)    \n1      1769     1558.5                          \n2      1766     1534.8  3   23.721 2.857e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe get a chi-squared statistic of 23.72 on 3 degrees of freedom and a corresponding p-value of \\(2.86 \\cdot 10^{-5}\\).\nThe Poisson model is plotted together with the Nelson-Aalen estimates below\n\n\nCode show/hide\n#Data frame with time and cumulative hazard under poisson assumption for subjects without ESVEA\npoisson_esvea0 <- as.data.frame(\n  cbind(time = c(0,5,10,15.19), \n        cumhaz = c(0,5*poisson_est[1], 5*poisson_est[1] + 5*poisson_est[2], 5*poisson_est[1] + 5*poisson_est[2] + 5*poisson_est[3])))\n#Data frame with time and cumulative hazard under poisson assumption for subjects with ESVEA\npoisson_esvea1 <- as.data.frame(\n  cbind(time = c(0,5,10,15.19), \n        cumhaz = c(0,5*poisson_est[4], 5*poisson_est[4] + 5*poisson_est[5], 5*poisson_est[4] + 5*poisson_est[5] + 5*poisson_est[6])))\n\n#Plot of Nelson-Aalen together with Poisson cumulative hazard\nfig222 + geom_line(data = poisson_esvea0, aes(x = time, y = cumhaz), linewidth = 1) + \n         geom_line(data = poisson_esvea1, aes(x = time, y = cumhaz), linewidth = 1, linetype = \"dotted\") \n\n\n\n\n\n\n\n\n\nCode show/hide\ndata chs_pch; \n    set chs_data;\n    cens=(timestrokeordeath<=5)*(strokeordeath=1);\n    risktime=min(5,timestrokeordeath);\n    logrisk=log(risktime); interval=1;\n    if esvea=1 then do; interval=4; end; output;\n    if timestrokeordeath>5 then do;\n    cens=(timestrokeordeath<=10)*(strokeordeath=1);\n    risktime=min(5,timestrokeordeath-5);\n    logrisk=log(risktime); \n    interval=2;\n    if esvea=1 then do; \n    interval=5; end; output; end;\n    if timestrokeordeath>10 then do;\n    cens=(strokeordeath=1); \n    risktime=timestrokeordeath-10;\n    logrisk=log(risktime); interval=3;\n    if esvea=1 then do; \n    interval = 6; end; output; end;\nrun;\n\n* Then, the Poisson model is fitted using the genmod procedure.;\n\nproc genmod data=chs_pch;\n    class interval;\n    model cens=interval/dist=poi offset=logrisk noint;\n    estimate '0-5 years, ESVEA = 0'  interval 1 0 0 0 0 0;\n    estimate '5-10 years, ESVEA = 0' interval 0 1 0 0 0 0;\n    estimate '10+ years, ESVEA = 0' interval 0 0 1 0 0 0;\n    estimate '0-5 years, ESVEA = 1' interval 0 0 0 1 0 0;\n    estimate '5-10 years, ESVEA = 1' interval 0 0 0 0 1 0;\n    estimate '10+ years, ESVEA = 1' interval 0 0 0 0 0 1;\nrun;\n\n* To investigate if the hazards are different for the two groups we will fit a model where we do not stratify by ESVEA. \n  Once again we will first make a new version of the data set.;\n  \ndata chs_pch_null;\n  set chs_pch;\n  if interval in (4,5,6) then interval = interval - 3;\nrun;\n\n* Then, the model which does not distinguish between subject with or without ESVEA is fitted using the genmod procedure;\n\nproc genmod data=chs_pch_null;\n    class interval;\n    model cens=interval/dist=poi offset=logrisk noint;\n    estimate '0-5 years' interval 1 0 0;\n    estimate '5-10 years' interval 0 1 0;\n    estimate '10+ years' interval 0 0 1;\nrun;\n\n* Lastly, the two models are compared with a likelihood ratio test. The deviance scores are found in the table 'Criteria for \n  assesing goodness of fit'.;\n\ntitle \"2.2.4: Likelihood ratio test comparing the two piece-wise constant hazards models\";\ndata p;\n    chi2=1558.4777-1534.7568;\n    p=1-probchi(chi2,3);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 23.72 on 3 degrees of freedom with a very small p-value. Thus, we conclude oncemore that the hazards are not the same for the two groups;\n\n\n\n\n\n\n\n\nExercise 2.3\nConsider the data from the Copenhagen Holter study and the composite end-point stroke-free survival.\nThe data should be loaded as chs_data:\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nNote that the time variables, timeafib, timestroke and timedeath, are measured in days. We will first convert them to years for easier interpretations.\n\n\nCode show/hide\nchs_data$timeafib   <- chs_data$timeafib/365.25\nchs_data$timestroke <- chs_data$timestroke/365.25\nchs_data$timedeath  <- chs_data$timedeath/365.25\n\n\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out = chs_data\ndatafile = 'data/cphholter.csv'\ndbms= csv replace;\ngetnames=yes;\nrun;\n\n* We will convert the time variables ('timeafib', 'timestroke', and 'timedeath') from days to years;\n\ndata chs_data;\nset chs_data;\ntimeafib = timeafib/365.25;\ntimestroke = timestroke/365.25;\ntimedeath = timedeath/365.25;\nrun;\n\n\n\n\n\n\n1.\nFit a Cox model and estimate the hazard ratio between subjects with or without ESVEA.\n\nRSAS\n\n\nThe Cox proportional hazards model is implemented as coxph in the survival package. The formula argument consists of a Surv object to the left of ‘~’ and the covariates to the right. We include the argument ties = “breslow” to obtain the Breslow estimate of the cumulative hazard.\nTo estimate the cumulative hazards for the composite end-point of stroke or death we must first create a suitable time variable, timestrokeordeath and status indicator, strokeordeath.\n\n\nCode show/hide\nchs_data$timestrokeordeath <- ifelse(chs_data$stroke == 1, chs_data$timestroke, chs_data$timedeath) \nchs_data$strokeordeath <- ifelse(chs_data$stroke == 1, 1, chs_data$death) \n\ncox231 <- coxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea, data = chs_data, ties = \"breslow\")\nsummary(cox231)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea, \n    data = chs_data, ties = \"breslow\")\n\n  n= 678, number of events= 287 \n\n        coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.6285    1.8747   0.1482 4.241 2.23e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.875     0.5334     1.402     2.507\n\nConcordance= 0.546  (se = 0.012 )\nLikelihood ratio test= 15.79  on 1 df,   p=7e-05\nWald test            = 17.98  on 1 df,   p=2e-05\nScore (logrank) test = 18.58  on 1 df,   p=2e-05\n\n\nWe get a hazard ratio of 1.875, i.e. the hazard is increased by a factor 1.875 for patients with ESVEA compared to those without. We get a Wald test of 4.241 with a corresponding p-value of \\(2.22\\cdot 10^{-5}\\).\n\n\n\n\nCode show/hide\n* A Cox model can be fitted with the phreg procedure. The model statement requires the time varible and a censoring variable to\n  be specified on the left hand side of '=' and the explanatory variables on the right hand side. The censoring variable have to be followed \n  by a parenthesis containing the censoring value(s);\n\ntitle \"2.3.1\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea;\nrun;\n\n* We get an estimated coefficient for ESVEA of 0.62849 which corresponds to a hazard ratio of exp(0.62849) = 1.874778. Thus, having \n  ESVEA almost doubles the rate of experiencing the composite end-point.\n\n* We can conclude that the hazards for the subjects with or without ESVEA are different under the proportional hazards\n  assumption as well, since we get a Chi-square statistic of 17.99 on 1 degree of freedom with a correpsonding p-value <0.0001.\n\n\n\n\n\n\n\n2.\nFit a Poisson model where the hazard is assumed constant within 5-year intervals and estimate the hazard ratio between subjects with or without ESVEA.\n\nRSAS\n\n\nThe piece-wise constant model is fitted using glm as described in exercise 2.1.3.\n\n\nCode show/hide\n# Poisson regression\npoisson232 <- glm(strokeordeath ~ factor(interval) - 1 + esvea + offset(log(duration)), family = poisson(), data = data_pch)\nsummary(poisson232)\n\n\n\nCall:\nglm(formula = strokeordeath ~ factor(interval) - 1 + esvea + \n    offset(log(duration)), family = poisson(), data = data_pch)\n\nCoefficients:\n                  Estimate Std. Error z value Pr(>|z|)    \nfactor(interval)1  -3.8338     0.1183 -32.419  < 2e-16 ***\nfactor(interval)2  -3.3452     0.1014 -32.998  < 2e-16 ***\nfactor(interval)3  -3.0708     0.1020 -30.117  < 2e-16 ***\nesvea               0.6209     0.1482   4.191 2.78e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 15090  on 1772  degrees of freedom\nResidual deviance:  1543  on 1768  degrees of freedom\nAIC: 2125\n\nNumber of Fisher Scoring iterations: 6\n\n\nWe get a coefficient of 0.6209 for the ESVEA variable. This corresponds to a hazard ratio of \\(\\exp(0.6209) = 1.8606\\). The Wald test is 4.188 with a corresponding p-value of \\(2.82 \\cdot 10^{-5}\\).\n\n\n\n\nCode show/hide\ntitle \"2.3.2\";\nproc genmod data=chs_pch_null;\n    class interval;\n    model cens=interval esvea/dist=poi offset=logrisk;\nrun;\n\n* We get a hazard ratio of exp(0.6209) = 1.860602 for ESVEA under the assumption of piece-wise constant hazards model. This \n  difference in hazards between subjects with or without ESVEA is significant, since we get a Chi-square statistic of 17.56 on 1 \n  degree of freedom with a corresponding p-value <0.0001.;\n\n\n\n\n\n\n\n3.\nCompare the results from the two models.\nThe hazard ratio between subjects with or without ESVEA found using the Cox model is 1.87 while it was 1.86 assuming the piece-wise constant hazards model. Thus, the estimates are nearly identical both predicting an increase of the rate for subjects with ESVEA of a factor 1.86-1.87.\n\n\n\nExercise 2.4\nConsider the data from the Copenhagen Holter study and the composite end-point stroke-free survival.\nThe data should be loaded as chs_data:\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nNote that the time variables, timeafib, timestroke and timedeath, are measured in days. We will first convert them to years for easier interpretations.\n\n\nCode show/hide\nchs_data$timeafib   <- chs_data$timeafib/365.25\nchs_data$timestroke <- chs_data$timestroke/365.25\nchs_data$timedeath  <- chs_data$timedeath/365.25\n\n\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out = chs_data\ndatafile = 'data/cphholter.csv'\ndbms= csv replace;\ngetnames=yes;\nrun;\n\n* We will convert the time variables ('timeafib', 'timestroke', and 'timedeath') from days to years;\n\ndata chs_data;\nset chs_data;\ntimeafib = timeafib/365.25;\ntimestroke = timestroke/365.25;\ntimedeath = timedeath/365.25;\nrun;\n\n\n\n\n\n\n1.\nFit a Cox model and estimate the hazard ratio between subjects with or without ESVEA, now also adjusting for sex, age, and systolic blood pressure (sysBP).\n\nRSAS\n\n\nWe fit the Cox model as described in exercise 2.3.1. This time we also include sex, age and sbp as covariates.\n\n\nCode show/hide\nchs_data$timestrokeordeath <- ifelse(chs_data$stroke == 1, chs_data$timestroke, chs_data$timedeath) \nchs_data$strokeordeath <- ifelse(chs_data$stroke == 1, 1, chs_data$death) \n\n# Cox model \ncox241 <- coxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + sbp , ties = \"breslow\", data = chs_data)\nsummary(cox241)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.318284  1.374767 0.152587 2.086   0.0370 *  \nsex   0.577585  1.781731 0.126946 4.550 5.37e-06 ***\nage   0.076658  1.079673 0.009362 8.189 2.64e-16 ***\nsbp   0.005152  1.005165 0.002438 2.113   0.0346 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.375     0.7274     1.019     1.854\nsex       1.782     0.5613     1.389     2.285\nage       1.080     0.9262     1.060     1.100\nsbp       1.005     0.9949     1.000     1.010\n\nConcordance= 0.672  (se = 0.016 )\nLikelihood ratio test= 99.45  on 4 df,   p=<2e-16\nWald test            = 104.1  on 4 df,   p=<2e-16\nScore (logrank) test = 110  on 4 df,   p=<2e-16\n\n\nWe get a hazard ratio of 1.375 for ESVEA. The Wald test is 2.086 with a corresponding p-value of 0.0370.\n\n\n\n\nCode show/hide\n* We add sex, age, and systolic blood pressure as explanatory variables to our Cox model from before;\n\ntitle \"2.4.1\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp;\nrun;\n\n* We now get a hazard ratio of exp(0.31830) = 1.374789 for ESVEA. The effect of ESVEA is still significant with Chi-square statistic\n  of 4.3514 on 1 degree of freedom and a corresponding p-value of 0.0370;\n\n\n\n\n\n\n\n2.\nFit a Poisson model where the hazard is assumed constant within 5-year intervals and estimate the hazard ratio between subjects with or without ESVEA, now also adjusting for sex, age, and sysBP.\n\nRSAS\n\n\nTo obtain estimates under the piece-wise constant hazard assumption we add sex, age and sbp on the right hand side of ‘~’ both in the survSplit and the glm functions.\n\n\nCode show/hide\n#Splitting data in 5-year intervals\ndata_pch <- survSplit(Surv(timestrokeordeath, strokeordeath) ~ esvea + age + sex + sbp,  \n          data = chs_data, \n          cut = c(5,10), \n          episode = \"interval\")\ndata_pch$duration <- data_pch$timestrokeordeath - data_pch$tstart\n\n#Poisson regression\npoisson242 <- glm(strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + offset(log(duration)), family = poisson(), data = data_pch)\nsummary(poisson242)\n\n\n\nCall:\nglm(formula = strokeordeath ~ factor(interval) - 1 + esvea + \n    sex + age + sbp + offset(log(duration)), family = poisson(), \n    data = data_pch)\n\nCoefficients:\n                   Estimate Std. Error z value Pr(>|z|)    \nfactor(interval)1 -9.984329   0.701540 -14.232  < 2e-16 ***\nfactor(interval)2 -9.403023   0.691466 -13.599  < 2e-16 ***\nfactor(interval)3 -9.077211   0.685584 -13.240  < 2e-16 ***\nesvea              0.311068   0.152551   2.039   0.0414 *  \nsex                0.578858   0.126880   4.562 5.06e-06 ***\nage                0.076159   0.009360   8.137 4.06e-16 ***\nsbp                0.005061   0.002438   2.076   0.0379 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 15060.9  on 1767  degrees of freedom\nResidual deviance:  1449.7  on 1760  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 2033.7\n\nNumber of Fisher Scoring iterations: 6\n\n\nWe get a coefficient of 0.3111 for ESVEA and a hazard ratio of \\(\\exp(0.3111) = 1.3649\\). The Wald test is 2.039 and the corresponding p-value is 0.0414.\n\n\n\n\nCode show/hide\n* To obtain an estimate of the hazard ratio for ESVEA under the piece-wise constant hazards model where we also adjust for sex, age,\n  and systolic blood pressure we must include these as explanatory variables in the model statement.;\n\ntitle \"2.4.2\";\nproc genmod data=chs_pch_null;\n    class interval (ref = '1');\n    model cens=interval esvea sex age sbp/dist=poi offset=logrisk;\nrun;\n\n* We find a hazard ratio of ESVEA of exp(0.3111) = 1.364926. The hazards seems to be different between the subjects with or without ESVEA\n  since we get a Chi-square statistic of 4.16 on 1 degree of freedom with a corresponding p-value of 0.0414;\n\n\n\n\n\n\n\n3.\nCompare the results from the two models.\nAgain, the hazard ratios estimated using either the Cox model or the Poisson model are comparable with a factor 1.36-1.37 increase of the hazard for subjects with ESVEA. We notice that this is smaller than the hazard ratio estimated without adjusting for sex, age, and systolic blood pressure.\n\n\n\nExercise 2.5\n\n1.\nCheck the Cox model from the previous exercise by examining proportional hazards between subjects with or without ESVEA and between men and women.\n\nRSAS\n\n\nTo check the assumption of proportional hazards for subjects with or without ESVEA under the Cox model we fit a stratified Cox model. This can be done by adding strata(esvea) instead of esvea as a covariate in the coxph function. The baseline hazard can then be extracted using the function basehaz from the survival package. The argument centered = FALSE is added. Otherwise, the predicted cumulative hazard at the mean values of the covariates is returned.\nThe hazards are plotted against each other. If the proportional hazards assumption holds then the curve should be close to a straight line through (0,0) with a slope equal to the estimated hazard ratio of ESVEA.\n\n\nCode show/hide\n#Cox model with separate hazards for subjects with or without ESVEA\ncox251_esvea <- coxph(Surv(timestrokeordeath, strokeordeath) ~ strata(esvea) + sex + age + sbp, ties = \"breslow\", data =chs_data)\nsummary(cox251_esvea)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ strata(esvea) + \n    sex + age + sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n        coef exp(coef) se(coef)     z Pr(>|z|)    \nsex 0.572119  1.772018 0.127078 4.502 6.73e-06 ***\nage 0.075990  1.078952 0.009378 8.103 5.35e-16 ***\nsbp 0.005321  1.005335 0.002441 2.180   0.0292 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n    exp(coef) exp(-coef) lower .95 upper .95\nsex     1.772     0.5643     1.381     2.273\nage     1.079     0.9268     1.059     1.099\nsbp     1.005     0.9947     1.001     1.010\n\nConcordance= 0.662  (se = 0.018 )\nLikelihood ratio test= 83.24  on 3 df,   p=<2e-16\nWald test            = 86.63  on 3 df,   p=<2e-16\nScore (logrank) test = 90.38  on 3 df,   p=<2e-16\n\n\n\n\nCode show/hide\n#Cumulative hazard for subjects without ESVEA\nesvea0_haz <- rbind(c(0,0),subset(basehaz(cox251_esvea, centered = FALSE), strata == \"esvea=0\")[,1:2])\ncolnames(esvea0_haz) <- c(\"haz0\", \"time\")\n\n#Cumulative hazard for subjects with ESVEA\nesvea1_haz <- rbind(c(0,0),subset(basehaz(cox251_esvea, centered = FALSE), strata == \"esvea=1\")[,1:2])\ncolnames(esvea1_haz) <- c(\"haz1\", \"time\")\n\n#Data frame with time column and both hazards\nph_data <- merge(esvea0_haz, esvea1_haz, all = TRUE)\nph_data <- ph_data %>% fill(haz0,haz1)\n\n#Plotting the hazards against each other\nggplot(data = ph_data) + geom_step(aes(haz0, haz1)) + geom_abline(slope = 1.374825) + xlab(\"Cumulative hazard for subjects with ESVEA = 0\") + ylab(\"Cumulative hazard for subjects with ESVEA = 1\")\n\n\n\n\n\nThe cumulative hazard deviates a bit from the straight line. This suggests that the assumption of proportional hazards for subjects with or without ESVEA may not be reasonable.\nWe repeat the procedure but this time examining the proportional hazards assumption of sex.\n\n\nCode show/hide\n#Cox model with separate hazards for male and female subjects\ncox251_sex <- coxph(Surv(timestrokeordeath, strokeordeath) ~ esvea + strata(sex) + age + sbp, ties = \"breslow\", data =chs_data)\nsummary(cox251_sex)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    strata(sex) + age + sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.322685  1.380830 0.152751 2.112   0.0346 *  \nage   0.076270  1.079253 0.009363 8.146 3.77e-16 ***\nsbp   0.005173  1.005187 0.002436 2.124   0.0337 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.381     0.7242     1.024     1.863\nage       1.079     0.9266     1.060     1.099\nsbp       1.005     0.9948     1.000     1.010\n\nConcordance= 0.669  (se = 0.016 )\nLikelihood ratio test= 94.47  on 3 df,   p=<2e-16\nWald test            = 95.6  on 3 df,   p=<2e-16\nScore (logrank) test = 102.1  on 3 df,   p=<2e-16\n\n\n\n\nCode show/hide\n#Cumulative hazard for females\nsex0_haz <- rbind(c(0,0),subset(basehaz(cox251_sex, centered = FALSE), strata == \"sex=0\")[,1:2])\ncolnames(sex0_haz) <- c(\"haz0\", \"time\")\n\n#Cumulative hazard for males\nsex1_haz <- rbind(c(0,0),subset(basehaz(cox251_sex, centered = FALSE), strata == \"sex=1\")[,1:2])\ncolnames(sex1_haz) <- c(\"haz1\", \"time\")\n\n#Data frame with time column and both hazards\nph_data <- merge(sex0_haz, sex1_haz, all = TRUE)\nph_data <- ph_data %>% fill(haz0,haz1)\n\n#Plotting the hazards against each other\nggplot(data = ph_data) + geom_step(aes(haz0, haz1)) + geom_abline(slope = 1.781584) + xlab(\"Cumulative hazard for subjects with sex = 0\") + ylab(\"Cumulative hazard for subjects with sex = 1\")\n\n\n\n\n\nThe curve coincides nicely with the straight line. Thus, the proportional hazard assumption seems reasonable for sex.\n\n\n\n\nCode show/hide\n* To check the assumption of proportional hazards for subjects with or without ESVEA under the Cox model we will fit seperate baseline\n  hazards. This can be done by including a strata statement where ESVEA is specified. Furthermore, we specify the values of the \n  other covariates (sex, age, and systolic blood pressure) in the data frame 'covstr'. The hazard is then plotted against each \n  other. If the proportional hazards assumption holds the curve should be close to a straight line through (0,0) with a slope equal\n  to the estimated hazard ratio of ESVEA.;\n\ndata covstr;\n    sex=0; age=0; sbp=0;\nrun;\n\n* The Cox model is fitted and a data set with the baseline hazards is saved as 'breslowstr';\n\ntitle \"2.5.1\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=sex age sbp;\n    strata esvea;\n    baseline out=breslowstr cumhaz=breslow covariates=covstr;\nrun;\n\n* Now the baseline hazards for esvea = 0,1 are extracted and merged into one data set called 'breslow01';\n\ndata breslow0;\n    set breslowstr; \n    if esvea=0; \n    a00=breslow; \nrun;\n\ndata breslow1; \n    set breslowstr; \n    if esvea=1;     \n    a01=breslow; \nrun;\n\ndata breslow01; \n    merge breslow0 breslow1; \n    by timestrokeordeath; \nrun;\n\n* Then, the empty cells of the cumulative hazards are replaced with the previous values;\n\ndata breslow01; \nset breslow01;\n    by timestrokeordeath;\n    retain last1 last2;\n    if a00=. then cumhaz0=last1; if a00 ne . then cumhaz0=a00; \n    if a01=. then cumhaz1=last2; if a01 ne . then cumhaz1=a01;\n    output;\n    last1=cumhaz0; last2=cumhaz1; \nrun;\n\n* The straight line with a slope which equals the predicted hazard ratio for esvea from the model in 2.4.1, is added to the data set;\n\ndata breslow01; \n    set breslow01;\n    line=1.3649*cumhaz0;\nrun;\n\n* Finally, the cumulative baseline hazards for esvea = 0,1 are plotted against each other together with the straight line;\n\ntitle \"2.5.1: Checking the proportionality assumption of the hazards for ESVEA\";\nproc gplot data=breslow01;\n    plot cumhaz1*cumhaz0 line*cumhaz0/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 0.0013 by 0.0001 minor=none label=('Cumulative baseline hazard: ESVEA = 0');\n    axis2 order=0 to 0.0016 by 0.0001 minor=none label=(a=90 'Cumulative baseline hazard: ESVEA = 1');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=rl c=blue;\nrun;\n\n* The cumulative hazard deviates a bit from the straight line. This suggests that the assumption of proportional hazards for\n  subjects with or without ESVEA is questionable;\n\n* To examine the assumption of proportional hazards for sex we will repeat the procedure. Thus, we will first specify the \n  other covariates (ESVEA, age, and systolic blood pressure) and the fit a Cox model including the strata statement.;\n\ndata covstr;\n    esvea=0; age=0; sbp=0;\nrun;\n\ntitle \"2.5.1\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea age sbp;\n    strata sex;\n    baseline out=breslowstr cumhaz=breslow covariates=covstr;\nrun;\n\n* Now the baseline hazards for sex = 0,1 are extracted and merged into one data set called 'breslow01';\n\ndata breslow0;\n    set breslowstr; \n    if sex=0; \n    a00=breslow; \nrun;\n\ndata breslow1; \n    set breslowstr; \n    if sex=1;   \n    a01=breslow; \nrun;\n\ndata breslow01; \n    merge breslow0 breslow1; \n    by timestrokeordeath; \nrun;\n\n* Then, the empty cells of the cumulative hazards are replaced with the previous values;\n\ndata breslow01; \nset breslow01;\n    by timestrokeordeath;\n    retain last1 last2;\n    if a00=. then cumhaz0=last1; if a00 ne . then cumhaz0=a00; \n    if a01=. then cumhaz1=last2; if a01 ne . then cumhaz1=a01;\n    output;\n    last1=cumhaz0; last2=cumhaz1; \nrun;\n\n* The straight line is then added to the data set;\n\ndata breslow01; \n    set breslow01;\n    line=1.7840*cumhaz0;\nrun;\n\n* Finally, the cumulative baseline hazards for sex = 0,1 are plotted against each other together with the line;\n\ntitle \"2.5.1: Examining the assumption of proportional hazards for sex\";\nproc gplot data=breslow01;\n    plot cumhaz1*cumhaz0 line*cumhaz0/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 0.0014 by 0.0001 minor=none label=('Cumulative baseline hazard: Sex = 0');\n    axis2 order=0 to 0.0022 by 0.0001 minor=none label=(a=90 'Cumulative baseline hazard: Sex = 1');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=rl c=blue;\nrun;\n\n* The curve coincides nicely with the straight line. Thus, the proportional hazard assumption seems reasonable for sex.;\n\n\n\n\n\n\n\n2.\nCheck for linearity on the log(hazard)-scale for age and sysBP.\n\nRSAS\n\n\nWe can check the linearity assumptions on the log(hazards)-scale for age and systolic blood pressure by including non-linear effects.\nThe linearity assumption of systolic blood pressure can be investigated by including a linear spline. We select 135 as a knot since this value is typically the cut-point for medication for hypertension.\n\n\nCode show/hide\n#Adding covariate (systolisk - 135)*I(systolisk > 135)\nchs_data$hypertension <- (chs_data$sbp - 135)*(chs_data$sbp > 135)\n\n#Cox model with non-linear effect of systolic blood pleasure (linear spline)\ncox252_sbp <- coxph(Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + sbp + hypertension, ties = \"breslow\", data = chs_data)\nsummary(cox252_sbp)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp + hypertension, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n                  coef exp(coef)  se(coef)      z Pr(>|z|)    \nesvea         0.322940  1.381183  0.152659  2.115   0.0344 *  \nsex           0.577846  1.782195  0.126886  4.554 5.26e-06 ***\nage           0.076676  1.079692  0.009369  8.184 2.75e-16 ***\nsbp           0.016525  1.016662  0.015020  1.100   0.2713    \nhypertension -0.012579  0.987500  0.016299 -0.772   0.4403    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n             exp(coef) exp(-coef) lower .95 upper .95\nesvea           1.3812     0.7240    1.0240     1.863\nsex             1.7822     0.5611    1.3898     2.285\nage             1.0797     0.9262    1.0600     1.100\nsbp             1.0167     0.9836    0.9872     1.047\nhypertension    0.9875     1.0127    0.9565     1.020\n\nConcordance= 0.671  (se = 0.016 )\nLikelihood ratio test= 100.1  on 5 df,   p=<2e-16\nWald test            = 103.9  on 5 df,   p=<2e-16\nScore (logrank) test = 110.1  on 5 df,   p=<2e-16\n\n\nWe compare this non-linear model with the linear model from exercise 2.4.1 using a likelihood ratio test.\n\n\nCode show/hide\n#LRT\nanova(cox241,cox252_sbp, test = \"LRT\")\n\n\nAnalysis of Deviance Table\n Cox model: response is  Surv(timestrokeordeath, strokeordeath)\n Model 1: ~ esvea + sex + age + sbp\n Model 2: ~ esvea + sex + age + sbp + hypertension\n   loglik  Chisq Df Pr(>|Chi|)\n1 -1729.0                     \n2 -1728.7 0.6254  1      0.429\n\n\nWe get a chi-squared statistic of 0.6254 on 1 degree of freedom with a corresponding p-value of 0.429 when comparing the two Cox models. Including a linear spline to our model does not seem to describe data better than the model from exercise 2.4.1.\nWe will test the linearity assumption of age by adding a quadratic term to the Cox model.\n\n\nCode show/hide\n#Cox model with non-linear assumption of age (quadratic term)\ncox252_age <- coxph(Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + I(age^2) + sbp, ties = \"breslow\", data =chs_data)\nsummary(cox252_age)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + I(age^2) + sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n               coef  exp(coef)   se(coef)      z Pr(>|z|)    \nesvea     0.3172738  1.3733785  0.1526657  2.078   0.0377 *  \nsex       0.5820931  1.7897808  0.1293139  4.501 6.75e-06 ***\nage       0.1117230  1.1182031  0.1955347  0.571   0.5677    \nI(age^2) -0.0002659  0.9997341  0.0014809 -0.180   0.8575    \nsbp       0.0051368  1.0051500  0.0024407  2.105   0.0353 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n         exp(coef) exp(-coef) lower .95 upper .95\nesvea       1.3734     0.7281    1.0182     1.852\nsex         1.7898     0.5587    1.3891     2.306\nage         1.1182     0.8943    0.7622     1.640\nI(age^2)    0.9997     1.0003    0.9968     1.003\nsbp         1.0052     0.9949    1.0004     1.010\n\nConcordance= 0.672  (se = 0.016 )\nLikelihood ratio test= 99.48  on 5 df,   p=<2e-16\nWald test            = 103.6  on 5 df,   p=<2e-16\nScore (logrank) test = 111.5  on 5 df,   p=<2e-16\n\n\nThen we compare this model to the Cox model from 2.4.1 using a likelihood ratio test.\n\n\nCode show/hide\n#LRT\nanova(cox241, cox252_age, test =\"LRT\")\n\n\nAnalysis of Deviance Table\n Cox model: response is  Surv(timestrokeordeath, strokeordeath)\n Model 1: ~ esvea + sex + age + sbp\n Model 2: ~ esvea + sex + age + I(age^2) + sbp\n  loglik  Chisq Df Pr(>|Chi|)\n1  -1729                     \n2  -1729 0.0323  1     0.8574\n\n\nWe get a chi-squared statistic of 0.323 on 1 degrees of freedom and a corresponding p-value of 0.8574 when comparing the Cox models. Thus, we do not find evidence against the linearity assumption of age.\n\n\n\n\nCode show/hide\n* We can check the linearity assumptions on the log(hazards)-scale for age and systolic blood pressure by including non-linear effects.;\n\n* The linearity assumption of systolic blood pressure can be investigated by including a linear spline. We select 135 as a knot \n  since this value is typically the cut-point for medication for hypertension.;\n  \ntitle \"2.5.2\";\ndata chs_data;\n   set chs_data;\n   if sbp > 135 then\n   hypertension = sbp - 135;  \n   else hypertension = 0;\nrun;\n\n* Then we include this new explanatory variable in our Cox model;\n\nproc phreg data = chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp hypertension;\nrun;\n\n* We compare the effect of adding a linear spline with the Cox model from 2.4.1 using a likelihood ratio test;\n\ntitle \"2.5.2: Checking the linearity on the log(hazard)-scale for systolic blood pressure\";\ndata p;\n    chi2=3457.955-3457.330;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.625 on 1 degree of freedom with a correpsonding p-value of 0.4292. Thi is close\n  to the Wald test. Thus, we conclude that\n  including a linear spline in our model does not seem to describe data better than our model from exercise 2.4.1.;\n\n* We will test the linearity assumption of age by including a quadratic term to the Cox model.;\n\ntitle \"2.5.2\";\ndata chs_data;\n   set chs_data;\n   age2 = age*age;\nrun;\n\nproc phreg data = chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age age2 sbp;\nrun;\n\n*Then, we compare this model to the Cox model forom exercise 2.4.1. using a likelihood ratio test.;\n\ntitle \"2.5.2: Checking the linearity on the log(hazard)-scale for age\";\ndata p;\n    chi2=3457.955-3457.923;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.032 on 1 degree of freedom and a corresponding p-value of 0.85803. Thus, we do not have evidence against the linearity assumption of age. Note, once more, the simlarity with the Wald test.;\n\n\n\n\n\n\n\n3.\nDo the same for the Poisson model.\n\nRSAS\n\n\nTo investigate the assumption of proportional hazards for subjects with or without ESVEA for the Poisson model we will include an interaction term between time and ESVEA. This model can then be compared with the model from exercise 2.4.1 using a likelihood ratio test.\n\n\nCode show/hide\n#Poisson model with interaction term of time and esvea\npoisson253_esvea <- glm(strokeordeath ~ factor(interval) - 1 + esvea + sex + esvea:factor(interval) + age + sbp + offset(log(duration)), family = poisson(), data = data_pch)\nsummary(poisson253_esvea)\n\n\n\nCall:\nglm(formula = strokeordeath ~ factor(interval) - 1 + esvea + \n    sex + esvea:factor(interval) + age + sbp + offset(log(duration)), \n    family = poisson(), data = data_pch)\n\nCoefficients:\n                          Estimate Std. Error z value Pr(>|z|)    \nfactor(interval)1       -10.080740   0.704932 -14.300  < 2e-16 ***\nfactor(interval)2        -9.369197   0.693746 -13.505  < 2e-16 ***\nfactor(interval)3        -8.973328   0.687025 -13.061  < 2e-16 ***\nesvea                    -0.230225   0.320302  -0.719   0.4723    \nsex                       0.571910   0.127003   4.503  6.7e-06 ***\nage                       0.075444   0.009374   8.048  8.4e-16 ***\nsbp                       0.005196   0.002438   2.131   0.0331 *  \nfactor(interval)1:esvea   0.992907   0.401923   2.470   0.0135 *  \nfactor(interval)2:esvea   0.523021   0.404268   1.294   0.1958    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 15060.9  on 1767  degrees of freedom\nResidual deviance:  1443.1  on 1758  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 2031.1\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\nCode show/hide\n#LRT\nanova(poisson242, poisson253_esvea, test = \"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + \n    offset(log(duration))\nModel 2: strokeordeath ~ factor(interval) - 1 + esvea + sex + esvea:factor(interval) + \n    age + sbp + offset(log(duration))\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)  \n1      1760     1449.7                       \n2      1758     1443.1  2   6.5411  0.03798 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nWe get a chi-squared statistic of 6.5411 on 2 degrees of freedom and a corresponding p-value of 0.03798. This suggests that the proportional hazard assumption is questionable for ESVEA.\nWe will now repeat the procedure to investigate the proportional hazards assumption for sex for the Poisson model.\n\n\nCode show/hide\n#Poisson model with interaction term of time and sex\npoisson253_sex <- glm(strokeordeath ~ factor(interval) -1 + esvea + sex + sex:factor(interval) + age + sbp + offset(log(duration)), family = poisson(), data = data_pch)\nsummary(poisson253_sex)\n\n\n\nCall:\nglm(formula = strokeordeath ~ factor(interval) - 1 + esvea + \n    sex + sex:factor(interval) + age + sbp + offset(log(duration)), \n    family = poisson(), data = data_pch)\n\nCoefficients:\n                       Estimate Std. Error z value Pr(>|z|)    \nfactor(interval)1     -9.991770   0.713147 -14.011  < 2e-16 ***\nfactor(interval)2     -9.480863   0.700359 -13.537  < 2e-16 ***\nfactor(interval)3     -8.986670   0.692599 -12.975  < 2e-16 ***\nesvea                  0.309414   0.152608   2.028   0.0426 *  \nsex                    0.437336   0.202502   2.160   0.0308 *  \nage                    0.076069   0.009362   8.125 4.47e-16 ***\nsbp                    0.005064   0.002436   2.079   0.0377 *  \nfactor(interval)1:sex  0.161900   0.313850   0.516   0.6060    \nfactor(interval)2:sex  0.271022   0.286341   0.947   0.3439    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 15060.9  on 1767  degrees of freedom\nResidual deviance:  1448.8  on 1758  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 2036.8\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\nCode show/hide\n#LRT\nanova(poisson242, poisson253_sex, test = \"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + \n    offset(log(duration))\nModel 2: strokeordeath ~ factor(interval) - 1 + esvea + sex + sex:factor(interval) + \n    age + sbp + offset(log(duration))\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1      1760     1449.7                     \n2      1758     1448.8  2  0.90827    0.635\n\n\nWe get a chi-squared statistic of 0.9083 with a corresponding p-value of 0.635. We conclude that we do not have evidence against the proportional hazards assumption for sex.\nWe will also check the linearity assumption of sbp by inclusion the indicator of hypertension in the Poisson model\n\n\nCode show/hide\n#Splitting data in 5-year intervals\ndata_pch <- survSplit(Surv(timestrokeordeath, strokeordeath) ~ esvea + age + sex + sbp + hypertension,  \n          data = chs_data, \n          cut = c(5,10), \n          episode = \"interval\")\ndata_pch$duration <- data_pch$timestrokeordeath - data_pch$tstart\n\n#Poisson model with non-linear effect of systolic blood pleasure (linear spline)\npoisson253_sbp <- glm(strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + hypertension + offset(log(duration)), family = poisson(), data = data_pch)\nsummary(poisson253_sbp)\n\n\n\nCall:\nglm(formula = strokeordeath ~ factor(interval) - 1 + esvea + \n    sex + age + sbp + hypertension + offset(log(duration)), family = poisson(), \n    data = data_pch)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(>|z|)    \nfactor(interval)1 -11.457462   2.063531  -5.552 2.82e-08 ***\nfactor(interval)2 -10.875624   2.059459  -5.281 1.29e-07 ***\nfactor(interval)3 -10.548863   2.056350  -5.130 2.90e-07 ***\nesvea               0.315588   0.152617   2.068   0.0387 *  \nsex                 0.579222   0.126819   4.567 4.94e-06 ***\nage                 0.076174   0.009367   8.132 4.22e-16 ***\nsbp                 0.016310   0.015004   1.087   0.2770    \nhypertension       -0.012441   0.016280  -0.764   0.4448    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 15060.9  on 1767  degrees of freedom\nResidual deviance:  1449.1  on 1759  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 2035.1\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\nCode show/hide\n#LRT\nanova(poisson242, poisson253_sbp ,test = \"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + \n    offset(log(duration))\nModel 2: strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + \n    hypertension + offset(log(duration))\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1      1760     1449.7                     \n2      1759     1449.1  1  0.61294   0.4337\n\n\nWe get a chi-squared statistic of 0.613 on 1 degree of freedom with a corresponding p-value of 0.4337 when comparing the Poisson models.\nWe will test the linearity assumption of age by adding a quadratic term to the Poisson model.\n\n\nCode show/hide\n#Poisson model with non-linear assumption of age (quadratic term)\npoisson253_age <- glm(strokeordeath ~ factor(interval) - 1 + esvea + sex + age + I(age^2) + sbp + offset(log(duration)), family = poisson(), data = data_pch)\nsummary(poisson253_age)\n\n\n\nCall:\nglm(formula = strokeordeath ~ factor(interval) - 1 + esvea + \n    sex + age + I(age^2) + sbp + offset(log(duration)), family = poisson(), \n    data = data_pch)\n\nCoefficients:\n                    Estimate Std. Error z value Pr(>|z|)    \nfactor(interval)1 -1.123e+01  6.412e+00  -1.751   0.0799 .  \nfactor(interval)2 -1.065e+01  6.411e+00  -1.661   0.0968 .  \nfactor(interval)3 -1.032e+01  6.411e+00  -1.610   0.1074    \nesvea              3.100e-01  1.526e-01   2.031   0.0423 *  \nsex                5.837e-01  1.292e-01   4.518 6.26e-06 ***\nage                1.143e-01  1.956e-01   0.584   0.5589    \nI(age^2)          -2.891e-04  1.481e-03  -0.195   0.8452    \nsbp                5.045e-03  2.440e-03   2.067   0.0387 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 15060.9  on 1767  degrees of freedom\nResidual deviance:  1449.6  on 1759  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 2035.6\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\nCode show/hide\n#LRT\nanova(poisson242, poisson253_age,test = \"LRT\")\n\n\nAnalysis of Deviance Table\n\nModel 1: strokeordeath ~ factor(interval) - 1 + esvea + sex + age + sbp + \n    offset(log(duration))\nModel 2: strokeordeath ~ factor(interval) - 1 + esvea + sex + age + I(age^2) + \n    sbp + offset(log(duration))\n  Resid. Df Resid. Dev Df Deviance Pr(>Chi)\n1      1760     1449.7                     \n2      1759     1449.6  1 0.038156   0.8451\n\n\nWe get a chi-squared statistic of 0.03816 on 1 degree of freedom and a corresponding p-value of 0.8451 when comparing the Poisson models. Thus, there is not evidence against the linearity assumption of age.\n\n\n\n\nCode show/hide\n* We can investigate the proportionality assumption of sex in the piece-wise constant hazards model by including an interaction term \n  of time and sex and compare this model with the model from exercise 2.4.2 using a likelihood ratio test (directly\n  iobtainable using the type3 option).;\n\ntitle \"2.5.3\";  \nproc genmod data=chs_pch_null;\n    class interval (ref = '1');\n    model cens=interval esvea sex age sbp sex*interval /dist=poi offset=logrisk type3;\nrun;\n\n\ntitle \"2.5.3: Examining the assumption of proportional hazards for sex\";\ndata p;\n    chi2=1449.6828-1448.7745;\n    p=1-probchi(chi2,2);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.9083 on 2 degrees of freedom with a corresponding p-value of 0.63499. We conclude \n  that we do not have enough evidence against the proportional hazards assumption for sex.;\n\n* To investigate the proportionality assumption of ESVEA we include an interaction term of time and ESVEA and compare this model with\n  the model from exercise 2.4.2 using a likelihood ratio test.;\n  \nproc genmod data=chs_pch_null;\n    class interval (ref = '1');\n    model cens=interval esvea sex age sbp esvea*interval /dist=poi offset=logrisk type3;\nrun;\n\ntitle \"2.5.3: Examining the assumption of proportional hazards for ESVEA\";\ndata p;\n    chi2=1449.6828-1443.1417;\n    p=1-probchi(chi2,2);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 6.5411 on 2 degrees of freedom with a corresponding p-value of 0.037986. This suggest that \n  the proportional hazard assumption does not hold for ESVEA on a 0.05 significance level.;\n\n* We can investigate the linearity assumption on the log(hazard)-scale for systolic blood pressure by including a variable for \n  hypertension to the piece-wise constant hazards model. Then, we can compare this model with the model from 2.4.2 using a likelihood \n  ratio test.;\n\ntitle \"2.5.3\";\ndata chs_pch_null;\n   set chs_pch_null;\n   if sbp > 135 then\n   hypertension = sbp - 135;  \n   else hypertension = 0;\nrun;\n\nproc genmod data=chs_pch_null;\n    class interval;\n    model cens=interval esvea sex age sbp hypertension /dist=poi offset=logrisk noint;\nrun;\n\ntitle \"2.5.3: Checking the linearity on the log(hazard)-scale for systolic blood pressure\";\ndata p;\n    chi2=1449.6828-1449.0699;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.6129 on 1 degree of freedom with a corresponding p-value of 0.4337 when comparing the Poisson models. \n  Thus, for both the Cox model and the Poisson model we cannot reject the hypothesis that the effect of systolic blood pressure \n  is linear.;\n\n* We can then investigate the linearity assumption for age by including a quadratic term to our model;\n\ntitle \"2.5.3\";\ndata chs_pch_null;\n   set chs_pch_null;\n   age2 = age*age;\nrun;\n\nproc genmod data=chs_pch_null;\n    class interval;\n    model cens=interval esvea sex age age2 sbp /dist=poi offset=logrisk noint;\nrun;\n\n* Then this model is compared with the one from exercise 2.4.2.;\n\ntitle \"2.5.3: Checking the linearity on the log(hazard)-scale for age\";\ndata p;\n    chi2=1449.6828-1449.6446;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.0382 on 1 degree of freedom and a corresponding p-value of 0.84504. We once more reach the \n  conclusion that we do not have evidence against the linearity assumption of age.;\n\n\n\n\n\n\n\n\nExercise 2.6\nConsider the data from the Copenhagen Holter study and focus now on the mortality rate after stroke.\nThe data should be loaded as chs_data:\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nNote that the time variables, timeafib, timestroke and timedeath, are measured in days. We will first convert them to years for easier interpretations.\n\n\nCode show/hide\nchs_data$timeafib   <- chs_data$timeafib/365.25\nchs_data$timestroke <- chs_data$timestroke/365.25\nchs_data$timedeath  <- chs_data$timedeath/365.25\n\n\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out = chs_data\ndatafile = 'data/cphholter.csv'\ndbms= csv replace;\ngetnames=yes;\nrun;\n\n* We will convert the time variables ('timeafib', 'timestroke', and 'timedeath') from days to years;\n\ndata chs_data;\nset chs_data;\ntimeafib = timeafib/365.25;\ntimestroke = timestroke/365.25;\ntimedeath = timedeath/365.25;\nrun;\n\n\n\n\n\n\n1.\nEstimate non-parametrically the cumulative hazards for subjects with or without ESVEA using the time variable ‘time since recruitment’.\n\nRSAS\n\n\nWe first make a subset the data which only includes subjects experiencing a stroke during the study. Furthermore, we will add 0.5 day to the time of death for observations where time of stroke and time of death are the same.\n\n\nCode show/hide\n#Subset of data. Only subjects with strokes during the period of the study\nstroke_data <- subset(chs_data, stroke == 1)\n\n#Adding 0.5 day to timedeath for subjects with ties\nstroke_data$timedeath <- ifelse(stroke_data$timestroke == stroke_data$timedeath, stroke_data$timedeath + 0.5/365.25, stroke_data$timedeath)\n\n\nOnce again we use the survfit function from the survival package to obtain the Nelson-Aalen estimates. Since the time variable is time since recruitment we need to take delayed entry into account. Thus, both the entry time and exit time of the stroke state, timestroke and timedeath, are included in the Surv object.\n\n\nCode show/hide\nnaafit261 <- survfit(formula = Surv(timestroke, timedeath, death) ~ esvea, data = stroke_data)\n\nnaadata261 <- data.frame(time = naafit261$time,\n                        cumhaz = naafit261$cumhaz, \n                        esvea = c(rep(names(naafit261$strata)[1], naafit261$strata[1]),\n                               rep(names(naafit261$strata)[2], naafit261$strata[2])))\n\n(fig261 <- ggplot(aes(x = time, y = cumhaz, linetype = esvea), data = naadata261) + \n          geom_step(size = 1) + \n          scale_linetype_discrete(\"ESVEA\", labels = c(\"0\", \"1\")) + \n          xlab(\"Time since randomization (years)\") + \n          ylab(\"Cumulative hazard\"))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* To examine how ESVEA affects the mortality rate after stroke we will only consider the subjects who have a stroke during the \n  study. Thus, we will create a new data frame called 'stroke_data'.;\n  \n* Two observations (id 24 and 368) die on the same days as they have a stroke. We will add 0.5 day to their death time such that\n  it is not identical to time of stroke. Otherwise, they will not be used in the regression.;\n\ntitle \"2.6.1\";\ndata stroke_data;\n   set chs_data;\n   if stroke = 1;\n   if timestroke = timedeath then timedeath = timedeath + 0.5/365.25;\nrun;\n\n* If the time variable is time since recruitment we need to take delayed entry into account. \n\n* We will estimate the cumulative hazard non-parametrically with the Nelson-Aalen estimator which is implemented in the phreg\n  procedure. We must take delayed entry into account. Thus, both the entry time 'timestroke' and exit time 'timedeath' is included\n  in the model statement.;\n\nproc phreg data=stroke_data; \n    model (timestroke,timedeath)*death(0)=;\n    strata esvea;\n    baseline out=hazdata cumhaz=naa;\nrun;\n\n* Then, the estimates can be plotted;\n\ntitle \"2.6.1: Nelson-Aalen estimate of the cumulative hazards of death after stroke\";\nproc gplot data=hazdata;\n    plot naa*timedeath=esvea / haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 15.19 by 1 minor=none label=('Years');\n    axis2 order=0 to 3.3 by 0.1 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\n2.\nAssume proportional hazards and estimate the hazard ratio between subjects with or without ESVEA.\n\nRSAS\n\n\nSimilarly, we fit the Cox model where both time of entry and exit are included in the Surv object.\n\n\nCode show/hide\n#Cox model with time since recruitment as baseline\ncox262 <- coxph(Surv(timestroke, timedeath, death) ~ esvea, ties = \"breslow\", data =stroke_data)\nsummary(cox262)\n\n\nCall:\ncoxph(formula = Surv(timestroke, timedeath, death) ~ esvea, data = stroke_data, \n    ties = \"breslow\")\n\n  n= 73, number of events= 47 \n\n        coef exp(coef) se(coef)     z Pr(>|z|)\nesvea 0.2624    1.3001   0.3075 0.853    0.393\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea       1.3     0.7692    0.7116     2.375\n\nConcordance= 0.549  (se = 0.036 )\nLikelihood ratio test= 0.72  on 1 df,   p=0.4\nWald test            = 0.73  on 1 df,   p=0.4\nScore (logrank) test = 0.73  on 1 df,   p=0.4\n\n\nWe get a hazard ratio of 1.300 for ESVEA with a Wald test of 0.853 and a corresponding p-value of 0.393. This suggests that having ESVEA does not significantly increase the rate of death after stroke when the time variable is time since recruitment.\n\n\n\n\nCode show/hide\n*Similarly, we fit a Cox model where both entry and exit are included in the model statement.;\n\ntitle \"2.6.2\";\nproc phreg data = stroke_data;\n    model (timestroke,timedeath)*death(0)=esvea;\nrun;\n\n* We get a hazard ratio of exp(0.26242) = 1.3 for ESVEA with a Chi-square statistic of 0.7282 and a corresponding p-value of 0.3935. \n  This suggests that having ESVEA does not significantly increase the rate of death after stroke when the time variable is time \n  since recruitment.; \n* In the model where the time variable is time since stroke, a new variable 'timesincestroke' is added to the stroke_data data set ;\n\ntitle \"2.6.3\";\ndata stroke_data;\n   set stroke_data;\n   timesincestroke = timedeath - timestroke;\nrun;\n\n* The Nelson Aalen estimates of the cumulative hazards are then calculated and plotted as before;\n\nproc phreg data=stroke_data; \n    model timesincestroke*death(0)=;\n    strata esvea;\n    baseline out=hazdata cumhaz=naa;\nrun;\n\ntitle \"2.6.3: Nelson-Aalen estimate of the cumulative hazards of death after stroke\";\nproc gplot data=hazdata;\n    plot naa*timesincestroke = esvea / haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 15.19 by 1 minor=none label=('Years');\n    axis2 order=0 to 3.5 by 0.1 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\n\n\n* Likewise, the hazard ratio is estimated assuming proportional hazards with the Cox model; \n\ntitle \"2.6.3\";\nproc phreg data = stroke_data;\n    model timesincestroke*death(0)=esvea;\nrun;\n\n* We get a hazard ratio of exp(0.15385) = 1.1663 for ESVEA with a  Ï‡2 statistic of 0.2458 and a corresponding p-value of 0.62. Thus,\n  ESVEA does not increase the risk of death after stroke significantly when the time variable is time since stroke as well.\n\n\n\n\n\n\n\n3.\nRepeat these two questions using now the time variable ‘time since stroke’ and compare the results.\n\nRSAS\n\n\nIn the model where the time variable is time since stroke, a new variable timesincestroke is added to the data set and used as time variable in the Surv object in the formula for the Cox model.\n\n\nCode show/hide\n#Adding time since stroke as new column to the data set\nstroke_data$timesincestroke <- stroke_data$timedeath - stroke_data$timestroke\n\n\nThe cumulative hazards are then estimated non-parametrically using survfit.\n\n\nCode show/hide\nnaafit263 <- survfit(formula = Surv(timesincestroke, death) ~ esvea, data = stroke_data)\n\nnaadata263 <- data.frame(time = naafit263$time,\n                        cumhaz = naafit263$cumhaz, \n                        esvea = c(rep(names(naafit263$strata)[1], naafit263$strata[1]),\n                               rep(names(naafit263$strata)[2], naafit263$strata[2])))\n\n(fig263 <- ggplot(aes(x = time, y = cumhaz, linetype = esvea), data = naadata263) + \n          geom_step(size = 1) + \n          scale_linetype_discrete(\"ESVEA\", labels = c(\"0\", \"1\")) + \n          xlab(\"Time since stroke (years)\") + \n          ylab(\"Cumulative hazard\"))\n\n\n\n\n\nThe hazard ratio is estimated assuming proportional hazards using the Cox model\n\n\nCode show/hide\ncox263 <- coxph(Surv(timesincestroke, death) ~ esvea, ties = \"breslow\", data =stroke_data)\nsummary(cox263)\n\n\nCall:\ncoxph(formula = Surv(timesincestroke, death) ~ esvea, data = stroke_data, \n    ties = \"breslow\")\n\n  n= 73, number of events= 47 \n\n        coef exp(coef) se(coef)     z Pr(>|z|)\nesvea 0.1532    1.1655   0.3103 0.494    0.622\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.166      0.858    0.6345     2.141\n\nConcordance= 0.507  (se = 0.038 )\nLikelihood ratio test= 0.24  on 1 df,   p=0.6\nWald test            = 0.24  on 1 df,   p=0.6\nScore (logrank) test = 0.24  on 1 df,   p=0.6\n\n\nWe get a hazard ratio of 1.1654 and a Wald test of 0.493 with a corresponding p-value of 0.622. This suggests that ESVEA does not change the hazard significantly when the time variable is time since stroke as well.\n\n\n\n\nCode show/hide\ndata stroke_data;\n   set stroke_data;\n   timesincestroke = timedeath - timestroke;\nrun;\n\n* The Nelson Aalen estimates of the cumulative hazards are then calculated and plotted as before;\n\nproc phreg data=stroke_data; \n    model timesincestroke*death(0)=;\n    strata esvea;\n    baseline out=hazdata cumhaz=naa;\nrun;\n\ntitle \"2.6.3: Nelson-Aalen estimate of the cumulative hazards of death after stroke\";\nproc gplot data=hazdata;\n    plot naa*timesincestroke = esvea / haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 15.19 by 1 minor=none label=('Years');\n    axis2 order=0 to 3.5 by 0.1 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\n\n\n* Likewise, the hazard ratio is estimated assuming proportional hazards with the Cox model; \n\ntitle \"2.6.3\";\nproc phreg data = stroke_data;\n    model timesincestroke*death(0)=esvea;\nrun;\n\n* We get a hazard ratio of exp(0.15385) = 1.1663 for ESVEA with a  Ï‡2 statistic of 0.2458 and a corresponding p-value of 0.62. Thus,\n  ESVEA does not increase the risk of death after stroke significantly when the time variable is time since stroke as well.\n\n\n\n\n\n\n\n\nExercise 2.7\n\n1.\nConsider the data from the Copenhagen Holter study and fit Cox models for the cause-specific hazards for the outcomes stroke and death without stroke including ESVEA, sex, age, and sysBP.\nThe data should be loaded as chs_data:\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nNote that the time variables, timeafib, timestroke and timedeath, are measured in days. We will first convert them to years for easier interpretations.\n\n\nCode show/hide\nchs_data$timeafib   <- chs_data$timeafib/365.25\nchs_data$timestroke <- chs_data$timestroke/365.25\nchs_data$timedeath  <- chs_data$timedeath/365.25\n\n\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out = chs_data\ndatafile = 'data/cphholter.csv'\ndbms= csv replace;\ngetnames=yes;\nrun;\n\n* We will convert the time variables ('timeafib', 'timestroke', and 'timedeath') from days to years;\n\ndata chs_data;\nset chs_data;\ntimeafib = timeafib/365.25;\ntimestroke = timestroke/365.25;\ntimedeath = timedeath/365.25;\nrun;\n\n\n\n\n\n\nRSAS\n\n\nWe fit a Cox model to the cause-specific hazard for the outcome stroke\n\n\nCode show/hide\nchs_data$timestrokeordeath <- ifelse(chs_data$stroke == 1, chs_data$timestroke, chs_data$timedeath) \nchs_data$strokeordeath <- ifelse(chs_data$stroke == 1, 1, chs_data$death) \n\ncox27_stroke <- coxph(Surv(timestrokeordeath, stroke) ~ esvea + sex + age + sbp, ties = \"breslow\", data =chs_data)\nsummary(cox27_stroke)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, stroke) ~ esvea + sex + \n    age + sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 72 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.702407  2.018606 0.269968 2.602  0.00927 ** \nsex   0.491881  1.635389 0.248634 1.978  0.04789 *  \nage   0.078980  1.082183 0.019054 4.145  3.4e-05 ***\nsbp   0.011340  1.011404 0.004651 2.438  0.01477 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     2.019     0.4954     1.189     3.426\nsex       1.635     0.6115     1.005     2.662\nage       1.082     0.9241     1.043     1.123\nsbp       1.011     0.9887     1.002     1.021\n\nConcordance= 0.728  (se = 0.028 )\nLikelihood ratio test= 41.22  on 4 df,   p=2e-08\nWald test            = 43.26  on 4 df,   p=9e-09\nScore (logrank) test = 47.2  on 4 df,   p=1e-09\n\n\nWe get a hazard ratio of 2.02 and a Wald test of 2.602 with a corresponding p-value of 0.009.\nTo fit a Cox model for the outcome death without stroke we must first add the variable death without stroke to our data set. Afterwards, the model can be fitted using coxph.\n\n\nCode show/hide\nchs_data$death_wo_stroke <- ifelse(chs_data$stroke == 1, 0, chs_data$death)\n\ncox27_death <- coxph(Surv(timestrokeordeath, death_wo_stroke) ~ esvea + sex + age + sbp, ties = \"breslow\", data =chs_data)\nsummary(cox27_death)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, death_wo_stroke) ~ esvea + \n    sex + age + sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 213 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.160081  1.173605 0.186795 0.857    0.391    \nsex   0.605281  1.831766 0.147665 4.099 4.15e-05 ***\nage   0.076073  1.079041 0.010759 7.071 1.54e-12 ***\nsbp   0.002956  1.002960 0.002867 1.031    0.303    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.174     0.8521    0.8138     1.692\nsex       1.832     0.5459    1.3714     2.447\nage       1.079     0.9267    1.0565     1.102\nsbp       1.003     0.9970    0.9973     1.009\n\nConcordance= 0.657  (se = 0.019 )\nLikelihood ratio test= 64.37  on 4 df,   p=3e-13\nWald test            = 67.44  on 4 df,   p=8e-14\nScore (logrank) test = 70.93  on 4 df,   p=1e-14\n\n\nWe get a hazard ratio of 1.17 and a Wald test of 0.857 with a corresponding p-value of 0.391.\n\n\n\n\nCode show/hide\n* We fit a Cox model to the cause-specific hazard for the outcome stroke;\n\ntitle '2.7';\nproc phreg data = chs_data;\n    model timestrokeordeath*stroke(0)= esvea sex age sbp;\nrun;\n\n* We get a hazard ratio of 2.02 and a Chi-square statistic of 6.77 on 1 degree of freedom with a corresponding p-value of 0.009. \n  This suggest that having ESVEA does change the hazard significantly when the outcome is stroke.;\n\n* To fit a Cox model for the outcome death wihtout stroke we must first add the censoring variable death without stroke to our data \n  set. Afterwards, the model can be fitted with the phreg procedure;\n  \ndata chs_data;\n    set chs_data;\n    death_wo_stroke = death;\n    if stroke = 1 then death_wo_stroke = 0;\nrun;\n\nproc phreg data = chs_data;\n    model timestrokeordeath*death_wo_stroke(0)= esvea sex age sbp;\nrun;\n\n* We get a hazard ratio of 1.17 and a Chi-square statistic of 0.7344 on 1 degree of freedom with a corresponding p-value of 0.391. \n  This suggests that the status of ESVEA does not change the hazard significantly when the outcome is death without stroke.;\n\n\n\n\n\n\n\n2.\nCompare with the results from Exercise 4 in Chapter 2 (first question).\nIt is seen that (male) sex and age are both significantly associated with increased cause-specific hazards whereas ESVEA and SysBP are only associated with the rate of stroke. The coefficients for the composite end-point are between those for the cause-specific hazards.\nPlease note that the Cox model for the composite end-point and those for the separate cause-specific hazards are mathematically incompatible.\n\n\n\nExercise 2.8\nConsider the data on repeated episodes in affective disorder, Example 1.1.5.\n\nRSAS\n\n\nThe data should be loaded as affective_data:\nLoad the relevant packages:\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(mets)\nlibrary(ggplot2)\ntheme_set(theme_bw())\n\n\n\n\nThe data should be loaded as affective_data:\n\n\nCode show/hide\nproc import out=affective_data\n    datafile='data/affective.csv' \n    dbms=csv replace;\n    getnames=yes;\nrun;\n\n\n\n\n\n\n1.\nEstimate non-parametrically the cumulative event intensities for unipolar and bipolar patients.\n\nRSAS\n\n\nWe estimate the cumulative event intensities non-parametrically using the survfit function from the survival package. We must include the id = id argument since we have multiple lines from the same subject. Furthermore, we include start in the surv object of the formula argument to account for delayed entry and restrict attention to records with state=0 (out of hospital).\n\n\nCode show/hide\n# Estimating the cumulative event intensities for unipolar and bipolar patients non-parametrically\nnaafit281 <- survfit(Surv(start, stop, status == 1) ~ bip,\n                 data = subset(affective_data, state==0), id = id)\n\n\nWe then plot the result\n\n\nCode show/hide\n# Collecting data in data frame\nnaadata281 <- data.frame(cumhaz = naafit281$cumhaz,\n                        time = naafit281$time,\n                        disorder = c(rep(\"Unipolar\", naafit281$strata[[1]]),\n                                  rep(\"Bipolar\", naafit281$strata[[2]])))\n\n# Plotting the result\nfig281 <- ggplot(data = naadata281) + geom_step(aes(x = time/12, y = cumhaz, linetype = disorder), size = 1) +\n  ylab(\"Cumulative event intensity\") +\n  xlab(\"Time since first admission (years)\") +\n  theme_bw() \nfig281\n\n\n\n\n\nThe cumulative event intensity is at all times higher for bipolar patients compared to unipolar patients.\n\n\n\n\nCode show/hide\n* We will non-parametrically estimate the cumulative event intensities for unipolar and bipolar patients using the phreg procedure \n  where we include 'status(0,2,3)' as censoring variables in the model statement since the event of interest is 1 (admission \n  to hospital) and 'bip' in the strata. Furthermore, we include 'start' in the model statement because of delayed entry. Attention \n  is restricted to records where state=0 (out of hospital).;\n\ntitle '2.8.1';\nproc phreg data=affective_data; \n    where state=0;\n    model (start,stop)*status(0,2,3)=;\n    strata bip;\n    baseline out=data281 cumhaz=naa;\nrun;\n\n* We plot the result using the gplot procedure;\n\nproc gplot data=data281;\n    plot naa*stop=bip /haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 340 by 24 label=('Time since first admission');\n    axis2 order=0 to 10 by 0.5 label=(a=90 'Cumulative event intensity');\n    symbol1 i=stepjl c=red;\n    symbol2 i=stepjl c=blue;\nrun;\n\n* The cumulative event intensity is at all times higher for bipolar patients compared to unipolar patients.;\n\n\n\n\n\n\n\n2.\nFit an AG-type model and estimate, thereby, the ratio between intensities for unipolar and bipolar patients, adjusting for year of diagnosis.\n\nRSAS\n\n\nWe can fit a very simple version of a AG model (like the one described in Section 2.4.1) using the coxph function from the survival package. We take delayed entry into account in the Surv object of the formula argument and adjust for disease type (unipolar vs bipolar) and year of diagnosis. Furthermore, we restrict the data set to the rows where patients are out of hospital (state = 0).\n\n\nCode show/hide\n# Fitting an AG-type model\nagfit282 <- coxph(Surv(start, stop, status == 1) ~ bip + year, \n                        data = subset(affective_data, state == 0), \n                        method = \"breslow\")\nsummary(agfit282)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip + year, \n    data = subset(affective_data, state == 0), method = \"breslow\")\n\n  n= 626, number of events= 542 \n\n         coef exp(coef) se(coef)      z Pr(>|z|)    \nbip   0.35001   1.41908  0.09457  3.701 0.000215 ***\nyear -0.11814   0.88857  0.03404 -3.471 0.000519 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbip     1.4191     0.7047    1.1790    1.7081\nyear    0.8886     1.1254    0.8312    0.9499\n\nConcordance= 0.567  (se = 0.021 )\nLikelihood ratio test= 26.48  on 2 df,   p=2e-06\nWald test            = 26.87  on 2 df,   p=1e-06\nScore (logrank) test = 27.1  on 2 df,   p=1e-06\n\n\nThus, we estimate hazard ratio of \\(\\exp(0.35) = 1.4291\\) of admission to hospital for being diagnosed with bipolar disorder compared to those diagnosed with unipolar disorder.\n\n\n\n\nCode show/hide\n*We fit a simple AG-type model (like the one described in section 2.4.1) using the phreg procedure on the subset of data where 'state = 0', \ni.e. periods where patients are out of hospital.; \n\ntitle '2.8.2';\nproc phreg data=affective_data; \n    model (start,stop)*status(0,2,3)= bip year;\n    where state = 0;\nrun;\n\n* Thus, we estimate hazard ratio of exp(0.35) = 1.4291 of admission to hospital for being diagnosed with bipolar disorder \n  compared to those diagnosed with unipolar disorder.;\n\n\n\n\n\n\n\n3.\nFit a PWP model and estimate, thereby, the ratio between intensities for unipolar and bipolar patients, adjusting for year of diagnosis.\n\nRSAS\n\n\nWe can fit a PWP model using the coxph function by adding strata(episode) in the formula argument. We must still restrict the data to time periods where the patients are out of hospital (state = 0).\n\n\nCode show/hide\n# Fitting a PWP model\npwpfit283 <- coxph(Surv(start, stop, status == 1) ~ strata(episode) + bip + year, \n                   data = subset(affective_data, state == 0), \n                   method = \"breslow\")\nsummary(pwpfit283)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ strata(episode) + \n    bip + year, data = subset(affective_data, state == 0), method = \"breslow\")\n\n  n= 626, number of events= 542 \n\n         coef exp(coef) se(coef)      z Pr(>|z|)  \nbip   0.24213   1.27396  0.11199  2.162   0.0306 *\nyear -0.03514   0.96547  0.03940 -0.892   0.3724  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbip     1.2740      0.785    1.0229     1.587\nyear    0.9655      1.036    0.8937     1.043\n\nConcordance= 0.54  (se = 0.021 )\nLikelihood ratio test= 5.34  on 2 df,   p=0.07\nWald test            = 5.45  on 2 df,   p=0.07\nScore (logrank) test = 5.47  on 2 df,   p=0.06\n\n\nWe get an estimate of the hazard ratio of readmission for patients diagnosed with bipolar disorder of \\(\\exp(0.2421) = 1.274\\) compared to patients diagnosed with unipolar disorder.\n\n\n\n\nCode show/hide\n* We fit a PWP model using the phreg procedure. The set up is the same as for the AG type model but we also include 'episode' in  the strata statement;\n\ntitle '2.8.3';\nproc phreg data=affective_data; \n    model (start,stop)*status(0,2,3)= bip year;\n    where state = 0;\n    strata episode;\nrun;\n\n* We get an estimate of the hazard ratio of readmission for patients diagnosed with bipolar disorder of exp(0.2421) = 1.274 compared to patients diagnosed with unipolar disorder.;\n\n\n\n\n\n\n\n4.\nCompare the results from the two models.\nWe get a smaller coefficient of ‘bip’ with the PWP model than with the AG model. This is because, by taking the number of previous episodes into account (via stratification), some of the discrepancy between bipolar and unipolar patients disappears since the occurrence of repeated episodes is itself affected by the initial diagnosis as discussed in the book."
  },
  {
    "objectID": "Ch3.html#pbc3-trial-in-liver-cirrhosis",
    "href": "Ch3.html#pbc3-trial-in-liver-cirrhosis",
    "title": "3  Intensity models",
    "section": "PBC3 trial in liver cirrhosis",
    "text": "PBC3 trial in liver cirrhosis\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\npbc3 <- read.csv(\"data/pbc3.csv\")\npbc3$log2bili <- with(pbc3, log2(bili))\npbc3$years <- with(pbc3, days/365.25)\n\n\n\n\n\n\nCode show/hide\nproc import out=pbc3\n    datafile=\"data/pbc3.csv\"\n    dbms=csv replace;\nrun;\ndata pbc3; \n    set pbc3;\n    log2bili=log2(bili);\nrun;\n\n\n\n\n\n\n\nTable 3.11\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\n# Treatment \ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(tment), \n      data = pbc3, tt = function(x,t, ...) (x==1)*t, method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(tment), data = pbc3, tt = function(x, t, ...) (x == 1) * \n    t, method = \"breslow\")\n\n              coef exp(coef) se(coef)      z        p\ntment     -0.65937   0.51718  0.40576 -1.625    0.104\nalb       -0.09136   0.91269  0.02167 -4.216 2.49e-05\nlog2bili   0.66299   1.94059  0.07478  8.866  < 2e-16\ntt(tment)  0.04497   1.04600  0.17811  0.253    0.801\n\nLikelihood ratio test=120.1  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(tment), \n      data = pbc3, tt = function(x,t, ...) (x==1)*log(t), method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(tment), data = pbc3, tt = function(x, t, ...) (x == 1) * \n    log(t), method = \"breslow\")\n\n              coef exp(coef) se(coef)      z        p\ntment     -0.61330   0.54156  0.24327 -2.521   0.0117\nalb       -0.09152   0.91254  0.02163 -4.232 2.32e-05\nlog2bili   0.66214   1.93894  0.07462  8.873  < 2e-16\ntt(tment)  0.10834   1.11442  0.25424  0.426   0.6700\n\nLikelihood ratio test=120.2  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(tment), \n      data = pbc3, tt = function(x,t, ...) (x==1)*(t>2), method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(tment), data = pbc3, tt = function(x, t, ...) (x == 1) * \n    (t > 2), method = \"breslow\")\n\n              coef exp(coef) se(coef)      z        p\ntment     -0.58773   0.55559  0.29228 -2.011   0.0443\nalb       -0.09104   0.91298  0.02168 -4.199 2.68e-05\nlog2bili   0.66456   1.94363  0.07466  8.901  < 2e-16\ntt(tment)  0.03169   1.03220  0.43384  0.073   0.9418\n\nLikelihood ratio test=120  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\n# Albumin \ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(alb), \n      data = pbc3, tt = function(x,t, ...) x*t, method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(alb), data = pbc3, tt = function(x, t, ...) x * t, method = \"breslow\")\n\n             coef exp(coef) se(coef)      z        p\ntment    -0.59080   0.55389  0.22472 -2.629 0.008562\nalb      -0.13296   0.87550  0.03998 -3.326 0.000882\nlog2bili  0.66405   1.94265  0.07476  8.882  < 2e-16\ntt(alb)   0.02317   1.02344  0.01854  1.250 0.211400\n\nLikelihood ratio test=121.6  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(alb), \n      data = pbc3, tt = function(x,t, ...) x*log(t), method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(alb), data = pbc3, tt = function(x, t, ...) x * log(t), \n    method = \"breslow\")\n\n             coef exp(coef) se(coef)      z        p\ntment    -0.58958   0.55456  0.22460 -2.625  0.00867\nalb      -0.10194   0.90308  0.02349 -4.341 1.42e-05\nlog2bili  0.66488   1.94425  0.07483  8.885  < 2e-16\ntt(alb)   0.03347   1.03404  0.02561  1.307  0.19120\n\nLikelihood ratio test=121.8  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(alb), \n      data = pbc3,  tt = function(x,t, ...) (x)*(t>2), method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(alb), data = pbc3, tt = function(x, t, ...) (x) * (t > \n    2), method = \"breslow\")\n\n             coef exp(coef) se(coef)      z       p\ntment    -0.59037   0.55412  0.22472 -2.627 0.00861\nalb      -0.11369   0.89254  0.02779 -4.091 4.3e-05\nlog2bili  0.66488   1.94426  0.07470  8.901 < 2e-16\ntt(alb)   0.05674   1.05838  0.04330  1.310 0.19005\n\nLikelihood ratio test=121.8  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\n# Log2 bilirubin\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(log2bili), \n      data = pbc3, tt = function(x,t, ...) x*t, method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(log2bili), data = pbc3, tt = function(x, t, ...) x * t, \n    method = \"breslow\")\n\n                 coef exp(coef) se(coef)      z        p\ntment        -0.54631   0.57908  0.22571 -2.420   0.0155\nalb          -0.09009   0.91385  0.02173 -4.147 3.37e-05\nlog2bili      0.77736   2.17571  0.13382  5.809 6.28e-09\ntt(log2bili) -0.06299   0.93895  0.06181 -1.019   0.3081\n\nLikelihood ratio test=121.1  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(log2bili), \n      data = pbc3, tt = function(x,t, ...) x*log(t), method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(log2bili), data = pbc3, tt = function(x, t, ...) x * log(t), \n    method = \"breslow\")\n\n                 coef exp(coef) se(coef)      z        p\ntment        -0.55398   0.57466  0.22536 -2.458    0.014\nalb          -0.09050   0.91347  0.02170 -4.170 3.04e-05\nlog2bili      0.68779   1.98931  0.07968  8.632  < 2e-16\ntt(log2bili) -0.07701   0.92588  0.08780 -0.877    0.380\n\nLikelihood ratio test=120.8  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\nCode show/hide\ncoxph(Surv(years, status != 0) ~ tment + alb + log2bili + tt(log2bili), \n      data = pbc3,  tt = function(x,t, ...) (x)*(t>2), method = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(years, status != 0) ~ tment + alb + log2bili + \n    tt(log2bili), data = pbc3, tt = function(x, t, ...) (x) * \n    (t > 2), method = \"breslow\")\n\n                 coef exp(coef) se(coef)      z        p\ntment        -0.54878   0.57765  0.22521 -2.437   0.0148\nalb          -0.09045   0.91352  0.02176 -4.157 3.22e-05\nlog2bili      0.73519   2.08587  0.09487  7.750 9.22e-15\ntt(log2bili) -0.18232   0.83334  0.14910 -1.223   0.2214\n\nLikelihood ratio test=121.5  on 4 df, p=< 2.2e-16\nn= 343, number of events= 88 \n   (6 observations deleted due to missingness)\n\n\n\n\n\n\nCode show/hide\n* Treatment; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili tmenttime/rl;\n    tmenttime=(tment=1)*days;\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili tmentlogtime/rl;\n    tmentlogtime=(tment=1)*log(days);\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili tmentt0/rl;\n    tmentt0=(tment=1)*(days>2*365.25);\nrun;\n\n* Log bilirubin;\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili bilitime/rl;\n    bilitime=log2bili*days;\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili bililogtime/rl;\n    bililogtime=log2bili*log(days);\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili bilit0/rl;\n    bilit0=log2bili*(days>2*365.25);\nrun;\n\n* Albumin; \nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili albtime/rl;\n    albtime=alb*days;\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili alblogtime/rl;\n    alblogtime=alb*log(days);\nrun;\n\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model days*status(0)=tment alb log2bili albt0/rl;\n    albt0=alb*(days>2*365.25);\nrun;"
  },
  {
    "objectID": "Ch3.html#guinea-bissau-childhood-vaccination-study",
    "href": "Ch3.html#guinea-bissau-childhood-vaccination-study",
    "title": "3  Intensity models",
    "section": "Guinea-Bissau childhood vaccination study",
    "text": "Guinea-Bissau childhood vaccination study\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nbissau <- read.csv(\"data/bissau.csv\")\n# Variables for age as time scale and dtp binary\nbissau$agein  <- with(bissau, age/(365.24/12))\nbissau$ageout <- with(bissau, agein+fuptime/(365.24/12))\nbissau$dtpany <- 1*with(bissau, dtp>0)\n\n\n\n\n\n\nCode show/hide\nproc import \n    datafile=\"data/bissau.csv\" out=bissau\n    dbms = csv replace;\nrun;\ndata bissau; \n    set bissau;\n    agein=age/(365.24/12);\n    ageout=agein+fuptime/(365.24/12);\n    dtpany=(dtp>0);\nrun; \n\n\n\n\n\n\n\nTable 3.1\n\nRSAS\n\n\n\n\nCode show/hide\ntable(bissau$bcg, bissau$dtp)\n\n\n   \n       0    1    2    3\n  0 1942   19    9    3\n  1 1159 1299  582  261\n\n\nCode show/hide\n100*table(bissau$bcg, bissau$dtp) / rowSums(table(bissau$bcg, bissau$dtp))\n\n\n   \n             0          1          2          3\n  0 98.4287886  0.9630005  0.4561581  0.1520527\n  1 35.1105726 39.3517116 17.6310209  7.9066949\n\n\n\n\n\n\nCode show/hide\nproc freq data=bissau;\n    tables bcg*dtp bcg*dtpany/ nocol nopercent;\nrun;\n\n\n\n\n\n\n\nTable 3.2\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\ncoxph(Surv(agein,ageout,dead!=0)~bcg,data=bissau,method=\"breslow\",timefix=F)\n\n\nCall:\ncoxph(formula = Surv(agein, ageout, dead != 0) ~ bcg, data = bissau, \n    method = \"breslow\", timefix = F)\n\n       coef exp(coef) se(coef)      z      p\nbcg -0.3558    0.7006   0.1407 -2.529 0.0114\n\nLikelihood ratio test=6.28  on 1 df, p=0.01218\nn= 5274, number of events= 222 \n\n\nCode show/hide\ncoxph(Surv(agein,ageout,dead!=0)~dtpany,data=bissau,method=\"breslow\",timefix=F)\n\n\nCall:\ncoxph(formula = Surv(agein, ageout, dead != 0) ~ dtpany, data = bissau, \n    method = \"breslow\", timefix = F)\n\n           coef exp(coef) se(coef)      z     p\ndtpany -0.03855   0.96218  0.14904 -0.259 0.796\n\nLikelihood ratio test=0.07  on 1 df, p=0.7958\nn= 5274, number of events= 222 \n\n\nCode show/hide\ncoxph(Surv(agein,ageout,dead!=0)~bcg+dtpany,data=bissau,method=\"breslow\",timefix=F)\n\n\nCall:\ncoxph(formula = Surv(agein, ageout, dead != 0) ~ bcg + dtpany, \n    data = bissau, method = \"breslow\", timefix = F)\n\n          coef exp(coef) se(coef)      z      p\nbcg    -0.5585    0.5720   0.1924 -2.902 0.0037\ndtpany  0.3286    1.3890   0.2021  1.625 0.1041\n\nLikelihood ratio test=9.01  on 2 df, p=0.01106\nn= 5274, number of events= 222 \n\n\nCode show/hide\ncoxph(Surv(agein,ageout,dead!=0)~bcg*dtpany,data=bissau,method=\"breslow\",timefix=F)\n\n\nCall:\ncoxph(formula = Surv(agein, ageout, dead != 0) ~ bcg * dtpany, \n    data = bissau, method = \"breslow\", timefix = F)\n\n              coef exp(coef) se(coef)      z       p\nbcg        -0.5764    0.5619   0.2023 -2.849 0.00439\ndtpany      0.1252    1.1334   0.7178  0.174 0.86151\nbcg:dtpany  0.2212    1.2475   0.7429  0.298 0.76595\n\nLikelihood ratio test=9.1  on 3 df, p=0.02796\nn= 5274, number of events= 222 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=bissau;\n    model ageout*dead(0) = bcg / entry=agein rl;\nrun;\nproc phreg data=bissau;\n    model ageout*dead(0) = dtpany / entry=agein rl;\nrun;\nproc phreg data=bissau;\n    model ageout*dead(0) = bcg dtpany / entry=agein rl;\nrun;\nproc phreg data=bissau;\n    model ageout*dead(0) = bcg dtpany bcg*dtpany / entry=agein rl;\nrun;"
  },
  {
    "objectID": "Ch3.html#testis-cancer-incidence-and-maternal-parity",
    "href": "Ch3.html#testis-cancer-incidence-and-maternal-parity",
    "title": "3  Intensity models",
    "section": "Testis cancer incidence and maternal parity",
    "text": "Testis cancer incidence and maternal parity\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\ntestis <- read.csv(\"data/testis.csv\")\n# Add extra variables\ntestis$lpyrs <- log(testis$pyrs)\ntestis$par2 <- as.numeric(testis$parity < 2)\n\n\n\n\n\n\nCode show/hide\nproc import out=testis\n    datafile=\"data/testis.csv\"\n    dbms=csv replace;\nrun;\ndata testis; \n    set testis; \n    lpyrs = log(pyrs); \n    par2 = (parity>=2); \nrun;\n\n\n\n\n\n\n\nFigure 3.1\n\nR\n\n\n\n\nCode show/hide\n# Data frames\ndf1 <- data.frame(x1 = 1900 + c(50, 58, 63, 68, 73), \n                  y1 = rep(0, 5), \n                  x2 = rep(2000, 5), \n                  y2 = 100 - c(50, 58, 63, 68, 73))\n\ndf2 <- data.frame(x1 = 1968.25 + c(0, 0, 0, 0, 73-68.25), \n                  y1 = c(68.25 - 50, 68.25 - 58, 68.25 - 63, 68.25 - 68, 0), \n                  x2 = rep(1993, 5), \n                  y2 = 100 - c(50, 58, 63, 68, 73) - 7)\n\ndf3 <- data.frame(x1 = c(1968.25, 1993, 1968.25, 1968.25, 1968.25 + 1.75, 1968.25 + 6.75, 1968.25 + 11.75), \n                  y1 = c(0, 0, 0, 15, 20, 25, 30), \n                  x2 = c(1968.25, 1993, 1993, 1993, 1993, 1993, 1993), \n                  y2 = c(68.25 - 50, 100 - 57, 0, 15, 20, 25, 30) \n                  )\n\n# For labels\nD <- tapply( testis$cases, list( testis$age, testis$cohort ), sum )\nY <- tapply( testis$pyrs, list( testis$age, testis$cohort ), sum )\nx <- outer( unique( testis$age )+c(17.5,rep(2.5,4)),\n            unique( testis$cohort )+2.5,\n            \"+\" )\nx[1,] <- x[1,]-c(0,3,3,3,2)\ny <- outer( c(13,17,22,27,32), rep(1,5), \"*\" )\n\nlabel_data <- data.frame(x = x[!is.na(Y)], \n                         y = y[!is.na(Y)], \n                         label = paste( round( Y/10^4 )[!is.na(Y)] )\n                         )\nlabel_data2 <- data.frame(x = 1956, y = 47.5, label = \"PY (10,000)\")\n\n# Create plot\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 16), \n        axis.text.x = element_text(size = 16), \n        axis.text.y = element_text(size = 16))\n\nfig3.1 <- ggplot(df1) + \n  geom_vline(xintercept = c(1968.25, 1993),\n             size = 1, linetype = \"dotted\") +\n  geom_hline(yintercept = c(0, 15, 20, 25, 30),\n             size = 1, linetype = \"dotted\") +\n  geom_segment(aes(x = x1, y = y1, \n                   xend = x2, yend = y2), \n               data = df1,\n               size = 1, linetype = \"dotted\") + \n  geom_segment(aes(x = x1, y = y1, \n                   xend = x2, yend = y2), \n               data = df2,\n               size = 1.5) + \n  geom_segment(aes(x = x1, y = y1, \n                   xend = x2, yend = y2), \n               data = df3,\n               size = 1.5) + \n  theme_general + \n  xlab(\"Calendar time\") + \n  ylab(\"Age (years)\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.005)),\n                     limits = c(1950, 2000), \n                     breaks = seq(1950, 2000, 10)) +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.005)), \n                     limits = c(0, 50), \n                     breaks = seq(0, 50, 10)) + \n  geom_label(aes(x = x, y = y, label = label), size = 5, label.size = NA,\n             hjust = 1.1, vjust = 0.7, \n             data = label_data) + \n  theme(plot.margin=unit(c(0.75, 0.75, 0.75, 0.75), \"cm\"))\n\nfig3.1\n\n\n\n\n\n\n\n\n\n\nTable 3.5\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(broom)\nlibrary(lmtest)\n\n# Column 1\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\ntestis$age <- as.factor(testis$age)\ntestis$age <- relevel(testis$age, ref = '20')\nsummary(glm(cases ~ offset(lpyrs) + par2 + age, data = testis, family = poisson))\n\n\n\nCall:\nglm(formula = cases ~ offset(lpyrs) + par2 + age, family = poisson, \n    data = testis)\n\nCoefficients:\n            Estimate Std. Error  z value Pr(>|z|)    \n(Intercept) -9.04435    0.08393 -107.757  < 2e-16 ***\npar2         0.21663    0.08405    2.577  0.00996 ** \nage0        -4.03084    0.21105  -19.099  < 2e-16 ***\nage15       -1.17094    0.11886   -9.851  < 2e-16 ***\nage25        0.55962    0.09802    5.709 1.14e-08 ***\nage30        0.75263    0.13272    5.671 1.42e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1647.61  on 236  degrees of freedom\nResidual deviance:  201.07  on 231  degrees of freedom\nAIC: 540.84\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode show/hide\n# Column 2\ntestis$motherage <- as.factor(testis$motherage)\ntestis$motherage <- relevel(testis$motherage, ref = \"30\")\ntestis$cohort <- as.factor(testis$cohort)\ntestis$cohort <- relevel(testis$cohort, ref = \"1973\")\nsummary(poisfull<-glm(cases ~ offset(lpyrs) + par2 + age + motherage + cohort, \n                      data = testis,family = poisson))\n\n\n\nCall:\nglm(formula = cases ~ offset(lpyrs) + par2 + age + motherage + \n    cohort, family = poisson, data = testis)\n\nCoefficients:\n            Estimate Std. Error z value Pr(>|z|)    \n(Intercept) -9.11684    0.29271 -31.146  < 2e-16 ***\npar2         0.22967    0.09112   2.521   0.0117 *  \nage0        -4.00398    0.23905 -16.749  < 2e-16 ***\nage15       -1.16652    0.12522  -9.316  < 2e-16 ***\nage25        0.61710    0.10445   5.908 3.46e-09 ***\nage30        0.95356    0.15378   6.201 5.62e-10 ***\nmotherage12  0.02926    0.24121   0.121   0.9034    \nmotherage20  0.05796    0.22233   0.261   0.7943    \nmotherage25 -0.11663    0.22510  -0.518   0.6044    \ncohort1950  -0.36275    0.28800  -1.260   0.2078    \ncohort1958  -0.08031    0.24838  -0.323   0.7464    \ncohort1963   0.12346    0.23712   0.521   0.6026    \ncohort1968   0.13376    0.23600   0.567   0.5709    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 1647.6  on 236  degrees of freedom\nResidual deviance:  190.2  on 224  degrees of freedom\nAIC: 543.98\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode show/hide\ntidy(poisfull, exponentiate = TRUE, conf.int = TRUE)\n\n\n# A tibble: 13 × 7\n   term        estimate std.error statistic   p.value  conf.low conf.high\n   <chr>          <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept) 0.000110    0.293    -31.1   5.74e-213 0.0000605  0.000191\n 2 par2        1.26        0.0911     2.52  1.17e-  2 1.05       1.51    \n 3 age0        0.0182      0.239    -16.7   5.72e- 63 0.0112     0.0286  \n 4 age15       0.311       0.125     -9.32  1.21e- 20 0.243      0.397   \n 5 age25       1.85        0.104      5.91  3.46e-  9 1.51       2.28    \n 6 age30       2.59        0.154      6.20  5.62e- 10 1.91       3.50    \n 7 motherage12 1.03        0.241      0.121 9.03e-  1 0.652      1.68    \n 8 motherage20 1.06        0.222      0.261 7.94e-  1 0.698      1.68    \n 9 motherage25 0.890       0.225     -0.518 6.04e-  1 0.583      1.41    \n10 cohort1950  0.696       0.288     -1.26  2.08e-  1 0.398      1.23    \n11 cohort1958  0.923       0.248     -0.323 7.46e-  1 0.574      1.52    \n12 cohort1963  1.13        0.237      0.521 6.03e-  1 0.720      1.83    \n13 cohort1968  1.14        0.236      0.567 5.71e-  1 0.729      1.84    \n\n\nCode show/hide\n# LRT for mother's age\npoismage<-glm(cases ~ offset(lpyrs) + par2 + age + cohort, \n              data = testis,family = poisson)\nlrtest(poisfull,poismage)\n\n\nLikelihood ratio test\n\nModel 1: cases ~ offset(lpyrs) + par2 + age + motherage + cohort\nModel 2: cases ~ offset(lpyrs) + par2 + age + cohort\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1  13 -258.99                     \n2  10 -260.25 -3 2.5336     0.4692\n\n\nCode show/hide\n# LRT for birth cohort of son\npoiscohort<-glm(cases ~ offset(lpyrs) + par2 + age + motherage, \n                data = testis,family = poisson)\nlrtest(poisfull,poiscohort)\n\n\nLikelihood ratio test\n\nModel 1: cases ~ offset(lpyrs) + par2 + age + motherage + cohort\nModel 2: cases ~ offset(lpyrs) + par2 + age + motherage\n  #Df  LogLik Df  Chisq Pr(>Chisq)  \n1  13 -258.99                       \n2   9 -263.60 -4 9.2204    0.05582 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# LRT parity and age\npoisinteract<-glm(cases ~ offset(lpyrs) + par2 + age + motherage + cohort + par2*age, \n                  data = testis, family = poisson)\nlrtest(poisfull,poisinteract)\n\n\nLikelihood ratio test\n\nModel 1: cases ~ offset(lpyrs) + par2 + age + motherage + cohort\nModel 2: cases ~ offset(lpyrs) + par2 + age + motherage + cohort + par2 * \n    age\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1  13 -258.99                     \n2  17 -255.11  4 7.7606     0.1008\n\n\nCode show/hide\n# HR for seminomas\ntidy(glm(semi ~ offset(lpyrs) + par2 + age + motherage + cohort, \n         data = testis, family = poisson),\n     exponentiate = T, conf.int = T)\n\n\n# A tibble: 13 × 7\n   term         estimate std.error statistic  p.value   conf.low conf.high\n   <chr>           <dbl>     <dbl>     <dbl>    <dbl>      <dbl>     <dbl>\n 1 (Intercept) 0.0000297     1.00   -10.4    1.98e-25 0.00000314  0.000178\n 2 par2        1.23          0.171    1.23   2.19e- 1 0.886       1.73    \n 3 age0        0.00297       1.13    -5.17   2.38e- 7 0.000147    0.0176  \n 4 age15       0.0949        0.443   -5.32   1.03e- 7 0.0357      0.209   \n 5 age25       2.98          0.200    5.47   4.55e- 8 2.03        4.44    \n 6 age30       6.62          0.245    7.71   1.30e-14 4.11       10.8     \n 7 motherage12 0.900         0.640   -0.164  8.69e- 1 0.295       3.94    \n 8 motherage20 0.978         0.618   -0.0360 9.71e- 1 0.339       4.15    \n 9 motherage25 1.23          0.617    0.338  7.35e- 1 0.427       5.22    \n10 cohort1950  0.731         0.907   -0.345  7.30e- 1 0.140       5.71    \n11 cohort1958  0.966         0.879   -0.0389 9.69e- 1 0.198       7.26    \n12 cohort1963  0.862         0.869   -0.171  8.64e- 1 0.180       6.39    \n13 cohort1968  0.691         0.879   -0.421  6.74e- 1 0.140       5.18    \n\n\nCode show/hide\n# HR for non-seminomas\ntidy(glm(nonsemi ~ offset(lpyrs) + par2 + age + motherage + cohort, \n         data = testis, family = poisson),\n     exponentiate = T, conf.int = T)\n\n\n# A tibble: 13 × 7\n   term         estimate std.error statistic   p.value  conf.low conf.high\n   <chr>           <dbl>     <dbl>     <dbl>     <dbl>     <dbl>     <dbl>\n 1 (Intercept) 0.0000860     0.308   -30.4   7.09e-203 0.0000459  0.000154\n 2 par2        1.27          0.108     2.19  2.88e-  2 1.03       1.56    \n 3 age0        0.0223        0.246   -15.4   9.35e- 54 0.0135     0.0355  \n 4 age15       0.369         0.133    -7.48  7.32e- 14 0.283      0.478   \n 5 age25       1.49          0.125     3.21  1.35e-  3 1.17       1.91    \n 6 age30       1.21          0.229     0.846 3.97e-  1 0.762      1.88    \n 7 motherage12 1.09          0.264     0.341 7.33e-  1 0.662      1.87    \n 8 motherage20 1.10          0.239     0.382 7.03e-  1 0.700      1.79    \n 9 motherage25 0.804         0.244    -0.892 3.72e-  1 0.508      1.33    \n10 cohort1950  0.639         0.328    -1.37  1.72e-  1 0.335      1.22    \n11 cohort1958  0.828         0.264    -0.718 4.73e-  1 0.499      1.41    \n12 cohort1963  1.15          0.247     0.550 5.82e-  1 0.715      1.89    \n13 cohort1968  1.19          0.245     0.722 4.70e-  1 0.748      1.96    \n\n\n\n\n\n\nCode show/hide\n* Column 1; \nproc genmod;\n    class age (ref='20') par2 (ref='1');\n    model cases=par2 age/dist=poi offset=lpyrs type3;\n    estimate 'RR' par2 1 -1/exp;\nrun;\n* Column 2; \nproc genmod;\n    class age (ref='20') motherage(ref='30') cohort(ref='1973') par2 (ref='1');\n    model cases=par2 age motherage cohort/dist=poi offset=lpyrs type3;\n    estimate 'RR' par2 1 -1/exp;\nrun;\n* In-text interaction test; \nproc genmod;\n    class age (ref='20') motherage(ref='30') cohort(ref='1973') par2 (ref='1');\n    model cases=par2 age motherage cohort par2*age/dist=poi offset=lpyrs type3;\nrun;\n* seminomas;\nproc genmod;\n    class age (ref='20') motherage(ref='30') cohort(ref='1973') par2 (ref='1');\n    model semi=par2 age motherage cohort/dist=poi offset=lpyrs type3;\n    estimate 'RR' par2 1 -1/exp;\nrun;\n* non-seminomas;\nproc genmod;\n    class age (ref='20') motherage(ref='30') cohort(ref='1973') par2 (ref='1');\n    model nonsemi=par2 age motherage cohort/dist=poi offset=lpyrs type3;\n    estimate 'RR' par2 1 -1/exp;\nrun;"
  },
  {
    "objectID": "Ch3.html#prova-trial-in-liver-cirrhosis",
    "href": "Ch3.html#prova-trial-in-liver-cirrhosis",
    "title": "3  Intensity models",
    "section": "PROVA trial in liver cirrhosis",
    "text": "PROVA trial in liver cirrhosis\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nprova <- read.csv(\"data/prova.csv\", na.strings = c(\".\"))\n# Treatment 2x2 factorial\nprova$beh <- with(prova, as.factor(scle + beta*2))\n# Extra variables\nprovany <- prova\nprovany$log2bili <- with(provany, log2(bili))\nprovany$btime    <- ifelse(provany$bleed == 1, provany$timebleed, provany$timedeath)\nprovany$d0time   <- ifelse(provany$bleed == 1, provany$timebleed, provany$timedeath)\nprovany$dead0    <- ifelse(provany$bleed == 1, 0, provany$death)\nprovany$outof0   <- ifelse(provany$bleed == 1, 1, provany$death)\nprovany$bdtime   <- ifelse(provany$bleed == 1, provany$timedeath, NA)\nprovany$deadb    <- ifelse(provany$bleed == 1, provany$death, NA)\nprovany$wait     <- ifelse(provany$bleed == 1, provany$bdtime - provany$timebleed, NA)\n\n\n\n\n\n\nCode show/hide\nproc import out=prova\n    datafile=\"data/prova.csv\"\n    dbms=csv replace;\nrun;\ndata prova; \n    set prova; \n    beh = scle + beta*2; \n    log2bili = log2(bili);\n    if bleed = 1 then wait = timedeath - timebleed;\nrun; \ndata provany; \n    set prova;\n    if bleed=1 then do; btime=timebleed; d0time=timebleed; dead0=0; outof0=1; \n    bdtime=timedeath; deadb=death; wait=bdtime-timebleed; \n    end;\n    if bleed=0 then do; btime=timedeath; d0time=timedeath; dead0=death; outof0=death; \n    bdtime=.; deadb=.; wait=.; end;\n    log2bili=log2(bili);\nrun;\n\n\n\n\n\n\n\nTable 3.3\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\n\n## Column 1\n# Variceal bleeding\ncoxph(Surv(btime, bleed) ~ beh, data = provany, ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(btime, bleed) ~ beh, data = provany, ties = \"breslow\")\n\n         coef exp(coef) se(coef)      z     p\nbeh1  0.05563   1.05721  0.39235  0.142 0.887\nbeh2 -0.03972   0.96106  0.40039 -0.099 0.921\nbeh3 -0.03205   0.96846  0.40063 -0.080 0.936\n\nLikelihood ratio test=0.07  on 3 df, p=0.9951\nn= 286, number of events= 50 \n\n\nCode show/hide\n# logrank test: Variceal bleeding\nlr<-survdiff(Surv(btime, bleed) ~ beh, data = provany)\nc(lr$chisq,lr$pvalue)\n\n\n[1] 0.07114524 0.99505932\n\n\nCode show/hide\n# Death without bleeding\ncox1<-coxph(Surv(d0time, dead0) ~ beh, data = provany, ties = \"breslow\")\n# logrank test: Death without bleeding\nlr<-survdiff(Surv(d0time, dead0) ~ beh, data = provany)\nc(lr$chisq,lr$pvalue)\n\n\n[1] 12.856428541  0.004957601\n\n\nCode show/hide\n# Death without bleeding - additive model\ncox2<-coxph(Surv(d0time, dead0) ~ scle + beta, data = provany, ties = \"breslow\")\nlibrary(lmtest)\n# Death without bleeding - remove propranolol\nlrtest(cox2,cox1)\n\n\nLikelihood ratio test\n\nModel 1: Surv(d0time, dead0) ~ scle + beta\nModel 2: Surv(d0time, dead0) ~ beh\n  #Df  LogLik Df Chisq Pr(>Chisq)\n1   2 -234.19                    \n2   3 -233.38  1 1.627     0.2021\n\n\nCode show/hide\ncox3<-coxph(Surv(d0time, dead0) ~ scle, data = provany, ties = \"breslow\")\nlrtest(cox3,cox2)\n\n\nLikelihood ratio test\n\nModel 1: Surv(d0time, dead0) ~ scle\nModel 2: Surv(d0time, dead0) ~ scle + beta\n  #Df  LogLik Df Chisq Pr(>Chisq)\n1   1 -234.36                    \n2   2 -234.19  1 0.348     0.5553\n\n\nCode show/hide\ncox3\n\n\nCall:\ncoxph(formula = Surv(d0time, dead0) ~ scle, data = provany, ties = \"breslow\")\n\n       coef exp(coef) se(coef)     z       p\nscle 1.0180    2.7677   0.3281 3.103 0.00191\n\nLikelihood ratio test=10.76  on 1 df, p=0.001037\nn= 286, number of events= 46 \n\n\nCode show/hide\n## Column 2\n# Variceal bleeding\ncoxph(Surv(btime, bleed) ~ beh + sex + coag + log2bili + factor(varsize),\n      data = provany, ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(btime, bleed) ~ beh + sex + coag + log2bili + \n    factor(varsize), data = provany, ties = \"breslow\")\n\n                      coef exp(coef)  se(coef)      z        p\nbeh1              0.176844  1.193445  0.433336  0.408  0.68320\nbeh2              0.207005  1.229989  0.424001  0.488  0.62539\nbeh3              0.030562  1.031034  0.420784  0.073  0.94210\nsex              -0.025865  0.974467  0.329095 -0.079  0.93736\ncoag             -0.020647  0.979565  0.007819 -2.641  0.00827\nlog2bili          0.191011  1.210473  0.149142  1.281  0.20029\nfactor(varsize)2  0.741460  2.098998  0.414959  1.787  0.07397\nfactor(varsize)3  1.884681  6.584252  0.442325  4.261 2.04e-05\n\nLikelihood ratio test=37.67  on 8 df, p=8.654e-06\nn= 271, number of events= 47 \n   (15 observations deleted due to missingness)\n\n\nCode show/hide\n# Death without bleeding\ncoxph(Surv(d0time, dead0) ~ beh + sex + coag + log2bili + factor(varsize),\n                    data = provany, ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(d0time, dead0) ~ beh + sex + coag + log2bili + \n    factor(varsize), data = provany, ties = \"breslow\")\n\n                      coef exp(coef)  se(coef)      z       p\nbeh1              0.826468  2.285233  0.458574  1.802 0.07151\nbeh2             -0.159630  0.852459  0.575047 -0.278 0.78132\nbeh3              0.910385  2.485279  0.420391  2.166 0.03034\nsex               0.841579  2.320027  0.415722  2.024 0.04293\ncoag             -0.008112  0.991920  0.006804 -1.192 0.23312\nlog2bili          0.445359  1.561051  0.136749  3.257 0.00113\nfactor(varsize)2  0.221738  1.248245  0.347159  0.639 0.52300\nfactor(varsize)3  0.753294  2.123984  0.448544  1.679 0.09307\n\nLikelihood ratio test=42.13  on 8 df, p=1.283e-06\nn= 271, number of events= 46 \n   (15 observations deleted due to missingness)\n\n\n\n\n\n\nCode show/hide\n* Table 3.3 column 1;\n* Variceal bleeding; \n* logrank test is the score test;\nproc phreg data=provany;\n    class beh (ref='0');\n    model btime*bleed(0)=beh  / type3(lr);\nrun;\n\n* Death without bleeding; \n* logrank test is the score test;\nproc phreg data=provany;\n    class beh (ref='0');\n    model d0time*dead0(0)=beh / type3(lr);\nrun;\n* Death without bleeding - in text LRT for additive model; \nproc phreg data=provany;\n    model d0time*dead0(0)=scle|beta / type3(lr);\n    estimate 'both' scle 1 beta 1 scle*beta 1;\nrun;\nproc phreg data=provany;\n    model d0time*dead0(0)=scle beta / type3(lr);\nrun;\n* Death without bleeding - remove propranolol;\nproc phreg data=provany;\n    model d0time*dead0(0)=scle / type3(lr);\nrun;\n\n* Table 3.3 column 2;\n* Variceal bleeding;\nproc phreg data=provany;\n    class beh (ref='0') varsize (ref='1');\n    model btime*bleed(0)=beh sex coag log2bili varsize / type3(lr);\nrun;\n\n* Death without bleeding; \nproc phreg data=provany;\n    class beh (ref='0') varsize (ref='1');\n    model d0time*dead0(0)=beh sex coag log2bili varsize / type3(lr);\nrun;\n\n\n\n\n\n\n\nTable 3.4\n\nRSAS\n\n\n\n\nCode show/hide\n# Composite\ncox<-coxph(Surv(btime, outof0) ~ beh + sex + coag + log2bili + factor(varsize),\n      data = provany, ties = \"breslow\")\ncox\n\n\nCall:\ncoxph(formula = Surv(btime, outof0) ~ beh + sex + coag + log2bili + \n    factor(varsize), data = provany, ties = \"breslow\")\n\n                      coef exp(coef)  se(coef)      z        p\nbeh1              0.525145  1.690704  0.312502  1.680  0.09287\nbeh2              0.100189  1.105380  0.337918  0.296  0.76686\nbeh3              0.494807  1.640181  0.291638  1.697  0.08976\nsex               0.360259  1.433701  0.253379  1.422  0.15508\ncoag             -0.013600  0.986492  0.005287 -2.572  0.01010\nlog2bili          0.328376  1.388711  0.101761  3.227  0.00125\nfactor(varsize)2  0.446403  1.562681  0.263275  1.696  0.08997\nfactor(varsize)3  1.332535  3.790639  0.301391  4.421 9.81e-06\n\nLikelihood ratio test=65.71  on 8 df, p=3.489e-11\nn= 271, number of events= 93 \n   (15 observations deleted due to missingness)\n\n\nCode show/hide\n# LRT for treatment\ncoxreduced<-coxph(Surv(btime, outof0) ~ sex + coag + log2bili + factor(varsize),\n      data = provany, ties = \"breslow\")\nlrtest(coxreduced,cox)\n\n\nLikelihood ratio test\n\nModel 1: Surv(btime, outof0) ~ sex + coag + log2bili + factor(varsize)\nModel 2: Surv(btime, outof0) ~ beh + sex + coag + log2bili + factor(varsize)\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   5 -457.74                     \n2   8 -455.35  3 4.7717     0.1893\n\n\n\n\n\n\nCode show/hide\nproc phreg data=provany;\n    class beh (ref='0') varsize (ref='1');\n    model btime*outof0(0)=beh sex coag log2bili varsize  / type3(lr);\nrun;\n\n\n\n\n\n\n\nTable 3.8\n\nRSAS\n\n\n\n\nCode show/hide\n# Time since randomization (tsr)\n# Column 1\ncoxtsr<-coxph(Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili, \n              data = provany, ties = \"breslow\")\ncoxtsr\n\n\nCall:\ncoxph(formula = Surv(btime, bdtime, deadb != 0) ~ beh + sex + \n    log2bili, data = provany, ties = \"breslow\")\n\n            coef exp(coef) se(coef)      z      p\nbeh1     -1.4127    0.2435   0.6787 -2.081 0.0374\nbeh2     -0.1146    0.8918   0.5952 -0.192 0.8474\nbeh3      0.7327    2.0807   0.5439  1.347 0.1780\nsex       1.1389    3.1234   0.5039  2.260 0.0238\nlog2bili  0.1088    1.1149   0.2075  0.524 0.6001\n\nLikelihood ratio test=15.35  on 5 df, p=0.008958\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\ncoxtsr0<-coxph(Surv(btime, bdtime, deadb != 0) ~ sex + log2bili, \n              data = provany, ties = \"breslow\")\ncoxtsr0\n\n\nCall:\ncoxph(formula = Surv(btime, bdtime, deadb != 0) ~ sex + log2bili, \n    data = provany, ties = \"breslow\")\n\n            coef exp(coef) se(coef)      z      p\nsex       0.9095    2.4830   0.4807  1.892 0.0585\nlog2bili -0.1618    0.8506   0.1826 -0.886 0.3758\n\nLikelihood ratio test=4.19  on 2 df, p=0.1232\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\n# LRT for beh\nlibrary(lmtest)\nlrtest(coxtsr,coxtsr0)\n\n\nLikelihood ratio test\n\nModel 1: Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili\nModel 2: Surv(btime, bdtime, deadb != 0) ~ sex + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)  \n1   5 -59.626                       \n2   2 -65.208 -3 11.164    0.01087 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\ncoxnoint<-coxph(Surv(btime, bdtime, deadb != 0) ~ scle + beta  + sex + log2bili, \n              data = provany, ties = \"breslow\")\n# LRT interaction\nlrtest(coxnoint,coxtsr)\n\n\nLikelihood ratio test\n\nModel 1: Surv(btime, bdtime, deadb != 0) ~ scle + beta + sex + log2bili\nModel 2: Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)   \n1   4 -63.061                        \n2   5 -59.626  1 6.8707   0.008762 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# Column 2\nprovany$tsb<-provany$btime\ncoxtsr_tt<-coxph(Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili+tt(tsb), \n      data = provany, ties = \"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(dt1=1*(dt<5), dt2=1*(dt>=5 & dt<10))\n      })\ncoxtsr_tt\n\n\nCall:\ncoxph(formula = Surv(btime, bdtime, deadb != 0) ~ beh + sex + \n    log2bili + tt(tsb), data = provany, ties = \"breslow\", tt = function(x, \n    t, ...) {\n    dt <- t - x\n    cbind(dt1 = 1 * (dt < 5), dt2 = 1 * (dt >= 5 & dt < 10))\n})\n\n               coef exp(coef) se(coef)      z        p\nbeh1       -1.15606   0.31472  0.68428 -1.689  0.09113\nbeh2       -0.02371   0.97657  0.63136 -0.038  0.97005\nbeh3        0.42544   1.53026  0.61129  0.696  0.48645\nsex         1.11875   3.06103  0.53261  2.101  0.03568\nlog2bili   -0.04822   0.95292  0.22285 -0.216  0.82869\ntt(tsb)dt1  2.94285  18.96981  0.73891  3.983 6.81e-05\ntt(tsb)dt2  2.34525  10.43583  0.80285  2.921  0.00349\n\nLikelihood ratio test=33.65  on 7 df, p=2.005e-05\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\n# LRT for time-dependent covariates\nlrtest(coxtsr_tt,coxtsr)\n\n\nLikelihood ratio test\n\nModel 1: Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili + tt(tsb)\nModel 2: Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   7 -50.478                         \n2   5 -59.626 -2 18.295  0.0001065 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# LRT for beh\ncoxtsr_tt_reduced<-coxph(Surv(btime, bdtime, deadb != 0) ~ sex + log2bili+tt(tsb), \n                 data = provany, ties = \"breslow\",\n                 tt=function(x, t, ...) {\n                   dt <- t-x\n                   cbind(dt1=1*(dt<5), dt2=1*(dt>=5 & dt<10))\n                 })\nlrtest(coxtsr_tt_reduced,coxtsr_tt)\n\n\nLikelihood ratio test\n\nModel 1: Surv(btime, bdtime, deadb != 0) ~ sex + log2bili + tt(tsb)\nModel 2: Surv(btime, bdtime, deadb != 0) ~ beh + sex + log2bili + tt(tsb)\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   4 -53.081                     \n2   7 -50.478  3 5.2064     0.1573\n\n\nCode show/hide\n# In text, model linear effect of time-dependent covariate\ncoxph(Surv(btime, bdtime, deadb != 0) ~ beh+sex + log2bili+tt(tsb), \n      data = provany, ties = \"breslow\",\n      tt=function(x, t, ...){t-x})\n\n\nCall:\ncoxph(formula = Surv(btime, bdtime, deadb != 0) ~ beh + sex + \n    log2bili + tt(tsb), data = provany, ties = \"breslow\", tt = function(x, \n    t, ...) {\n    t - x\n})\n\n              coef exp(coef)  se(coef)      z       p\nbeh1     -1.462260  0.231712  0.685283 -2.134 0.03286\nbeh2     -0.028375  0.972024  0.620246 -0.046 0.96351\nbeh3      0.599364  1.820960  0.574135  1.044 0.29651\nsex       0.899664  2.458776  0.530853  1.695 0.09012\nlog2bili  0.349775  1.418749  0.224830  1.556 0.11977\ntt(tsb)  -0.005179  0.994834  0.001769 -2.927 0.00342\n\nLikelihood ratio test=25.54  on 6 df, p=0.0002708\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\n# Duration\n# Column 1\ncoxdur<-coxph(Surv(wait, deadb != 0) ~ beh + sex + log2bili,\n              data = provany, ties = \"breslow\")\ncoxdur\n\n\nCall:\ncoxph(formula = Surv(wait, deadb != 0) ~ beh + sex + log2bili, \n    data = provany, ties = \"breslow\")\n\n            coef exp(coef) se(coef)      z     p\nbeh1     -0.9971    0.3689   0.6429 -1.551 0.121\nbeh2     -0.2995    0.7412   0.5965 -0.502 0.616\nbeh3      0.8708    2.3889   0.5136  1.695 0.090\nsex       0.6497    1.9149   0.5264  1.234 0.217\nlog2bili  0.2677    1.3070   0.1790  1.496 0.135\n\nLikelihood ratio test=13.24  on 5 df, p=0.0212\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\ncoxdur0<-coxph(Surv(wait, deadb != 0) ~ sex + log2bili,\n              data = provany, ties = \"breslow\")\ncoxdur0\n\n\nCall:\ncoxph(formula = Surv(wait, deadb != 0) ~ sex + log2bili, data = provany, \n    ties = \"breslow\")\n\n           coef exp(coef) se(coef)     z     p\nsex      0.6742    1.9625   0.4662 1.446 0.148\nlog2bili 0.1210    1.1286   0.1677 0.721 0.471\n\nLikelihood ratio test=3.03  on 2 df, p=0.2195\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\n# LRT for beh\nlrtest(coxdur,coxdur0)\n\n\nLikelihood ratio test\n\nModel 1: Surv(wait, deadb != 0) ~ beh + sex + log2bili\nModel 2: Surv(wait, deadb != 0) ~ sex + log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)  \n1   5 -86.494                       \n2   2 -91.600 -3 10.211    0.01685 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# Column 2\nprovany$tsr<-provany$btime\ncoxdur_tt<-coxph(Surv(wait, deadb != 0) ~ beh + sex + log2bili+tt(tsr),\n      data = provany, ties = \"breslow\",\n      tt=function(x, t, ...) {\n        dt <- x+t\n        cbind(v1=1*(dt<1*365.25), v2=1*(dt>=1*365.25 & dt<2*365.25))\n      })\ncoxdur_tt\n\n\nCall:\ncoxph(formula = Surv(wait, deadb != 0) ~ beh + sex + log2bili + \n    tt(tsr), data = provany, ties = \"breslow\", tt = function(x, \n    t, ...) {\n    dt <- x + t\n    cbind(v1 = 1 * (dt < 1 * 365.25), v2 = 1 * (dt >= 1 * 365.25 & \n        dt < 2 * 365.25))\n})\n\n             coef exp(coef) se(coef)      z     p\nbeh1      -1.0192    0.3609   0.6502 -1.567 0.117\nbeh2      -0.3116    0.7323   0.6005 -0.519 0.604\nbeh3       0.8467    2.3320   0.5244  1.615 0.106\nsex        0.6441    1.9043   0.5303  1.215 0.225\nlog2bili   0.2829    1.3269   0.1966  1.439 0.150\ntt(tsr)v1 -0.1723    0.8417   0.9096 -0.189 0.850\ntt(tsr)v2 -0.2211    0.8016   0.8862 -0.250 0.803\n\nLikelihood ratio test=13.31  on 7 df, p=0.065\nn= 48, number of events= 27 \n   (238 observations deleted due to missingness)\n\n\nCode show/hide\n# LRT for time-dependent covariates\nlrtest(coxdur,coxdur_tt)\n\n\nLikelihood ratio test\n\nModel 1: Surv(wait, deadb != 0) ~ beh + sex + log2bili\nModel 2: Surv(wait, deadb != 0) ~ beh + sex + log2bili + tt(tsr)\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   5 -86.494                     \n2   7 -86.464  2 0.0618     0.9696\n\n\nCode show/hide\ncoxdur_tt_reduced<-coxph(Surv(btime, bdtime, deadb != 0) ~ sex + log2bili+tt(tsb), \n                         data = provany, ties = \"breslow\",\n                         tt=function(x, t, ...) {\n                           dt <- t-x\n                           cbind(dt1=1*(dt<5), dt2=1*(dt>=5 & dt<10))\n                         })\n\n\n\n\n\n\nCode show/hide\n* Time since randomisation;\n* Column 1; \nproc phreg data=provany atrisk;\n    class beh (ref='0');\n    model bdtime*deadb(0)=beh sex log2bili / entry=btime rl type3(lr);\nrun;\n* LRT interaction scle*beta;\nproc phreg data=provany atrisk;\n    class beh (ref='0');\n    model bdtime*deadb(0)=scle|beta sex log2bili / entry=btime rl type3(lr);\nrun;\n* Column 2; \nproc phreg  data=provany;\n    class beh (ref='0');\n    model bdtime*deadb(0)=beh sex log2bili wait1 wait2 / entry=btime rl type3(lr);\n    wait1=0; wait2=0;\n    if (bdtime-btime<5) then wait1=1;\n    if (5<=bdtime-btime<10) then wait2=1;\n    duration: test wait1=0, wait2=0;\nrun;\n\n* In text: Linear effect of time-dependent covariate;\nproc phreg  data=provany;\n    class beh (ref='0');\n    model bdtime*deadb(0)=beh sex log2bili lin / entry=btime rl type3(lr);\n    lin=bdtime-btime;\nrun;\n\n\n* Duration; \n* Column 1; \nproc phreg data=provany;\n    class beh (ref='0');\n    model wait*deadb(0)=beh sex log2bili / type3(lr);\n    baseline out=cumhazwait cumhaz=breslowwait covariates=covar;\nrun;\n\n* Column 2;\nproc phreg data=provany;\n    class beh (ref='0');\n    model wait*deadb(0)=beh sex log2bili time1 time2 / type3(lr);\n    time1=0; time2=0;\n    if (btime+wait<365.25) then time1=1;\n    if (365.25<=btime+wait<2*365.25) then time2=1;\n    timeeff: test time1=0, time2=0;\nrun;\n\n\n\n\n\n\n\nFigure 3.2\n\nRSAS\n\n\n\n\nCode show/hide\n# Plotting style \nlibrary(ggplot2)\nlibrary(tidyverse)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Make zeros print as \"0\" always for plot axes\nlibrary(stringr)\nprettyZero <- function(l){\n  max.decimals = max(nchar(str_extract(l, \"\\\\.[0-9]+\")), na.rm = T)-1\n  lnew = formatC(l, replace.zero = T, zero.print = \"0\",\n                 digits = max.decimals, format = \"f\", preserve.width=T)\n  return(lnew)\n}\n\n# Extract cumulative baseline hazard\ncoxcumhaz <- survfit(coxtsr, \n                     newdata = data.frame(sex = 0, \n                                          beh = \"0\", \n                                          log2bili = 0))\n\n# Collect data for plot\ncoxdata <- data.frame(cumhaz = append(0,coxcumhaz$cumhaz), \n                      time = append(0,coxcumhaz$time), \n                      type = rep(\"Breslow estimate\", 1+length(coxcumhaz$time)))\n\n# Create Figure 3.2\nfig3.2 <- ggplot(aes(x = time / 365.25, y = cumhaz), data = coxdata) + \n  geom_step(linewidth = 1) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  theme_general\n\nfig3.2\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata covar; \n    input beh sex log2bili; \n    datalines; \n    0 0 0\n; \nrun; \nproc phreg data=provany atrisk;\n    class beh (ref='0');\n    model bdtime*deadb(0)=beh sex log2bili/entry=btime rl type3(lr);\n    baseline out=cumhaztime cumhaz=breslowtime covariates=covar;\nrun;\ndata cumhaztime;\n    set cumhaztime; \n    bdtimeyears = bdtime / 365.25; \nrun;\nproc gplot data=cumhaztime;\n    plot breslowtime*bdtimeyears/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 4 by 1 minor=none \n          label=('Time since randomization (Years)');\n    axis2 order=0 to 1.1 by 0.1 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 3.3\n\nRSAS\n\n\n\n\nCode show/hide\n# Extract cumulative baseline hazard\ncoxcumhaz <- survfit(coxdur, \n                     newdata = data.frame(sex = 0, \n                                          beh = \"0\", \n                                          log2bili = 0))\n# Collect data for plot\ncoxdata <- data.frame(cumhaz = append(0,coxcumhaz$cumhaz), \n                      time = append(0,coxcumhaz$time), \n                      type = rep(\"Breslow estimate\", 1+length(coxcumhaz$time)))\n\n# Create Figure 3.3\nfig3.3 <- ggplot(aes(x = time / 365.25, y = cumhaz), data = coxdata) + \n  geom_step(linewidth = 1) + \n  xlab(\"Duration (years)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), ) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)),labels = prettyZero) +\n  theme_general\n\nfig3.3\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Duration; \ndata covar; \n    input beh sex log2bili; \n    datalines; \n    0 0 0\n; \nrun; \nproc phreg data=provany;\n    class beh (ref='0');\n    model wait*deadb(0)=beh sex log2bili / type3(lr);\n    baseline out=cumhazwait cumhaz=breslowwait covariates=covar;\nrun;\ndata cumhazwait;\n    set cumhazwait; \n    waityears = wait / 365.25; \nrun;\nproc gplot data=cumhazwait;\n    plot breslowwait*waityears/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 4 by 1 minor=none label=('Duration (Years)');\n    axis2 order=0 to 0.2 by 0.05 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nTable 3.9\n\nRSAS\n\n\n\n\nCode show/hide\n# All bleeds\nprovasplit11 <- subset(provany, bleed == 1)\n# Split by duration\nprovasplit1 <- survSplit(Surv(wait, deadb != 0) ~ ., data = provasplit11, \n                           cut = c(5, 10),\n                           episode = \"wint\")\nprovasplit1$start <- with(provasplit1, \n                            btime + ifelse(wint == 1, 0, ifelse(wint == 2, 5 , 10))\n                            )\nprovasplit1$stop <- with(provasplit1, btime + wait)\nprovasplit1$risktime <- with(provasplit1, wait - tstart)\nprovasplit1$logrisktime <- log(provasplit1$risktime)\nprovasplit1$fail <- provasplit1$event\n\n# Split by time since rand (t)\nprovasplit2 <- survSplit(Surv(start, stop, fail) ~ ., data = provasplit1, \n                           cut = c((1) * 365.25, (2) * 365.25),\n                           episode = \"tint\")\n\nprovasplit2$risktime2 <- with(provasplit2, stop - start)\nprovasplit2$risktimeys2 <- provasplit2$risktime2 / 365.25\n  \nprovasplit2$logrisktime2 <- log(provasplit2$risktime2)\nprovasplit2$fail2 <- provasplit2$fail\n\n# Summarize the data, Table 3.9 output\naggregate(cbind(fail2, risktimeys2) ~ tint + wint, provasplit2, \n          FUN = function(x) c(count = length(x),\n                              sum = sum(x)))\n\n\n  tint wint fail2.count fail2.sum risktimeys2.count risktimeys2.sum\n1    1    1          39         8       39.00000000      0.46338125\n2    2    1          11         2       11.00000000      0.13073238\n3    3    1           1         0        1.00000000      0.01368925\n4    1    2          30         2       30.00000000      0.38603696\n5    2    2           9         1        9.00000000      0.11635866\n6    3    2           1         0        1.00000000      0.01368925\n7    1    3          28         7       28.00000000     12.42984257\n8    2    3          28         5       28.00000000     19.88227242\n9    3    3          19         4       19.00000000     21.56468172\n\n\n\n\n\n\nCode show/hide\ndata provasplit1;\n    set provany;\n    where bleed=1;\n    fail=(wait<5)*(deadb ne 0);\n    risktime=min(5,wait);\n    logrisk=log(risktime); wint=1; \n    start=btime; slut=btime+min(5,wait); output;  \n    if wait>=5 then do;\n    fail=(wait<10)*(deadb ne 0);\n    risktime=min(5,wait-5);\n    logrisk=log(risktime); wint=2; \n    start=btime+5; slut=btime+min(10,wait); output; end;\n    if wait>10 then do;\n    fail=deadb ne 0; \n    risktime=wait-10;\n    logrisk=log(risktime); wint=3; \n    start=btime+10; slut=btime+wait; output; end;\nrun;\n\ndata provasplit2; \n    set provasplit1;\n    if start<365.25 then do; risktime2=min(slut,365.25)-start;\n    fail2=fail*(slut<365.25); logrisk2=log(risktime2); tint=1; output;\n    if slut>365.25 then do; risktime2=min(slut,2*365.25)-365.25; logrisk2=log(risktime2);\n    fail2=fail*(slut<2*365.25); tint=2; output; end;\n    if slut>2*365.25 then do; risktime2=slut-2*365.25; logrisk2=log(risktime2);\n    fail2=fail; tint=3; output; end;\n    end;\n    if 365.25<=start<2*365.25 then do; risktime2=min(slut,2*365.25)-start;\n    fail2=fail*(slut<2*365.25); logrisk2=log(risktime2); tint=2; output;\n    if slut>2*365.25 then do; risktime2=slut-2*365.25; logrisk2=log(risktime2);\n    fail2=fail; tint=3; output; end;\n    end;\n    if start>=2*365.25 then do; risktime2=slut-start; logrisk2=log(risktime2);\n    fail2=fail; tint=3; output; \nend;\nrun;\ndata provasplit2; \n    set provasplit2;\n    risktime2ys=risktime2/365.25;\nrun;\nproc means data=provasplit2 sum; \n    class wint tint;\n    var fail2 risktime2ys;\nrun;\n\n\n\n\n\n\n\nTable 3.10\n\nRSAS\n\n\n\n\nCode show/hide\n# part (a)\nsummary(glm(fail ~ offset(log(risktime)) + beh + relevel(as.factor(wint), ref = \"3\") + \n              sex + log2bili, data = provasplit1, family = poisson))\n\n\n\nCall:\nglm(formula = fail ~ offset(log(risktime)) + beh + relevel(as.factor(wint), \n    ref = \"3\") + sex + log2bili, family = poisson, data = provasplit1)\n\nCoefficients:\n                                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                           -8.8925     1.1282  -7.882 3.21e-15 ***\nbeh1                                  -1.1301     0.6423  -1.759   0.0785 .  \nbeh2                                  -0.3138     0.5887  -0.533   0.5940    \nbeh3                                   0.9667     0.5157   1.874   0.0609 .  \nrelevel(as.factor(wint), ref = \"3\")1   3.6024     0.4387   8.212  < 2e-16 ***\nrelevel(as.factor(wint), ref = \"3\")2   2.8437     0.6373   4.462 8.11e-06 ***\nsex                                    0.7327     0.5190   1.412   0.1581    \nlog2bili                               0.2877     0.1824   1.577   0.1147    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 225.56  on 122  degrees of freedom\nResidual deviance: 149.88  on 115  degrees of freedom\n  (4 observations deleted due to missingness)\nAIC: 219.88\n\nNumber of Fisher Scoring iterations: 8\n\n\nCode show/hide\n# part (b)\nsummary(glm(fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(tint), ref = \"3\") + \n              sex + log2bili, data = provasplit2, family = poisson))\n\n\n\nCall:\nglm(formula = fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(tint), \n    ref = \"3\") + sex + log2bili, family = poisson, data = provasplit2)\n\nCoefficients:\n                                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                           -8.6775     1.2008  -7.226 4.96e-13 ***\nbeh1                                  -1.2810     0.6522  -1.964   0.0495 *  \nbeh2                                  -0.4317     0.5657  -0.763   0.4454    \nbeh3                                   0.8006     0.5254   1.524   0.1275    \nrelevel(as.factor(tint), ref = \"3\")1   1.5068     0.5785   2.605   0.0092 ** \nrelevel(as.factor(tint), ref = \"3\")2   0.4304     0.6482   0.664   0.5067    \nsex                                    0.9494     0.4922   1.929   0.0538 .  \nlog2bili                               0.1792     0.2049   0.875   0.3817    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 237.84  on 160  degrees of freedom\nResidual deviance: 202.95  on 153  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 272.95\n\nNumber of Fisher Scoring iterations: 8\n\n\nCode show/hide\n# part (c)\nsummary(glm(fail2 ~ offset(log(risktime2)) + beh + \n              relevel(as.factor(wint), ref = \"3\") +\n              relevel(as.factor(tint), ref = \"3\") +\n              sex + log2bili, data = provasplit2, family = poisson))\n\n\n\nCall:\nglm(formula = fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(wint), \n    ref = \"3\") + relevel(as.factor(tint), ref = \"3\") + sex + \n    log2bili, family = poisson, data = provasplit2)\n\nCoefficients:\n                                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                           -8.9276     1.1636  -7.673 1.68e-14 ***\nbeh1                                  -1.1101     0.6475  -1.714   0.0864 .  \nbeh2                                  -0.3181     0.5788  -0.550   0.5826    \nbeh3                                   0.8260     0.5138   1.608   0.1079    \nrelevel(as.factor(wint), ref = \"3\")1   3.3500     0.4641   7.219 5.25e-13 ***\nrelevel(as.factor(wint), ref = \"3\")2   2.5827     0.6593   3.917 8.97e-05 ***\nrelevel(as.factor(tint), ref = \"3\")1   0.7325     0.6176   1.186   0.2356    \nrelevel(as.factor(tint), ref = \"3\")2   0.1889     0.6546   0.289   0.7729    \nsex                                    0.7672     0.5090   1.507   0.1317    \nlog2bili                               0.2301     0.1900   1.211   0.2260    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 237.84  on 160  degrees of freedom\nResidual deviance: 160.21  on 151  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 234.21\n\nNumber of Fisher Scoring iterations: 7\n\n\nCode show/hide\n# Interaction model, in-text but not shown\nsummary(glm(fail2 ~ offset(log(risktime2)) + beh + as.factor(tint) * as.factor(wint) + sex + log2bili, \n            data = provasplit2, family = poisson)\n)\n\n\n\nCall:\nglm(formula = fail2 ~ offset(log(risktime2)) + beh + as.factor(tint) * \n    as.factor(wint) + sex + log2bili, family = poisson, data = provasplit2)\n\nCoefficients:\n                                    Estimate Std. Error z value Pr(>|z|)    \n(Intercept)                         -4.72678    1.20626  -3.919 8.91e-05 ***\nbeh1                                -1.09421    0.64703  -1.691   0.0908 .  \nbeh2                                -0.31016    0.57923  -0.535   0.5923    \nbeh3                                 0.83850    0.51484   1.629   0.1034    \nas.factor(tint)2                    -0.74368    1.06413  -0.699   0.4846    \nas.factor(tint)3                   -14.39376 1275.75399  -0.011   0.9910    \nas.factor(wint)2                    -1.03184    0.79349  -1.300   0.1935    \nas.factor(wint)3                    -3.37183    0.51906  -6.496 8.24e-11 ***\nsex                                  0.77074    0.50839   1.516   0.1295    \nlog2bili                             0.21347    0.18999   1.124   0.2612    \nas.factor(tint)2:as.factor(wint)2    1.26419    1.62046   0.780   0.4353    \nas.factor(tint)3:as.factor(wint)2    1.03184 1804.18859   0.001   0.9995    \nas.factor(tint)2:as.factor(wint)3    0.08176    1.23780   0.066   0.9473    \nas.factor(tint)3:as.factor(wint)3   13.70295 1275.75414   0.011   0.9914    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 237.84  on 160  degrees of freedom\nResidual deviance: 158.93  on 147  degrees of freedom\n  (5 observations deleted due to missingness)\nAIC: 240.93\n\nNumber of Fisher Scoring iterations: 13\n\n\nCode show/hide\n# LRT for time-dependent covariates\nglmboth<-glm(fail2 ~ offset(log(risktime2)) + beh + \n               relevel(as.factor(wint), ref = \"3\") +\n               relevel(as.factor(tint), ref = \"3\") +\n               sex + log2bili, data = provasplit2, family = poisson)\nglmwint<-glm(fail2 ~ offset(log(risktime2)) + beh + \n               relevel(as.factor(wint), ref = \"3\") +\n               sex + log2bili, data = provasplit2, family = poisson)\nglmtint<-glm(fail2 ~ offset(log(risktime2)) + beh + \n               relevel(as.factor(tint), ref = \"3\") +\n               sex + log2bili, data = provasplit2, family = poisson)\n# LRT effect of duration since bleeding\nlrtest(glmtint,glmboth)\n\n\nLikelihood ratio test\n\nModel 1: fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(tint), \n    ref = \"3\") + sex + log2bili\nModel 2: fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(wint), \n    ref = \"3\") + relevel(as.factor(tint), ref = \"3\") + sex + \n    log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   8 -128.47                         \n2  10 -107.11  2 42.736  5.248e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# LRT effect of time since randomization\nlrtest(glmwint,glmboth)\n\n\nLikelihood ratio test\n\nModel 1: fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(wint), \n    ref = \"3\") + sex + log2bili\nModel 2: fail2 ~ offset(log(risktime2)) + beh + relevel(as.factor(wint), \n    ref = \"3\") + relevel(as.factor(tint), ref = \"3\") + sex + \n    log2bili\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   8 -108.08                     \n2  10 -107.11  2 1.9499     0.3772\n\n\n\n\n\n\nCode show/hide\n* part (a);\nproc genmod data=provasplit1;\n    class beh (ref='0') wint;\n    model fail=beh wint sex log2bili/dist=poi offset=logrisk type3;\nrun;\n\n* part (b);\nproc genmod data=provasplit2;\n    class beh (ref='0') tint;\n    model fail2=beh tint sex log2bili/dist=poi offset=logrisk2 type3;\nrun;\n\n* part (c);\nproc genmod data=provasplit2;\n    class beh (ref='0') wint tint;\n    model fail2=beh wint tint sex log2bili/dist=poi offset=logrisk2 type3;\nrun;\n\n* Interaction model, in-text;\nproc genmod data=provasplit2;\n    class beh (ref='0') wint tint;\n    model fail2=beh wint tint wint*tint sex log2bili/dist=poi offset=logrisk2 type3;\nrun;\n\n\n\n\n\n\n\nTable 3.13\n\nRSAS\n\n\n\n\nCode show/hide\n# Prepare data set for analysis - double\ndouble1 <- provany %>% mutate(time = d0time, \n                              status = dead0, \n                              entrytime = 0, \n                              sex1 = sex, \n                              sex2 = 0, \n                              age1 = age, \n                              age2 = 0, \n                              bili1 = log2bili, \n                              bili2 = log2bili * 0,\n                              bleeding = 1)\n\ndouble2 <- provany %>% filter(bleed == 1) %>% \n                       mutate(time = bdtime, \n                              status = deadb, \n                              entrytime = btime, \n                              sex1 = 0, \n                              sex2 = sex, \n                              age1 = 0, \n                              age2 = age, \n                              bili1 = log2bili * 0, \n                              bili2 = log2bili,\n                              bleeding = 2)\ndouble <- as.data.frame(rbind(double1, double2))\n\n# part (a)\nTable3.13a <- coxph(Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex1 + sex2 + bili1 + bili2, \n            data = double, ties = \"breslow\")\nTable3.13a\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status != 0) ~ strata(bleeding) + \n    sex1 + sex2 + bili1 + bili2, data = double, ties = \"breslow\")\n\n         coef exp(coef) se(coef)      z        p\nsex1   1.0408    2.8316   0.4110  2.532   0.0113\nsex2   0.9095    2.4830   0.4807  1.892   0.0585\nbili1  0.5275    1.6947   0.1152  4.580 4.64e-06\nbili2 -0.1618    0.8506   0.1826 -0.886   0.3758\n\nLikelihood ratio test=32.5  on 4 df, p=1.509e-06\nn= 323, number of events= 73 \n   (13 observations deleted due to missingness)\n\n\nCode show/hide\n# part (b)\nTable3.13b <- coxph(Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex + bili1 + bili2, \n                    data = double, ties = \"breslow\")\nTable3.13b\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status != 0) ~ strata(bleeding) + \n    sex + bili1 + bili2, data = double, ties = \"breslow\")\n\n         coef exp(coef) se(coef)      z        p\nsex    0.9866    2.6820   0.3115  3.167  0.00154\nbili1  0.5269    1.6936   0.1150  4.582 4.61e-06\nbili2 -0.1685    0.8449   0.1794 -0.939  0.34767\n\nLikelihood ratio test=32.46  on 3 df, p=4.185e-07\nn= 323, number of events= 73 \n   (13 observations deleted due to missingness)\n\n\nCode show/hide\n# LRT sex\nlrtest(Table3.13b,Table3.13a)\n\n\nLikelihood ratio test\n\nModel 1: Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex + \n    bili1 + bili2\nModel 2: Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex1 + \n    sex2 + bili1 + bili2\n  #Df  LogLik Df Chisq Pr(>Chisq)\n1   3 -288.94                    \n2   4 -288.92  1 0.043     0.8357\n\n\nCode show/hide\n# In-text: LRT log2(bilirubin)\nTable3.13bx <- coxph(Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex1 + sex2 + log2bili, \n                     data = double, ties = \"breslow\")\nlrtest(Table3.13bx,Table3.13a)\n\n\nLikelihood ratio test\n\nModel 1: Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex1 + \n    sex2 + log2bili\nModel 2: Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex1 + \n    sex2 + bili1 + bili2\n  #Df  LogLik Df  Chisq Pr(>Chisq)   \n1   3 -293.86                        \n2   4 -288.92  1 9.8962   0.001656 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\nCode show/hide\n# part (c)\nTable3.13c <- coxph(Surv(entrytime, time, status != 0) ~ strata(bleeding) + sex + bili1, \n                    data = double, ties = \"breslow\")\nTable3.13c\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status != 0) ~ strata(bleeding) + \n    sex + bili1, data = double, ties = \"breslow\")\n\n        coef exp(coef) se(coef)     z        p\nsex   0.9423    2.5659   0.3072 3.067  0.00216\nbili1 0.5263    1.6927   0.1149 4.582 4.61e-06\n\nLikelihood ratio test=31.58  on 2 df, p=1.387e-07\nn= 323, number of events= 73 \n   (13 observations deleted due to missingness)\n\n\nCode show/hide\n# In-text: LRT proportionality\nph<-coxph(Surv(entrytime, time, status != 0) ~ bleeding + sex + bili1, \n          data = double, ties = \"breslow\")\n\npht<-coxph(Surv(entrytime, time, status != 0) ~ bleeding + tt(bleeding) \n           + sex + bili1, \n          data = double, ties = \"breslow\",\n          tt = function(x,t, ...){\n             bleedt = x*log(t)\n           })\nlrtest(ph, pht)\n\n\nLikelihood ratio test\n\nModel 1: Surv(entrytime, time, status != 0) ~ bleeding + sex + bili1\nModel 2: Surv(entrytime, time, status != 0) ~ bleeding + tt(bleeding) + \n    sex + bili1\n  #Df  LogLik Df  Chisq Pr(>Chisq)    \n1   3 -343.23                         \n2   4 -335.42  1 15.615  7.764e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\n\n\n\nCode show/hide\n* Prepare data set for analysis - double; \ndata double; \n    set provany; \n    time=d0time; \n    status=dead0; \n    entrytime=0; \n    sex1=sex; \n    sex2=0;\n    age1=age; \n    age2=0; \n    bili1=log2bili; \n    bili2=log2bili*0; \n    bleeding=1; \n    output;\n\n    if bleed=1 then do;\n        time=bdtime; \n        status=deadb; \n        entrytime=btime; \n        sex1=0; \n        sex2=sex;\n        age1=0; \n        age2=age; \n        bili1=log2bili*0; \n        bili2=log2bili; \n        bleeding=2; \n        output; \n    end;\nrun;\n\n* part (a);\nproc phreg data=double;\n    model time*status(0)=sex1 sex2 bili1 bili2 /entry=entrytime type3(lr);\n    strata bleeding;\n    test sex1=sex2; /* wald tests instead of LRT */\n    test bili1=bili2;\nrun;\n\n* part (b);\nproc phreg data=double; \n    model time*status(0)=sex bili1 bili2 /entry=entrytime type3(lr);\n    strata bleeding;\nrun;\n\n* part (c);\nproc phreg data=double; \n    model time*status(0)=sex bili1 /entry=entrytime type3(lr);\n    strata bleeding;\nrun;\n\n* In-text: LRT proportionality;\nproc phreg data=double; \n  bleedinglogt=bleeding*log(time);\n    model time*status(0)=sex bili1 bleeding bleedinglogt /entry=entrytime type3(lr);\nrun;\n\n\n\n\n\n\n\nFigure 3.9\n\nRSAS\n\n\n\n\nCode show/hide\n# Extract cumulative hazard from r1 \nsurvr1 <- basehaz(Table3.13a, center = F)\npcumhaz <- data.frame(\n  cumhaz = c(survr1$hazard[survr1$strata==\"stratum=1\"],0,survr1$hazard[survr1$strata==\"stratum=2\"]), \n  time   = c(survr1$time[survr1$strata==\"stratum=1\"],0,survr1$time[survr1$strata==\"stratum=2\"]), \n  strata = c(survr1$strata[survr1$strata==\"stratum=1\"],\"2\",survr1$strata[survr1$strata==\"stratum=2\"])\n) \n\n# Create Figure 3.9\nfig3.9 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = strata), data = pcumhaz) + \n  geom_step(linewidth = 1) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  scale_linetype_discrete(\"Stratum\", labels = c(\"1\", \"2\")) + \n  theme_general + theme(legend.position = \"none\")\n\nfig3.9\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata covar; \n    input sex1 sex2 bili1 bili2; \n    datalines; \n    0 0 0 0\n; \nrun; \n* part (a);\nproc phreg data=double;\n    model time*status(0)=sex1 sex2 bili1 bili2 /entry=entrytime type3(lr);\n    strata bleeding;\n    baseline out=mort cumhaz=breslow covariates=covar;\nrun;\ndata mort; \n    set mort; \n    timeyears = time /365.25; \nrun;\nproc gplot data=mort; \n    plot breslow*timeyears=bleeding/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 4 by 1 minor=none \n          label=('Time since randomization (Years)');\n    axis2 order=0 to 4 by 1 minor=none label=(a=90 'Cumulative hazard');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;"
  },
  {
    "objectID": "Ch3.html#recurrent-episodes-in-affective-disorders",
    "href": "Ch3.html#recurrent-episodes-in-affective-disorders",
    "title": "3  Intensity models",
    "section": "Recurrent episodes in affective disorders",
    "text": "Recurrent episodes in affective disorders\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\naffective <- read.csv(\"data/affective.csv\")\naffective$wait <- with(affective, stop - start)\n\n\n\n\n\n\nCode show/hide\nproc import out=affective\n    datafile=\"data/affective.csv\"\n    dbms=csv replace;\nrun;\ndata affective; \n    set affective; \n    wait = stop - start; \nrun; \n\n\n\n\n\n\n\nTable 3.6\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\ncoxph(Surv(start, stop, status == 1) ~ bip,\n      data = subset(affective, state == 0), ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip, data = subset(affective, \n    state == 0), ties = \"breslow\")\n\n       coef exp(coef) se(coef)     z        p\nbip 0.36593   1.44186  0.09448 3.873 0.000107\n\nLikelihood ratio test=14.24  on 1 df, p=0.0001612\nn= 626, number of events= 542 \n\n\nCode show/hide\ncoxph(Surv(start, stop, status == 1) ~ bip + episode,\n      data = subset(affective, state == 0), ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip + episode, \n    data = subset(affective, state == 0), ties = \"breslow\")\n\n            coef exp(coef) se(coef)      z        p\nbip     0.318455  1.375002 0.094545  3.368 0.000756\nepisode 0.126230  1.134543 0.008675 14.552  < 2e-16\n\nLikelihood ratio test=177.8  on 2 df, p=< 2.2e-16\nn= 626, number of events= 542 \n\n\nCode show/hide\ncoxph(Surv(start, stop, status == 1) ~ bip + episode + I(episode*episode),\n      data = subset(affective, state == 0), ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip + episode + \n    I(episode * episode), data = subset(affective, state == 0), \n    ties = \"breslow\")\n\n                          coef exp(coef)  se(coef)      z      p\nbip                   0.066935  1.069226  0.097084  0.689  0.491\nepisode               0.424503  1.528831  0.032315 13.136 <2e-16\nI(episode * episode) -0.013617  0.986476  0.001554 -8.764 <2e-16\n\nLikelihood ratio test=283.1  on 3 df, p=< 2.2e-16\nn= 626, number of events= 542 \n\n\nCode show/hide\n# Episode as categorical\naffective$epi<-with(affective, ifelse(episode<10,episode,10))\ncoxph(Surv(start, stop, status == 1) ~ bip + factor(epi),\n      data = subset(affective, state == 0), ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip + factor(epi), \n    data = subset(affective, state == 0), ties = \"breslow\")\n\n                  coef exp(coef) se(coef)      z        p\nbip            0.08048   1.08381  0.09723  0.828    0.408\nfactor(epi)2   0.85474   2.35077  0.16125  5.301 1.15e-07\nfactor(epi)3   1.16051   3.19155  0.18519  6.267 3.69e-10\nfactor(epi)4   1.38768   4.00554  0.20278  6.843 7.75e-12\nfactor(epi)5   1.93212   6.90414  0.21559  8.962  < 2e-16\nfactor(epi)6   1.88500   6.58637  0.23483  8.027 9.97e-16\nfactor(epi)7   2.08122   8.01427  0.24693  8.429  < 2e-16\nfactor(epi)8   2.37102  10.70835  0.26095  9.086  < 2e-16\nfactor(epi)9   3.00076  20.10084  0.27006 11.112  < 2e-16\nfactor(epi)10  2.85119  17.30842  0.18992 15.013  < 2e-16\n\nLikelihood ratio test=298.5  on 10 df, p=< 2.2e-16\nn= 626, number of events= 542 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=affective;\n    where state=0; \n    model stop*status(2 3)= bip / entry=start rl type3(lr);\nrun;\n\nproc phreg data=affective;\n    where state=0; \n    model stop*status(2 3)= bip episode / entry=start rl type3(lr);\nrun;\n\n* Episode as categorical;\ndata affective2;\n  set affective;\n    if episode>10 the episode=10;\nproc phreg data=affective2;\n    where state=0; \n    class episode(ref=\"1\");\n    model stop*status(2 3)= bip episode / entry=start rl type3(lr);\nrun;\n\nproc phreg data=affective;\n    where state=0; \n    model stop*status(2 3)= bip episode episode*episode / entry=start rl type3(lr);\nrun;\n\n\n\n\n\n\n\nTable 3.7\n\nRSAS\n\n\n\n\nCode show/hide\ncoxph(Surv(start, stop, status == 1) ~ bip + tt(year),\n      data = subset(affective, state == 0), ties = \"breslow\",\n       tt=function(x, t, ...) {\n         per <- x + 0.5 + t/12\n         cbind(period1=1*(66<=per & per<71),\n               period2=1*(71<=per & per<76),\n               period3=1*(76<=per & per<81),\n               period4=1*(81<=per))})\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ bip + tt(year), \n    data = subset(affective, state == 0), ties = \"breslow\", tt = function(x, \n        t, ...) {\n        per <- x + 0.5 + t/12\n        cbind(period1 = 1 * (66 <= per & per < 71), period2 = 1 * \n            (71 <= per & per < 76), period3 = 1 * (76 <= per & \n            per < 81), period4 = 1 * (81 <= per))\n    })\n\n                    coef exp(coef) se(coef)      z        p\nbip              0.36123   1.43509  0.09454  3.821 0.000133\ntt(year)period1 -0.25060   0.77834  0.20834 -1.203 0.229047\ntt(year)period2 -0.17948   0.83570  0.33095 -0.542 0.587596\ntt(year)period3 -0.36737   0.69256  0.43858 -0.838 0.402237\ntt(year)period4 -1.33241   0.26384  0.55385 -2.406 0.016141\n\nLikelihood ratio test=25.16  on 5 df, p=0.0001299\nn= 626, number of events= 542 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=affective;\n    where state=0; \n    model stop*status(2 3)= bip period1 period2 period3 period4 / entry=start rl type3(lr);\n    period=year+0.5+stop/12;\n    period1=0; period2=0; period3=0; period4=0;\n    if 71>period>=66 then period1=1;\n    if 76>period>=71 then period2=1;\n    if 81>period>=76 then period3=1;\n    if period>=81 then period4=1;\nrun"
  },
  {
    "objectID": "Ch3.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "href": "Ch3.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "title": "3  Intensity models",
    "section": "LEADER cardiovascular trial in type 2 diabetes",
    "text": "LEADER cardiovascular trial in type 2 diabetes\n\n\n\n\nRead data\nAssume that the LEADER data set is loaded in data set leader.\n\nRSAS\n\n\n\n\nCode show/hide\n# One data set per recurrent endpoint type\nleader_mi <- subset(leader, type == \"recurrent_mi\")\nleader_3p <- subset(leader, type == \"recurrent_comb\")\n\n\n\n\n\n\nCode show/hide\ndata leader_mi; \n    set leader; \n    where type = \"recurrent_mi\"; \nrun; \n\n\n\n\n\n\n\nTable 3.16\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model, frailty\nlibrary(survival)\ncoxfrail <- coxph(Surv(start, stop, status == 1) ~ treat + frailty(id), \n                  method = \"breslow\", \n                  data = leader_mi)\nsummary(coxfrail)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat + frailty(id), \n    data = leader_mi, method = \"breslow\")\n\n  n= 10120, number of events= 780 \n\n            coef    se(coef) se2     Chisq   DF   p     \ntreat       -0.1773 0.0877   0.07197    4.09    1 0.0430\nfrailty(id)                          3219.37 3030 0.0084\n\n      exp(coef) exp(-coef) lower .95 upper .95\ntreat    0.8376      1.194    0.7053    0.9946\n\nIterations: 7 outer, 28 Newton-Raphson\n     Variance of random effect= 5.686665   I-likelihood = -6863.6 \nDegrees of freedom for terms=    0.7 3030.1 \nConcordance= 0.975  (se = 0.001 )\nLikelihood ratio test= 2841  on 3031 df,   p=1\n\n\nCode show/hide\nsqrt(coxfrail$fvar[1]) # frailty SD\n\n\n[1] 2.384874\n\n\nCode show/hide\n# PieceWise constant, frailty\n# Make cuts \nalltimes <- seq(0,max(leader_mi$stop),length=99)\n\nFunctionIntervalM <- function(a,b) {\n  seq(from=min(a), to = max(a), by = (max(a)-min(a))/b)\n}\n\ncuts <- FunctionIntervalM(a = alltimes, b = 5)\n\n# AG model, piece-wise constant hazards \ncut_data <- survSplit(Surv(start, stop, status == 1) ~ ., \n                      leader_mi,\n                      cut = cuts[-1], \n                      episode = \"timegroup\")\n\npwch_frail <- coxph(Surv(start, stop, event) ~ \n                    treat + strata(timegroup) + frailty(id), \n                               data = cut_data)\nsummary(pwch_frail)\n\n\nCall:\ncoxph(formula = Surv(start, stop, event) ~ treat + strata(timegroup) + \n    frailty(id), data = cut_data)\n\n  n= 39070, number of events= 780 \n\n            coef    se(coef) se2     Chisq   DF   p     \ntreat       -0.1773 0.08772  0.07197    4.09    1 0.0430\nfrailty(id)                          3222.23 3033 0.0085\n\n      exp(coef) exp(-coef) lower .95 upper .95\ntreat    0.8375      1.194    0.7052    0.9946\n\nIterations: 7 outer, 28 Newton-Raphson\n     Variance of random effect= 5.694404   I-likelihood = -6863.4 \nDegrees of freedom for terms=    0.7 3033.3 \nConcordance= 0.975  (se = 0.001 )\nLikelihood ratio test= 2843  on 3034 df,   p=1\n\n\nCode show/hide\nsqrt(pwch_frail$fvar[1]) # frailty SD\n\n\n[1] 2.386496\n\n\n\n\nOnly Cox-type model.\n\n\nCode show/hide\n# very slow!\nproc phreg data=leader_mi covs(aggregate);\n  class id;\n  model stop*status(0 2) = treat / entry=start; \n  random id / dist=gamma;\n  title1 'Frailty model for recurrent event data';\nrun;\n\n\n\n\n\n\n\nTable 3.17\n\nRSA-NA\n\n\n\n\nCode show/hide\n# Joint frailty model, piece-wise constant hazards\nlibrary(frailtypack)\nleader_mi$death <- ifelse(leader_mi$status == 2, 1, 0)\njointfrail_pc_eq_mi <- frailtyPenal(\n  Surv(start, stop, status == 1) ~ cluster(id)+ treat + terminal(death),\n  formula.terminalEvent = ~ treat,data = leader_mi, \n  hazard = \"Piecewise-equi\", nb.int = c(5, 5), recurrentAG = TRUE)\n\n\n\nBe patient. The program is computing ... \nThe program took 296.47 seconds \n\n\nCode show/hide\njointfrail_pc_eq_mi\n\n\nCall:\nfrailtyPenal(formula = Surv(start, stop, status == 1) ~ cluster(id) + \n    treat + terminal(death), formula.terminalEvent = ~treat, \n    data = leader_mi, recurrentAG = TRUE, hazard = \"Piecewise-equi\", \n    nb.int = c(5, 5))\n\n\n  Joint gamma frailty model for recurrent and a terminal event processes \n  using a Parametrical approach for the hazard function \n\nRecurrences:\n------------- \n          coef exp(coef) SE coef (H)        z        p\ntreat -0.18591  0.830349   0.0680109 -2.73353 0.006266\n\nTerminal event:\n---------------- \n           coef exp(coef) SE coef (H)        z         p\ntreat -0.211397  0.809452   0.0784837 -2.69352 0.0070702\n\n Frailty parameters: \n   theta (variance of Frailties, w): 0.895749 (SE (H): 0.0306499 ) p = < 1e-16 \n   alpha (w^alpha for terminal event): 1.85978 (SE (H): 0.115069 ) p = < 1e-16 \n \n   marginal log-likelihood = -16965\n   Convergence criteria: \n   parameters = 3.07e-08 likelihood = 0.000848 gradient = 2.12e-07 \n\n   AIC = Aikaike information Criterion     = 1.67777 \n\nThe expression of the Aikaike Criterion is: \n        'AIC = (1/n)[np - l(.)]' \n\n   n observations= 10120  n subjects= 9340\n   n recurrent events= 780\n   n terminal events= 828\n   n censored events= 9340\n   number of iterations:  37 \n   Number of nodes for the Gauss-Laguerre quadrature:  32 \n   Exact number of time intervals used:  5 \n   Exact number of time intervals used:  5 \n\n\nCode show/hide\nsqrt(jointfrail_pc_eq_mi$theta) # Frailty SD\n\n\n[1] 0.9464401\n\n\nCode show/hide\nsummary(jointfrail_pc_eq_mi)\n\n\nRecurrences:\n------------- \n           hr     95%     C.I. \n treat   0.83 (   0.73 -   0.95 ) \n\nTerminal event:\n--------------- \n           hr     95%     C.I. \n treat   0.81 (   0.69 -   0.94 )"
  },
  {
    "objectID": "Ch3.html#bone-marrow-transplantation-in-acute-leukemia",
    "href": "Ch3.html#bone-marrow-transplantation-in-acute-leukemia",
    "title": "3  Intensity models",
    "section": "Bone marrow transplantation in acute leukemia",
    "text": "Bone marrow transplantation in acute leukemia\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nbmt <- read.csv(\"data/bmt.csv\")\nbmt$intxsurv<- bmt$timedeath\nbmt$intxrel <- ifelse(bmt$rel == 1, bmt$timerel, bmt$timedeath)\nbmt$trm     <- ifelse(bmt$rel == 0 & bmt$death == 1, 1, 0)\nbmt$tgvhd   <- ifelse(bmt$gvhd == 1, bmt$timegvhd, bmt$intxrel)\nbmt$tanc500 <- ifelse(bmt$anc500 == 1, bmt$timeanc500, bmt$intxrel)\nbmt$state0  <- bmt$rel + 2*bmt$trm\n\n\n\n\n\n\nCode show/hide\nproc import out=bmt\n    datafile=\"data/bmt.csv\"\n    dbms=csv replace;\nrun;\ndata bmt; \n    set bmt;\n    intxsurv=timedeath; dead=death;\n    if rel=1 then intxrel=timerel; if rel=0 then intxrel=timedeath;\n    trm=0; if rel=0 and death=1 then trm=1;\n    state0=rel+2*trm;\n    if gvhd=1 then tgvhd=timegvhd; if gvhd=0 then tgvhd=intxrel;\nrun;\n\n\n\n\n\n\n\nFigure 3.5\n\nRSAS\n\n\n\n\nCode show/hide\n# General theme\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Model fit and make plot data\nlibrary(survival)\nfit1 <- survfit(Surv(tgvhd, gvhd != 0) ~ 1, data = bmt)\npdata1 <- data.frame(cumhaz = fit1$cumhaz, \n                     time = fit1$time) \n# Create Figure 3.5\nfig3.5 <- ggplot(aes(x = time, y = cumhaz), data = pdata1) + \n  geom_step(linewidth = 1) + \n  xlab(\"Time since bone marrow transplantation (months)\") + \n  ylab(\"Cumulative GvHD hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 156), breaks = seq(0, 156, by = 12)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 0.8), breaks = seq(0, 0.8, by = 0.1)) +\n  theme_general\n\nfig3.5\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=bmt;\n    model tgvhd*gvhd(0)=;\n    baseline out=alfagvh cumhaz=naagvh;\nrun;\nproc gplot data=alfagvh;\n    plot naagvh*tgvhd/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 156 by 12 minor=none\n    label=('Time since bone marrow transplantation (months)');\n    axis2 order=0 to 0.8 by 0.1 minor=none\n    label=(a=90 'Cumulative GvHD hazard');\n    symbol1  v=none i=stepjl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 3.6\n\nRSAS\n\n\n\n\nCode show/hide\n# Reformatting\nbmt$nyreltime <- with(bmt, ifelse(tgvhd < intxrel, tgvhd, intxrel))\nbmt$nyrel <- with(bmt, ifelse(tgvhd < intxrel, 0, rel))\nbmt$nytrm <- with(bmt, ifelse(tgvhd < intxrel, 0, trm))\n\n# Cumulative relapse rate without GvHD \nfit11 <- survfit(Surv(nyreltime, nyrel != 0) ~ 1, data = bmt)\n# Cumulative relapse rate after GvHD\nfit12 <- survfit(Surv(tgvhd, intxrel, rel != 0) ~ 1, \n                 data = subset(bmt, gvhd == 1 & tgvhd < intxrel))\n\n\n# Collect plot data\npdata11 <- data.frame(cumhaz = fit11$cumhaz, time = fit11$time) \npdata12 <- data.frame(cumhaz = fit12$cumhaz, time = fit12$time) \n\n# Create Figure 3.6\nfig3.6 <- ggplot(aes(x = time, y = cumhaz), data = pdata11) + \n  geom_step(linewidth = 1) +\n  geom_step(aes(x = time, y = cumhaz), data = pdata12, \n            linewidth = 1, linetype = \"dashed\") + \n  xlab(\"Time since bone marrow transplantation (months)\") + \n  ylab(\"Cumulative relapse hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 156), breaks = seq(0, 156, by = 12)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 0.2), breaks = seq(0, 0.2, by = 0.1)) +\n  theme_general\n\nfig3.6\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Reformatting; \ndata bmt; \nset bmt; /* Censor at GvHD */\n    if tgvhd<intxrel then do;\n    nyreltime=tgvhd; nyrel=0; nytrm=0; end;\n    if tgvhd=intxrel then do;\n    nyreltime=intxrel; nyrel=rel; nytrm=trm; end;\nrun;\n\n* Cumulative relapse rate without gvhd; \nproc phreg data=bmt;\n    model nyreltime*nyrel(0)=;\n    baseline out=alfa0rel cumhaz=naa0rel;\nrun;\n\n* Cumulative relapse rate after gvhd; \nproc phreg data=bmt;\n    where gvhd=1;\n    model intxrel*rel(0)=/entry=tgvhd;\n    baseline out=alfagvhrel cumhaz=naagvhrel;\nrun;\ndata alfa0rel; \n    set alfa0rel; \n    reltime=nyreltime; \nrun;\ndata alfagvhrel; \n    set alfagvhrel; \n    reltime=intxrel; \nrun;\ndata rel; \n    merge alfa0rel alfagvhrel; \n    by reltime; \nrun;\ndata relrev; \n    set rel;\n    by reltime;\n    retain last1 last2;\n    if naa0rel=. then a02=last1; if naa0rel ne . then a02=naa0rel; \n    if naagvhrel=. then a13=last2; if naagvhrel ne . then a13=naagvhrel;\n    output;\n    last1=a02; last2=a13; \nrun;\nlegend1 label=none;\nproc gplot data=relrev;\n    plot a02*reltime a13*reltime/haxis=axis1 vaxis=axis2 overlay legend=legend1;\n    axis1 order=0 to 156 by 12 minor=none\n        label=('Time since bone marrow transplantation (months)');\n    axis2 order=0 to 0.2 by 0.1 minor=none\n        label=(a=90 'Cumulative relapse hazard');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\n    label a02=\"No GvHD\";\n    label a13=\"After GvHD\";\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 3.7\n\nRSAS\n\n\n\n\nCode show/hide\n# Need to get the cumulative hazard estimates at the same time points\n# All times\nall_t <- sort(unique(c(unique(pdata11$time), unique(pdata12$time))))\n# Evaluate each step function at these time points \nstep11 <- stepfun(x = pdata11$time, y = c(0, pdata11$cumhaz))\nstep12 <- stepfun(x = pdata12$time, y = c(0, pdata12$cumhaz))\n\npdata11_a <- data.frame(time = all_t, \n                        cumhaz = step11(all_t))\npdata12_a <- data.frame(time = all_t, \n                        cumhaz = step12(all_t))\n# Collect data\npdata_b <- data.frame(cumhaz1 = pdata11_a$cumhaz, \n                      cumhaz2 = pdata12_a$cumhaz, \n                      time = all_t)\n\n# Make zeros print as \"0\" always in plots\nlibrary(stringr)\nprettyZero <- function(l){\n  max.decimals = max(nchar(str_extract(l, \"\\\\.[0-9]+\")), na.rm = T)-1\n  lnew = formatC(l, replace.zero = T, zero.print = \"0\",\n                 digits = max.decimals, format = \"f\", preserve.width=T)\n  return(lnew)\n}\n# Create Figure 3.7\nfig3.7 <- ggplot(aes(x = cumhaz1, y = cumhaz2), data = pdata_b) + \n  geom_step(linewidth = 1) +\n  geom_abline(aes(intercept = 0, slope = 0.858), linewidth = 1, \n              linetype = \"dashed\") + \n  xlab(\"Cumulative relapse hazard: no GvHD\") + \n  ylab(\"Cumulative relapse hazard: GvHD\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 0.2), breaks = seq(0, 0.2, by = 0.05),\n                     labels = prettyZero) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 0.2), breaks = seq(0, 0.2, by = 0.05),\n                     labels = prettyZero) +\n  theme_general\n\nfig3.7\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata relrev; \n    set relrev;\n    line=0.858*a02;\nrun;\nproc gplot data=relrev;\n    plot a13*a02 line*a02/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 0.2 by 0.05 minor=none \n    label=('Cumulative relapse hazard: no GvHD');\n    axis2 order=0 to 0.2 by 0.05 minor=none \n    label=(a=90 'Cumulative relapse hazard: GvHD');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=rl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nIn-text, p. 102: GvHD as time-dependent covariate\n\nRelapse\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(broom)\ntidy(coxph(Surv(intxrel,rel!=0) ~ tt(tgvhd), data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdcgvhd=1*(dt>0))\n      }),exp=T, conf.int = T)\n\n\n# A tibble: 1 × 7\n  term      estimate std.error statistic p.value conf.low conf.high\n  <chr>        <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n1 tt(tgvhd)    0.858     0.132     -1.15   0.248    0.663      1.11\n\n\nCode show/hide\n# test ph\ntidy(coxph(Surv(intxrel,rel!=0) ~ tt(tgvhd), data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdc=1*(dt>0),tdc_logt=(dt>0)*log(t+1))\n      }),exp=T, conf.int = T)\n\n\n# A tibble: 2 × 7\n  term              estimate std.error statistic p.value conf.low conf.high\n  <chr>                <dbl>     <dbl>     <dbl>   <dbl>    <dbl>     <dbl>\n1 tt(tgvhd)tdc         0.599     0.409    -1.25    0.210    0.268      1.34\n2 tt(tgvhd)tdc_logt    1.18      0.175     0.936   0.349    0.836      1.66\n\n\n\n\n\n\nCode show/hide\nproc phreg data=bmt;\n    model intxrel*rel(0)= ttgvhd / rl type3(lr);\n    ttgvhd=(intxrel-tgvhd)>0;\nrun;\n\n* test ph;\nproc phreg data=bmt;\n    model intxrel*rel(0)= ttgvhd ttgvhdlogt / rl type3(lr);\n    ttgvhd=(intxrel-tgvhd)>0;\n    ttgvhdlogt=ttgvhd*log(intxrel+1);\nrun;\n\n\n\n\n\n\n\nDeath in remission\n\nRSAS\n\n\n\n\nCode show/hide\ntidy(coxph(Surv(intxrel,trm!=0) ~ tt(tgvhd), data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdcgvhd=1*(dt>0))\n      }), exp=T, conf.int = T)\n\n\n# A tibble: 1 × 7\n  term      estimate std.error statistic  p.value conf.low conf.high\n  <chr>        <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 tt(tgvhd)     3.11    0.0964      11.8 4.88e-32     2.58      3.76\n\n\nCode show/hide\n# test ph\ntidy(coxph(Surv(intxrel,trm!=0) ~ tt(tgvhd), data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdc=1*(dt>0),tdc_logt=1*(dt>0)*log(t+1))\n      }), exp=T, conf.int = T)\n\n\n# A tibble: 2 × 7\n  term              estimate std.error statistic  p.value conf.low conf.high\n  <chr>                <dbl>     <dbl>     <dbl>    <dbl>    <dbl>     <dbl>\n1 tt(tgvhd)tdc         4.10     0.197       7.18 6.99e-13    2.79       6.03\n2 tt(tgvhd)tdc_logt    0.872    0.0851     -1.61 1.07e- 1    0.738      1.03\n\n\n\n\n\n\nCode show/hide\nproc phreg data=bmt;\n    model intxrel*trm(0)= ttgvhd / rl type3(lr);\n    ttgvhd=(intxrel-tgvhd)>0;\nrun;\n\n* test ph;\nproc phreg data=bmt;\n    model intxrel*trm(0)= ttgvhd ttgvhdlogt / rl type3(lr);\n    ttgvhd=(intxrel-tgvhd)>0;\n    ttgvhdlogt=ttgvhd*log(intxrel+1);\nrun;\n\n\n\n\n\n\n\n\nFigure 3.8\n\nRSAS\n\n\n\n\nCode show/hide\n# Cumulative death rate without GvHD \nfit11 <- survfit(Surv(nyreltime, nytrm != 0) ~ 1, data = bmt)\n\n# Cumulative death rate with GvHD\nfit12 <- survfit(Surv(tgvhd, intxrel, trm != 0) ~ 1, \n                 data = subset(bmt, gvhd == 1 & tgvhd < intxrel))\n\n# Collect plot data\npdata11 <- data.frame(cumhaz = fit11$cumhaz, \n                      time = fit11$time) \n\npdata12 <- data.frame(cumhaz = fit12$cumhaz, \n                      time = fit12$time) \n\n\n# Need to get the cumulative hazard estimates at the same time points\n# All times\nall_t <- sort(unique(c(unique(pdata11$time), unique(pdata12$time))))\n\n# Evaluate each step function at these time points \nstep11 <- stepfun(x = pdata11$time, y = c(0, pdata11$cumhaz))\nstep12 <- stepfun(x = pdata12$time, y = c(0, pdata12$cumhaz))\n\npdata11_a <- data.frame(time = all_t, \n                        cumhaz = step11(all_t))\npdata12_a <- data.frame(time = all_t, \n                        cumhaz = step12(all_t))\n\n# Collect data\npdata_b <- data.frame(cumhaz1 = pdata11_a$cumhaz, \n                      cumhaz2 = pdata12_a$cumhaz, \n                      time = all_t)\n\n# Create Figure 3.8\nfig3.8 <- ggplot(aes(x = cumhaz1, y = cumhaz2), data = pdata_b) + \n  geom_step(linewidth = 1) +\n  geom_abline(aes(intercept = 0, slope = 3.113), \n              linewidth = 1, linetype = \"dashed\") + \n  xlab(\"Cumulative death hazard: no GvHD\") + \n  ylab(\"Cumulative death hazard: GvHD\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 0.2), breaks = seq(0, 0.2, by = 0.05),\n                     labels = prettyZero) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 1.0), breaks = seq(0, 1.0, by = 0.2),\n                     labels = prettyZero) +\n  theme_general\n\nfig3.8\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Cumulative death rate without gvhd; \nproc phreg data=bmt; \n    model nyreltime*nytrm(0)=;\n    baseline out=alfa0dead cumhaz=naa0dead;\nrun;\n* Cumulative death rate with gvhd; \nproc phreg data=bmt;\n    where gvhd=1;\n    model intxrel*trm(0)=/entry=tgvhd;\n    baseline out=alfagvhdead cumhaz=naagvhdead;\nrun;\n* Book-keeping for plot;\ndata alfa0dead; \n    set alfa0dead; \n    deadtime=nyreltime; \nrun;\ndata alfagvhdead; \n    set alfagvhdead; \n    deadtime=intxrel; \nrun;\ndata dead; \n    merge alfa0dead alfagvhdead; \n    by deadtime; \nrun;\ndata deadrev; \n    set dead;\n    by deadtime;\n    retain last1 last2;\n    if naa0dead=. then a02=last1; if naa0dead ne . then a02=naa0dead; \n    if naagvhdead=. then a13=last2; if naagvhdead ne . then a13=naagvhdead;\n    output;\n    last1=a02; last2=a13; \nrun;\n* Add coefficient; \ndata deadrev; \n    set deadrev;\n    line=3.113*a02;\nrun;\nproc gplot data=deadrev;\n    plot a13*a02 line*a02/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 0.2 by 0.05 minor=none\n    label=('Cumulative death hazard: no GvHD');\n    axis2 order=0 to 1 by 0.2 minor=none\n    label=(a=90 'Cumulative death hazard: GvHD');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=rl c=blue;;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 3.4\n\nRSAS\n\n\n\n\nCode show/hide\n# Cumulative death hazards wrt relapse; \n# Cumulative death rate no relapse or GvHD\nfit11 <- survfit(Surv(intxrel, trm != 0) ~ 1, data = bmt)\n# Cumulative death rate after relapse\nbmt$intxsurv <- with(bmt, ifelse(intxrel == intxsurv & rel == 1, intxsurv + 0.01, intxsurv))\nfit12 <- survfit(Surv(intxrel, intxsurv, death != 0) ~ 1, data = subset(bmt, rel == 1))\n# Cumulative death rate after GvHD\nfit13 <- survfit(Surv(tgvhd, intxrel, trm != 0) ~ 1, data = subset(bmt, gvhd == 1))\n# Collect plot data\npdata11 <- data.frame(cumhaz = fit11$cumhaz, time = fit11$time) \npdata12 <- data.frame(cumhaz = fit12$cumhaz, time = fit12$time) \npdata13 <- data.frame(cumhaz = fit13$cumhaz, time = fit13$time) \n\ntail(pdata12)\n\n\n      cumhaz   time\n220 7.557091  84.70\n221 7.557091  85.43\n222 7.557091  96.41\n223 8.057091  99.80\n224 8.057091  99.87\n225 8.057091 105.10\n\n\nCode show/hide\n# Create Figure 3.4\nfig3.4 <- ggplot(aes(x = time, y = cumhaz), data = pdata11) + \n  geom_step(linewidth = 1) +\n  geom_step(aes(x = time, y = cumhaz), data = pdata12, \n            linewidth = 1, linetype = \"dashed\") + \n  geom_step(aes(x = time, y = cumhaz), data = pdata13, \n            linewidth = 1, linetype = \"dotted\") + \n  xlab(\"Time since bone marrow transplantation (months)\") + \n  ylab(\"Cumulative hazard of death\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 156), breaks = seq(0, 156, by = 12)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  theme_general\n\nfig3.4\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Cumulative death hazards wrt relapse ;\nproc phreg data=bmt; \n    model intxrel*trm(0)=;\n    baseline out=alfa02 cumhaz=naa02;\nrun;\ndata bmt; \n    set bmt; \n    if intxrel eq intxsurv and rel eq 1 then intxsurv = intxsurv + 0.01; \nrun; \nproc phreg data=bmt;\n    where rel=1;\n    model intxsurv*dead(0)=/entry=intxrel;\n    baseline out=alfa13 cumhaz=naa13;\nrun;\n\n* Book-keeping; \ndata alfa02; \n    set alfa02; \n    deadtime=intxrel; \nrun;\ndata alfa13; \n    set alfa13; \n    deadtime=intxsurv; \nrun;\ndata alfadead; \n    merge alfa02 alfa13; \n    by deadtime; \nrun;\ndata alfarev; set alfadead;\n    by deadtime;\n    retain last1 last2;\n    if naa02=. then a0rel=last1; if naa02 ne . then a0rel=naa02; \n    if naa13=. then arel=last2; if naa13 ne . then arel=naa13;\n    output;\n    last1=a0rel; last2=arel; \nrun;\n* 3 mortality rates simultaneously;\ndata alfa3dead; \n    merge deadrev alfarev; \n    by deadtime; \nrun;\nproc gplot data=alfa3dead;\n    plot arel*deadtime a02*deadtime a13*deadtime\n                     / overlay haxis=axis1 vaxis=axis2 legend=legend1;\n    axis1 order=0 to 120 by 10 minor=none\n        label=('Time since bone marrow transplantation (months)');\n    axis2 order=0 to 9 by 1 minor=none\n        label=(a=90 'Cumulative hazard of death');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\n    symbol3  v=none i=stepjl c=black;\n    label arel=\"After relapse\";\n    label a02=\"No relapse and no GvHD\";\n    label a13=\"After GvHD\";\nrun;\nquit;\n\n\n\n\n\n\n\nTable 3.12\n\nRSAS\n\n\n\n\nCode show/hide\n# Relapse\n# Column 1\ncoxph(Surv(intxrel,rel!=0) ~ tt(tgvhd) + I(age/10) + bmonly + all,\n      data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdcgvhd=1*(dt>0))\n      })\n\n\nCall:\ncoxph(formula = Surv(intxrel, rel != 0) ~ tt(tgvhd) + I(age/10) + \n    bmonly + all, data = bmt, ties = \"breslow\", tt = function(x, \n    t, ...) {\n    dt <- t - x\n    cbind(tdcgvhd = 1 * (dt > 0))\n})\n\n              coef exp(coef) se(coef)      z        p\ntt(tgvhd) -0.18363   0.83225  0.13370 -1.373    0.170\nI(age/10) -0.03973   0.96105  0.04450 -0.893    0.372\nbmonly    -0.12543   0.88211  0.13504 -0.929    0.353\nall        0.56273   1.75546  0.12965  4.340 1.42e-05\n\nLikelihood ratio test=22.52  on 4 df, p=0.0001578\nn= 2009, number of events= 259 \n\n\nCode show/hide\n# Column 2\ncoxph(Surv(intxrel,rel!=0) ~  tt(tgvhd) + I(age/10) + bmonly + all + tt(tanc500),\n      data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdcgvhd=1*(dt>0))\n      })\n\n\nCall:\ncoxph(formula = Surv(intxrel, rel != 0) ~ tt(tgvhd) + I(age/10) + \n    bmonly + all + tt(tanc500), data = bmt, ties = \"breslow\", \n    tt = function(x, t, ...) {\n        dt <- t - x\n        cbind(tdcgvhd = 1 * (dt > 0))\n    })\n\n                coef exp(coef) se(coef)      z        p\ntt(tgvhd)   -0.18830   0.82837  0.13374 -1.408   0.1592\nI(age/10)   -0.03934   0.96143  0.04452 -0.884   0.3770\nbmonly      -0.12979   0.87828  0.13515 -0.960   0.3369\nall          0.56216   1.75445  0.12968  4.335 1.46e-05\ntt(tanc500) -2.13768   0.11793  1.07729 -1.984   0.0472\n\nLikelihood ratio test=24.91  on 5 df, p=0.0001452\nn= 2009, number of events= 259 \n\n\nCode show/hide\n# Death in remission\n# Column 1\ncoxph(Surv(intxrel,trm!=0) ~ tt(tgvhd) + I(age/10) + bmonly + all,\n      data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdcgvhd=1*(dt>0))\n      })\n\n\nCall:\ncoxph(formula = Surv(intxrel, trm != 0) ~ tt(tgvhd) + I(age/10) + \n    bmonly + all, data = bmt, ties = \"breslow\", tt = function(x, \n    t, ...) {\n    dt <- t - x\n    cbind(tdcgvhd = 1 * (dt > 0))\n})\n\n              coef exp(coef) se(coef)      z        p\ntt(tgvhd)  1.04140   2.83318  0.09801 10.626  < 2e-16\nI(age/10)  0.26280   1.30056  0.03278  8.016 1.09e-15\nbmonly    -0.08546   0.91809  0.09556 -0.894 0.371162\nall        0.33359   1.39597  0.09817  3.398 0.000678\n\nLikelihood ratio test=227  on 4 df, p=< 2.2e-16\nn= 2009, number of events= 505 \n\n\nCode show/hide\n# Column 2\ncoxph(Surv(intxrel,trm!=0) ~  tt(tgvhd) + I(age/10) + bmonly + all + tt(tanc500),\n      data = bmt, ties=\"breslow\",\n      tt=function(x, t, ...) {\n        dt <- t-x\n        cbind(tdcgvhd=1*(dt>0))\n      })\n\n\nCall:\ncoxph(formula = Surv(intxrel, trm != 0) ~ tt(tgvhd) + I(age/10) + \n    bmonly + all + tt(tanc500), data = bmt, ties = \"breslow\", \n    tt = function(x, t, ...) {\n        dt <- t - x\n        cbind(tdcgvhd = 1 * (dt > 0))\n    })\n\n                coef exp(coef) se(coef)      z        p\ntt(tgvhd)    1.04016   2.82966  0.09854 10.556  < 2e-16\nI(age/10)    0.26289   1.30069  0.03288  7.996 1.28e-15\nbmonly      -0.14047   0.86895  0.09627 -1.459 0.144550\nall          0.33553   1.39868  0.09826  3.415 0.000639\ntt(tanc500) -2.22822   0.10772  0.30523 -7.300 2.87e-13\n\nLikelihood ratio test=275.1  on 5 df, p=< 2.2e-16\nn= 2009, number of events= 505 \n\n\n\n\n\n\nCode show/hide\n** Relapse **; \n* Column 1;\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*rel(0)=tdcgvhd age bmonly all/rl;\n    tdcgvhd=0;\n    if gvhd=1 and intxrel>tgvhd then tdcgvhd=1;\nrun;\n* Column 2;\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*rel(0)= tdcgvhd age bmonly all  tdcanc500/rl;\n    tdcanc500=0;\n    if anc500=1 and intxrel>timeanc500 then tdcanc500=1;\n    tdcgvhd=0;\n    if gvhd=1 and intxrel>tgvhd then tdcgvhd=1;\nrun;\n\n\n** Death in remission **;\n* Column 1; \nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*trm(0)=tdcgvhd age bmonly all/rl;\n    tdcgvhd=0;\n    if gvhd=1 and intxrel>tgvhd then tdcgvhd=1;\nrun;\n\n* Column 2;\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*trm(0)=tdcgvhd  age bmonly all tdcanc500 /rl;\n    tdcanc500=0;\n    if anc500=1 and intxrel>timeanc500 then tdcanc500=1;\n    tdcgvhd=0;\n    if gvhd=1 and intxrel>tgvhd then tdcgvhd=1;\nrun;\n\n\n\n\n\n\n\nTable 3.14\n\nRSAS\n\n\n\n\nCode show/hide\n# Prepare data set for analysis - double\nlibrary(tidyverse)\nbmtext <- bmt %>% mutate(nygsource = bmonly, \n                         nydisease = all, \n                         age10 = age/10,\n                         time = ifelse(gvhd == 1, tgvhd, intxrel), \n                         status = ifelse(gvhd == 1, 0, trm),\n                         entry = 0,\n                         ) \n\n\ndouble1 <- bmtext  %>% \n  mutate(age1 = age10, \n         age2 = 0,\n         gsource1 = nygsource, \n         gsource2 = 0,\n         disease1 = nydisease,\n         disease2 = 0, \n         stratum = 1)\n\ndouble2 <- bmtext %>% filter(gvhd == 1) %>% \n  mutate(time = intxrel, \n         status = trm,  \n         entry = tgvhd,\n         age1 = 0, \n         age2 = age10,\n         gsource1 = 0, \n         gsource2 = nygsource,\n         disease1 = 0,\n         disease2 = nydisease, \n         stratum = 2)\n\ndoubledod <- as.data.frame(rbind(double1, double2))\n\n# Row 1\nr1<-coxph(Surv(entry, time, status != 0) ~ strata(stratum) + disease1 + disease2 + age1 + age2, \n            data = doubledod, ties = \"breslow\")\nr1\n\n\nCall:\ncoxph(formula = Surv(entry, time, status != 0) ~ strata(stratum) + \n    disease1 + disease2 + age1 + age2, data = doubledod, ties = \"breslow\")\n\n            coef exp(coef) se(coef)     z        p\ndisease1 0.26705   1.30610  0.15893 1.680  0.09290\ndisease2 0.36025   1.43369  0.12492 2.884  0.00393\nage1     0.25561   1.29125  0.04791 5.336 9.53e-08\nage2     0.28675   1.33209  0.04083 7.023 2.17e-12\n\nLikelihood ratio test=82.11  on 4 df, p=< 2.2e-16\nn= 2983, number of events= 505 \n   (2 observations deleted due to missingness)\n\n\nCode show/hide\n# Row 2\ndoubledod$type <- doubledod$stratum - 1\nr2<-coxph(Surv(entry, time, status != 0) ~ disease1 + disease2 + age1 + age2 + type, \n            data = doubledod, ties = \"breslow\")\nr2\n\n\nCall:\ncoxph(formula = Surv(entry, time, status != 0) ~ disease1 + disease2 + \n    age1 + age2 + type, data = doubledod, ties = \"breslow\")\n\n            coef exp(coef) se(coef)     z        p\ndisease1 0.26172   1.29916  0.15877 1.648  0.09926\ndisease2 0.37891   1.46069  0.12478 3.037  0.00239\nage1     0.24601   1.27891  0.04754 5.175 2.28e-07\nage2     0.29228   1.33948  0.04101 7.128 1.02e-12\ntype     0.84247   2.32210  0.26891 3.133  0.00173\n\nLikelihood ratio test=226.9  on 5 df, p=< 2.2e-16\nn= 2983, number of events= 505 \n   (2 observations deleted due to missingness)\n\n\nCode show/hide\nr2t<-coxph(Surv(entry, time, status != 0) ~ disease1 + disease2 + age1 + age2 + type\n           +tt(type), \n            data = doubledod, ties = \"breslow\",\n           tt = function(x,t, ...){\n             gvhdt = x*log(t)\n           })\n\n# In-text: LRT proportionality\nlibrary(lmtest)\nlrtest(r2, r2t)\n\n\nLikelihood ratio test\n\nModel 1: Surv(entry, time, status != 0) ~ disease1 + disease2 + age1 + \n    age2 + type\nModel 2: Surv(entry, time, status != 0) ~ disease1 + disease2 + age1 + \n    age2 + type + tt(type)\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   5 -3542.8                     \n2   6 -3541.8  1 2.0768     0.1496\n\n\nCode show/hide\n# Row 3\nr3<-coxph(Surv(entry, time, status != 0) ~ nydisease + age10 + type, \n            data = doubledod, ties = \"breslow\")\nr3\n\n\nCall:\ncoxph(formula = Surv(entry, time, status != 0) ~ nydisease + \n    age10 + type, data = doubledod, ties = \"breslow\")\n\n             coef exp(coef) se(coef)      z        p\nnydisease 0.33159   1.39318  0.09808  3.381 0.000723\nage10     0.27230   1.31298  0.03103  8.774  < 2e-16\ntype      1.04934   2.85577  0.09758 10.754  < 2e-16\n\nLikelihood ratio test=226.2  on 3 df, p=< 2.2e-16\nn= 2983, number of events= 505 \n   (2 observations deleted due to missingness)\n\n\nCode show/hide\n# In-text: LRT common coefficients\nlrtest(r3,r2)\n\n\nLikelihood ratio test\n\nModel 1: Surv(entry, time, status != 0) ~ nydisease + age10 + type\nModel 2: Surv(entry, time, status != 0) ~ disease1 + disease2 + age1 + \n    age2 + type\n  #Df  LogLik Df  Chisq Pr(>Chisq)\n1   3 -3543.2                     \n2   5 -3542.8  2 0.7389     0.6911\n\n\n\n\n\n\nCode show/hide\n* Make \"double\" data set; \ndata doubledod; \n    set bmt; \n    nygsource=bmonly; \n    nydisease=all; \n    age10=age/10;\n    time=intxrel; \n    status=trm; \n    entry=0;\n\n    if gvhd=1 then do; \n        time=tgvhd; \n        status=0; \n    end;\n    age1=age10; \n    age2=0; \n    gsource1=nygsource; \n    gsource2=0;\n    disease1=nydisease; \n    disease2=0; \n    stratum=1; \n    output;\n\n    if gvhd=1 then do;\n        time=intxrel; \n        status=trm; \n        entry=tgvhd;\n        age1=0; \n        age2=age10; \n        gsource1=0; \n        gsource2=nygsource;\n        disease1=0; \n        disease2=nydisease; \n        stratum=2; \n        output; \n    end;\nrun;\n\n* Row 1; \nproc phreg data=doubledod; \n    model time*status(0)=disease1 disease2 \n    age1 age2 /entry=entry type3(lr);\n    strata stratum;\nrun;\n\n* Row 2; \nproc phreg data=doubledod; \n    model time*status(0)=disease1 disease2 \n    age1 age2 type /entry=entry type3(lr);\n    type=stratum-1;\n    test age1=age2, disease1=disease2; /* Wald test instead of LRT */\nrun;\n\n* In-text: LRT proportionality variable 'typelogt';\nproc phreg data=doubledod; \n    model time*status(0)=disease1 disease2 \n    age1 age2 type typelogt  /entry=entry type3(lr);\n    type=stratum-1;\n    typelogt=type*log(time);\nrun;\n\n\n* Row 3; \nproc phreg data=doubledod; \n    class stratum (ref='1') nydisease (ref='0');\n    model time*status(0)=nydisease age10 type /entry=entry type3(lr);\n    type=stratum-1;\nrun;\n\n\n\n\n\n\n\nFigure 3.10\n\nRSAS\n\n\n\n\nCode show/hide\n# Extract cumulative hazard from r1 \nsurvr1 <- basehaz(r1, center = F)\npcumhaz <- data.frame(cumhaz = survr1$hazard, \n                      time = survr1$time, \n                      strata = survr1$strata) \n\n# Create Figure 3.10\nfig3.10 <- ggplot(aes(x = time, y = cumhaz, linetype = strata), data = pcumhaz) + \n  geom_step(linewidth = 1) + \n  xlab(\"Time since bone marrow transplantation (months)\") + \n  ylab(\"Cumulative hazard\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 156), breaks = seq(0, 156, by = 12)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +\n  scale_linetype_discrete(\"Stratum\", labels = c(\"1\", \"2\")) + \n  theme_general + theme(legend.position = \"none\")\n\nfig3.10\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata covar; \n    input disease1 disease2 age1 age2; \n    datalines; \n    0 0 0 0\n; \nrun; \nproc phreg data=doubledod; \n    model time*status(0)=disease1 disease2 age1 age2 / entry=entry ;\n    strata stratum;\n    baseline out=trm cumhaz=breslow covariates=covar;\nrun;\nproc gplot data=trm;\n    plot breslow*time=stratum/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 156 by 12 minor=none\n        label=('Time since bone marrow transplantation (months)');\n    axis2 order=0 to 0.3 by 0.05 minor=none\n        label=(a=90 'Cumulative hazard of death in remission');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;;\nrun;\nquit;\n\n\n\n\n\n\n\nTable 3.15\n\nRSAS\n\n\n\n\nCode show/hide\ncoxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age \n      + frailty.gamma(team, eps = 1e-09), data = bmt, ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(intxrel, state0 != 0) ~ bmonly + all + age + \n    frailty.gamma(team, eps = 1e-09), data = bmt, ties = \"breslow\")\n\n                              coef se(coef)      se2    Chisq DF       p\nbmonly                    -0.17512  0.08704  0.08178  4.04856  1  0.0442\nall                        0.47196  0.07965  0.07829 35.11425  1 3.1e-09\nage                        0.01873  0.00275  0.00263 46.44972  1 9.4e-12\nfrailty.gamma(team, eps =                            84.11745 51  0.0024\n\nIterations: 9 outer, 43 Newton-Raphson\n     Variance of random effect= 0.117   I-likelihood = -5495.9 \nDegrees of freedom for terms=  0.9  1.0  0.9 51.0 \nLikelihood ratio test=214  on 53.7 df, p=<2e-16\nn= 2009, number of events= 764 \n\n\nCode show/hide\ncoxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age\n      + frailty.gaussian(team, eps = 1e-09, sparse=F), data = bmt, ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(intxrel, state0 != 0) ~ bmonly + all + age + \n    frailty.gaussian(team, eps = 1e-09, sparse = F), data = bmt, \n    ties = \"breslow\")\n\n                              coef se(coef)      se2    Chisq   DF       p\nbmonly                    -0.17683  0.08755  0.08208  4.08010  1.0  0.0434\nall                        0.47435  0.07989  0.07844 35.25576  1.0 2.9e-09\nage                        0.01891  0.00278  0.00265 46.42018  1.0 9.5e-12\nfrailty.gaussian(team, ep                            90.71464 55.1  0.0018\n\nIterations: 8 outer, 22 Newton-Raphson\n     Variance of random effect= 0.139 \nDegrees of freedom for terms=  0.9  1.0  0.9 55.2 \nLikelihood ratio test=695  on 57.9 df, p=<2e-16\nn= 2009, number of events= 764 \n\n\n\n\n\n\nCode show/hide\n* Gamma; \nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\") team;\n    model intxrel*state0(0)=bmonly all age/rl;\n    random team/dist=gamma;\nrun;\n\n* Log-normal; \nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\") team;\n    model intxrel*state0(0)=bmonly all age/rl;\n    random team;\nrun;\n\n\n\n\n\n\n\nIn-text, p. 112: stratified Cox model by center\n\nRSAS\n\n\n\n\nCode show/hide\ncoxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age \n      + strata(team), data = bmt, ties = \"breslow\")\n\n\nCall:\ncoxph(formula = Surv(intxrel, state0 != 0) ~ bmonly + all + age + \n    strata(team), data = bmt, ties = \"breslow\")\n\n            coef exp(coef)  se(coef)      z        p\nbmonly -0.196894  0.821277  0.114392 -1.721   0.0852\nall     0.470582  1.600926  0.090822  5.181 2.20e-07\nage     0.020946  1.021167  0.003539  5.918 3.26e-09\n\nLikelihood ratio test=61.1  on 3 df, p=3.424e-13\nn= 2009, number of events= 764 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\") team;\n    model intxrel*state0(0)=bmonly all age/rl;\n    strata team;\nrun;"
  },
  {
    "objectID": "Ch3.html#exercises",
    "href": "Ch3.html#exercises",
    "title": "3  Intensity models",
    "section": "Exercises",
    "text": "Exercises\nThe SAS solutions are available as single files for download:\n\nExercises 3.7 - 3.10 (The Copenhagen Holter study)\nExercise 3.11 (Recurrent episodes in affective disorders)\nExercise 3.12 (Guinea-Bissau childhood vaccination study)\n\n\nExercise 3.1 (*)\nShow that, under the null hypothesis \\(H_0 : A_0(t) = A_1(t)\\), the test statistic \\(\\int_0^t K(u)\\left( d\\widehat{A}_1(u)-d\\widehat{A}_0(u)\\right)\\) is a martingale (Section 3.2.2).\nThe counting processes can be decomposed as \\(N_h(t)=\\int_0^tY_h(u)\\alpha_h(u)du + M_h(t), h=0,1\\), so under \\(H_0\\), \\[d\\widehat{A}_h(u)=\\frac{dN_h(u)}{Y_h(u)}=\\alpha(u)du+\\frac{dM_h(u)}{Y_h(u)},\\] and the test statistic reduces to the martingale integral \\[\\int_0^tK(u)\\left(\\frac{dM_1(u)}{Y_1(u)}-\\frac{dM_0(u)}{Y_0(u)}\\right),\\] which is itself a martingale.\n\n\nExercise 3.2 (*)\nShow that, when evaluated at the true parameter vector \\(\\mathbf{\\beta}_0\\), the Cox partial likelihood score \\[\n\\int_0^t\\sum_i \\bigl(\\mathbf{Z}_i-\\frac{\\sum_jY_j(u)\\mathbf{Z}_j\\exp(\\mathbf{\\beta}_0^{\\sf T}\\mathbf{Z}_j)}{\\sum_jY_j(u)\\exp(\\mathbf{\\beta}_0^{\\sf T}\\mathbf{Z}_j)}\\bigr)dN_i(u)\n\\] is a martingale (Section 3.3).\nEach individual counting process can be decomposed as \\[N_i(t)=\\int_0^t \\alpha_0(u)Y_i(u)\\exp(\\mathbf{\\beta}_0^{\\sf T}\\mathbf{Z}_i)du + M_i(t)\\] and with \\(S_0(\\mathbf{\\beta},t)=\\sum_iY_i(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\), \\(\\mathbf{S}_1(\\mathbf{\\beta},t)=\\sum_iY_i(t)\\mathbf{Z}_i\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\), the integrand in the Cox score becomes \\[\\sum_i \\bigl(\\mathbf{Z}_i-\\frac{\\mathbf{S}_1(\\mathbf{\\beta},u)}{S_0(\\mathbf{\\beta},u)}\\bigr)(\\alpha_0(u)Y_i(u)\\exp(\\mathbf{\\beta}_0^{\\sf T}\\mathbf{Z}_i)du + dM_i(u))\n\\] \\[=\\alpha_0(u)\\bigl(\\mathbf{S}_1(\\mathbf{\\beta},u)-\\frac{\\mathbf{S}_1(\\mathbf{\\beta},u)}{{S}_0(\\mathbf{\\beta},u)}{S}_0({\\beta},u)\\bigr)du\n+ \\sum_i(\\mathbf{Z}_i-\\frac{\\mathbf{S}_1(\\mathbf{\\beta},u)}{S_0(\\mathbf{\\beta},u)}\\bigr)dM_i(u)\\] and the Cox score is then the martingale integral \\[\\int_0^t \\sum_i(\\mathbf{Z}_i-\\frac{\\mathbf{S}_1(\\mathbf{\\beta},u)}{S_0(\\mathbf{\\beta},u)}\\bigr)dM_i(u).\\]\n\n\nExercise 3.3 (*)\nShow that, for a Cox model with a single binary covariate, the score test for the hypothesis \\(\\beta=0\\) based on the first and second derivative of \\(\\log\\mbox{PL}(\\beta)\\) (Equation (3.16)) is equal to the logrank test.}\nWith a single binary covariate \\(Z_i=I(i\\mbox{ is in group 1})\\), the Cox score \\[\\sum_i \\int_0^t\\left(Z_i-\\frac{S_1(\\beta,u)}{S_0(\\beta,u)}\\right)dN_i(u)\\] (with \\(S_0, S_1\\) defined in Exercise 3.2) reduces to \\[N_1(\\infty)-\\int_0^{\\infty}\\frac{Y_1(u)}{Y_0(u)+Y_1(u)}d(N_0+N_1)(u)\\] when \\(\\beta=0\\) and \\(t=\\infty\\). This is the numerator in the logrank test, \\(\\mbox{LR}(\\infty)\\), Section 3.2.2. With \\(S_2(\\beta,t)=\\sum_jZ_j^2Y_j(t)\\exp(\\beta Z_j)\\), minus the derivative of the Cox score is \\[\\sum_i\\int_0^t\\frac{S_0(\\beta,u)S_2(\\beta,u)-S_1(\\beta,u)^2}{S_0(\\beta,u)^2}dN_i(u)\\] which for \\(\\beta=0\\) and \\(t=\\infty\\) (when there are no ties) reduces to the hypergeometric variance, \\(v\\) (Section 3.2.2) \\[\\int_0^{\\infty}\\frac{Y_0(u)Y_1(u)}{(Y_0(u)+Y_1(u))^2}d(N_0+N_1)(u)\\] and the resulting score test is the logrank test.\n\n\nExercise 3.4 (*)\nShow that, for the stratified Cox model (3.20), the profile likelihood is given by (3.21) and the resulting Breslow estimator by (3.22).\nThe log-likelihood for the stratified Cox model based on the Jacod formula is \\[\\sum_j\\sum_{i\\in S_j}\\left(\\int_0^{\\infty}\\log\\bigl(Y_i(t)\\alpha_{0j}(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\bigr)dN_i(t)-\\int_0^{\\infty}Y_i(t)\\alpha_{0j}(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)dt\\right)\\] (Section 3.3). Taking derivative with respect to a single \\(\\alpha_{0j}(t)\\), we get \\[\\sum_{i \\in S_j}\\left(\\frac{1}{\\alpha_{0j}(t)}dN_i(t)-Y_i(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)dt\\right),\\] and equating to 0 and solving leads to \\[\\widehat{\\alpha_{0j}(t)dt}=\\frac{\\sum_{i\\in S_j}dN_i(t)}{\\sum_{i \\in S_j}Y_i(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)},\\] the jump in the Breslow estimator (3.22).\nInserting this into the Jacod formula leads to the profile likelihood \\[\\prod_j\\prod_{i\\in S_j}\\exp\\left(-\\int_0^{\\infty}Y_i(t)\\frac{\\sum_{\\ell\\in S_j}dN_\\ell(t)}{\\sum_{\\ell \\in S_j}Y_\\ell(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_\\ell)}\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)dt\\right)\\] \\[\\times \\prod_j\\prod_{i\\in S_j}\\prod_t \\left(Y_i(t)\\frac{\\sum_{\\ell\\in S_j}dN_\\ell(t)}{\\sum_{\\ell \\in S_j}Y_\\ell(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_\\ell)}\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\right)^{dN_i(t)},\\] where, in the first line, factors depending on \\(\\mathbf{\\beta}\\) cancel, and the remaining factors depending on \\(\\mathbf{\\beta}\\) are exactly (3.21).\n\n\nExercise 3.5 (*)\nConsider the situation in Section 3.4 with categorical covariates and show that the likelihood is given by \\[\n\\prod_{\\ell=1}^L\\prod_{\\mathbf{c}\\in {\\cal C}}(\\alpha_{0\\ell}\\theta_{\\mathbf{c}})^{N_{\\ell \\mathbf{c}}}\\exp(-\\alpha_{0\\ell}\\theta_{\\mathbf{c}} Y_{\\ell \\mathbf{c}}).\n\\]\nThe starting point is the Jacod formula where factor \\(i\\) is \\[\\prod_t (Y_i(t)\\alpha_i(t))^{dN_i(t)}\\exp(-\\int_0^{\\infty}Y_i(t)\\alpha_i(t)dt),\\] and when \\(\\alpha_i(t)=\\alpha_{0\\ell}\\mathbf{\\theta}_{\\mathbf{c}}\\) if \\(t\\in [s_{\\ell -1},s_{\\ell})\\) and \\(i\\) has covariates in category \\(\\mathbf{c}\\), this is proportional to \\[\\prod_{\\ell=1}^L(\\alpha_{0\\ell}\\mathbf{\\theta}_{\\mathbf{c}})^{N_{\\ell\\mathbf{c}}^i}\\exp(-\\sum_{\\ell=1}^LY_{\\ell\\mathbf{c}}^i\\mathbf{\\theta}_{\\mathbf{c}}),\\] where \\(N_{\\ell\\mathbf{c}}^i\\) is the number of events for subject \\(i\\) in \\([s_{\\ell -1},s_{\\ell})\\) and \\(Y_{\\ell\\mathbf{c}}^i\\) the time spent by subject \\(i\\) in \\([s_{\\ell -1},s_{\\ell})\\). Collecting factors from all subjects with covariates in category \\(\\mathbf{c}\\), the joint likelihood contribution from those subjects is \\[\\prod_{\\ell=1}^L(\\alpha_{0\\ell}\\mathbf{\\theta}_{\\mathbf{c}})^{N_{\\ell\\mathbf{c}}}\\exp(-\\sum_{\\ell=1}^LY_{\\ell\\mathbf{c}}\\mathbf{\\theta}_{\\mathbf{c}}),\\] where \\(N_{\\ell\\mathbf{c}}\\) and \\(Y_{\\ell\\mathbf{c}}\\) are the sums over those subjects of the individual values of \\(N_{\\ell\\mathbf{c}}^i\\) and \\(Y_{\\ell\\mathbf{c}}^i\\), respectively. The total likelihood is now the product over all categories \\(\\mathbf{c}\\).\n\n\nExercise 3.6 (*)\nDerive the estimating equations for the model studied in Section 3.8.4\nThe arguments are, in fact, identical to those used for the stratified Cox model in Exercise 3.4. The only difference appears due to the fact that the likelihood does not factorize over types, \\(\\nu\\).\n\n\nExercise 3.7\nConsider the Cox model for stroke-free survival in the Copenhagen Holter study including the covariates ESVEA, sex, age, and systolic blood pressure (Exercise 4 in Chapter 2). Test, using time-dependent covariates, whether the effects of these covariates may be described as time-constant hazard ratios.\n\nRSAS\n\n\nThe data should be loaded as chs_data and we convert the time variables to years and add a time and censoring variable for the composite end-point stroke-free survival.\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\nchs_data <- chs_data %>% mutate(timeafib = timeafib/365.25,\n                                timestroke = timestroke/365.25,\n                                timedeath = timedeath/365.25,\n                                timestrokeordeath = ifelse(stroke == 1, timestroke, timedeath),\n                                strokeordeath = ifelse(stroke ==1, 1, death))\n\n\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(survminer) #Plots of survival curves\ntheme_set(theme_bw())\n\n\nWe fit the Cox proportional hazards model for stroke-free survival including the covariates ESVEA, sex, age, and systolic blood pressure using the function coxph from the survival package (just like we did in exercise 2.4.1).\n\n\nCode show/hide\n# Cox model for stroke-free survival including ESVEA, sex, age and systolic blood pressure\ncox241 <- coxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + sbp , data = chs_data, method = \"breslow\")\nsummary(cox241)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp, data = chs_data, method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.318284  1.374767 0.152587 2.086   0.0370 *  \nsex   0.577585  1.781731 0.126946 4.550 5.37e-06 ***\nage   0.076658  1.079673 0.009362 8.189 2.64e-16 ***\nsbp   0.005152  1.005165 0.002438 2.113   0.0346 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.375     0.7274     1.019     1.854\nsex       1.782     0.5613     1.389     2.285\nage       1.080     0.9262     1.060     1.100\nsbp       1.005     0.9949     1.000     1.010\n\nConcordance= 0.672  (se = 0.016 )\nLikelihood ratio test= 99.45  on 4 df,   p=<2e-16\nWald test            = 104.1  on 4 df,   p=<2e-16\nScore (logrank) test = 110  on 4 df,   p=<2e-16\n\n\nTo investigate if the covariate effects may be described as time-constant hazard ratios, we will compare our model from 2.4.1 with models where one of the covariates is allowed to have a time-dependent effect.\nThis can be done using the time-transform functionality of coxph. To make a time-dependent variable the covariate, x, is added together with tt(x) on the right side of ‘~’ in the formula argument. Then tt = function(x,t,…) should be followed by the desired function format of the covariate, x, and time, t. It is also possible to have a function with multiple terms with the use of cbind.\nWe will investigate the assumption of a time-constant effect of ESVEA by fitting a model with a time-dependent effect of ESVEA allowing for a change in the effect after t=5 years. Multiple other forms of the function could be chosen but we will only illustrate one choice for each covariate.\n\n\nCode show/hide\n#Cox model including a time-dependent effect of ESVEA\ncox37_esvea <- coxph(Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + sbp + tt(esvea), tt = function(x,t,...) x*(t > 5), data = chs_data, method = \"breslow\")\nsummary(cox37_esvea)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp + tt(esvea), data = chs_data, tt = function(x, \n    t, ...) x * (t > 5), method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n               coef exp(coef)  se(coef)      z Pr(>|z|)    \nesvea      0.778676  2.178587  0.247005  3.152  0.00162 ** \nsex        0.571769  1.771397  0.127045  4.501 6.78e-06 ***\nage        0.076059  1.079027  0.009374  8.114 4.89e-16 ***\nsbp        0.005220  1.005234  0.002437  2.142  0.03220 *  \ntt(esvea) -0.703300  0.494949  0.312607 -2.250  0.02446 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n          exp(coef) exp(-coef) lower .95 upper .95\nesvea        2.1786     0.4590    1.3425    3.5353\nsex          1.7714     0.5645    1.3809    2.2723\nage          1.0790     0.9268    1.0594    1.0990\nsbp          1.0052     0.9948    1.0004    1.0100\ntt(esvea)    0.4949     2.0204    0.2682    0.9134\n\nConcordance= 0.674  (se = 0.016 )\nLikelihood ratio test= 104.4  on 5 df,   p=<2e-16\nWald test            = 110.3  on 5 df,   p=<2e-16\nScore (logrank) test = 118.2  on 5 df,   p=<2e-16\n\n\nWe estimate the coefficient of the time-dependent effect of ESVEA to be \\(\\beta_{ESVEA}(t) = 0.7787 - 0.7033 \\cdot I(t >5)\\).The model thus predicts a decrease in the effect of having ESVEA on the stroke-free survival hazard after 5 years.\nWe cannot compare two models using the anova function when one of the models contains a tt function. Thus, we must manually calculate the likelihood ratio test. We can use the logLik method for a Cox model to extract the log likelihood values. The corresponding p-value is calculated using the chi-squared distribution with, in this case, 1 degree of freedom. The chi-squared distribution function is implemented as pchisq.\n\n\nCode show/hide\n# Likelihood ratio score\n(LR <- -2*(logLik(cox241)-logLik(cox37_esvea))[1])\n\n\n[1] 4.988536\n\n\nCode show/hide\n# Corresponding p-value\n(pval <- 1 - pchisq(LR, df = 1))\n\n\n[1] 0.02551579\n\n\nWe get a likelihood ratio test statistic of 4.9885 and a p-value of 0.0255. Thus, allowing ESVEA to have a time-dependent effect is significant. The same conclusion is arrived at when looking at the Wald test for the time-dependent variable\nLikewise, we can investigate the assumption of time-constant effect of sex by fitting a model with \\(\\beta_{sex}(t) = \\beta_1\\log(t) + \\beta_2\\) and compare it with the model from 2.4.1 using a likelihood ratio test.\n\n\nCode show/hide\n#Cox model including time-dependent effect of sex \ncox37_sex <- coxph(Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + sbp + tt(sex), tt = function(x,t,...) x*log(t), data = chs_data, method = \"breslow\")\nsummary(cox37_sex)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp + tt(sex), data = chs_data, tt = function(x, \n    t, ...) x * log(t), method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n             coef exp(coef)  se(coef)      z Pr(>|z|)    \nesvea    0.317259  1.373358  0.152637  2.079   0.0377 *  \nsex      0.678261  1.970448  0.320259  2.118   0.0342 *  \nage      0.076592  1.079601  0.009364  8.179 2.85e-16 ***\nsbp      0.005159  1.005172  0.002437  2.116   0.0343 *  \ntt(sex) -0.053603  0.947808  0.156076 -0.343   0.7313    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nesvea      1.3734     0.7281     1.018     1.852\nsex        1.9704     0.5075     1.052     3.691\nage        1.0796     0.9263     1.060     1.100\nsbp        1.0052     0.9949     1.000     1.010\ntt(sex)    0.9478     1.0551     0.698     1.287\n\nConcordance= 0.671  (se = 0.016 )\nLikelihood ratio test= 99.56  on 5 df,   p=<2e-16\nWald test            = 104.2  on 5 df,   p=<2e-16\nScore (logrank) test = 110.2  on 5 df,   p=<2e-16\n\n\nWe estimate the coefficient of the time-dependent effect of sex to be \\(\\beta_{sex}(t) = -0.0536 \\log(t) + 0.6783\\).\nThen, we can compare this model with the one from exercise 2.4.1 with a likelihood ratio test.\n\n\nCode show/hide\n#LRT\n(LR <- -2*(logLik(cox241)-logLik(cox37_sex))[1])\n\n\n[1] 0.1193583\n\n\nCode show/hide\n# Corresponding p-value\n(pval <- 1 - pchisq(LR, df = 1))\n\n\n[1] 0.7297315\n\n\nWe get a likelihood ratio test statistic of 0.1194 and a p-value of 0.7297. Thus, we do not find evidence against the assumption of a time-constant effect of sex. The Wald test leads to the same conclusion.\nWe will check the assumption of a time-constant effect of age by including an indicator of whether the current age is greater than 70, i.e. \\(\\beta_{age}(t) = \\beta_1 + \\beta_2\\cdot I((age + t) > 70)\\).\n\n\nCode show/hide\n#Cox model including a time-dependent effect of age\ncox37_age <- coxph(Surv(timestrokeordeath, strokeordeath) ~  esvea + sex + age + sbp + tt(age), tt = function(x,t,...) {cur_age <- (x + t) \ncbind(age70=1*(cur_age>70))}, data = chs_data, method = \"breslow\")\nsummary(cox37_age)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp + tt(age), data = chs_data, tt = function(x, \n    t, ...) {\n    cur_age <- (x + t)\n    cbind(age70 = 1 * (cur_age > 70))\n}, method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n            coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea   0.311458  1.365414 0.152621 2.041   0.0413 *  \nsex     0.593524  1.810357 0.127159 4.668 3.05e-06 ***\nage     0.058507  1.060252 0.014310 4.089 4.34e-05 ***\nsbp     0.005063  1.005076 0.002446 2.069   0.0385 *  \ntt(age) 0.375266  1.455379 0.223680 1.678   0.0934 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nesvea       1.365     0.7324    1.0124     1.842\nsex         1.810     0.5524    1.4110     2.323\nage         1.060     0.9432    1.0309     1.090\nsbp         1.005     0.9950    1.0003     1.010\ntt(age)     1.455     0.6871    0.9388     2.256\n\nConcordance= 0.671  (se = 0.016 )\nLikelihood ratio test= 102.3  on 5 df,   p=<2e-16\nWald test            = 103.5  on 5 df,   p=<2e-16\nScore (logrank) test = 111.1  on 5 df,   p=<2e-16\n\n\nWe estimate the coefficient of the time-dependent effect of age to be \\(\\beta_{age}(t) = 0.0585 + 0.3753 \\cdot I(age + t > 70)\\).\n\n\nCode show/hide\n#LRT\n(LR <- -2*(logLik(cox241)-logLik(cox37_age))[1])\n\n\n[1] 2.819952\n\n\nCode show/hide\n#Corresponding p-value\n(pval <- 1 - pchisq(LR, df = 1))\n\n\n[1] 0.09309917\n\n\nWe get a likelihood ratio test statistic of 2.8206 and a p-value of 0.0931. Thus, there is no evidence against the assumption of a time-constant effect of age.\nLastly, we will check the assumption of time-constant effect of systolic blood pressure. We will investigate a model where \\(\\beta_{sbp}(t) = \\beta_1\\cdot t + \\beta_2\\).\n\n\nCode show/hide\n#Cox model including time-dependent effect of systolic blood pressure\ncox37_sbp <- coxph(Surv(timestrokeordeath, strokeordeath) ~ age + esvea + sex + sbp + tt(sbp), tt = function(x,t,...) x*t, data = chs_data, method = \"breslow\")\nsummary(cox37_sbp)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ age + \n    esvea + sex + sbp + tt(sbp), data = chs_data, tt = function(x, \n    t, ...) x * t, method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n              coef  exp(coef)   se(coef)      z Pr(>|z|)    \nage      7.665e-02  1.080e+00  9.363e-03  8.187 2.67e-16 ***\nesvea    3.184e-01  1.375e+00  1.526e-01  2.086    0.037 *  \nsex      5.776e-01  1.782e+00  1.269e-01  4.550 5.37e-06 ***\nsbp      5.321e-03  1.005e+00  5.354e-03  0.994    0.320    \ntt(sbp) -2.107e-05  1.000e+00  5.960e-04 -0.035    0.972    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nage         1.080     0.9262    1.0600     1.100\nesvea       1.375     0.7273    1.0194     1.854\nsex         1.782     0.5613    1.3892     2.285\nsbp         1.005     0.9947    0.9948     1.016\ntt(sbp)     1.000     1.0000    0.9988     1.001\n\nConcordance= 0.672  (se = 0.016 )\nLikelihood ratio test= 99.45  on 5 df,   p=<2e-16\nWald test            = 104.1  on 5 df,   p=<2e-16\nScore (logrank) test = 110  on 5 df,   p=<2e-16\n\n\nWe get an estimated time-dependent coefficient for the effect of systolic blood pressure of \\(\\beta_{sbp}(t) = 5.321 \\cdot 10^{-3} - 2.107 \\cdot 10^{-5} \\cdot t\\).\n\n\nCode show/hide\n#LRT\n(LR <- -2*(logLik(cox241) - logLik(cox37_sbp))[1])\n\n\n[1] 0.001249678\n\n\nCode show/hide\n#Corresponding p-value\n(pval <- 1 - pchisq(LR, df = 1))\n\n\n[1] 0.9718\n\n\nWe get a likelihood ratio test statistic of 0.0012 and a corresponding p-value of 0.9718 Thus, we cannot reject the hypothesis that the effect of systolic blood pressure is time-constant.\n\n\n\n\nCode show/hide\n* We fit the Cox proportional hazards model for stroke-free survival including the covariates ESVEA, sex, age, and \n  systolic blood pressure like we did in exercise 2.4.1.;\n  \ntitle \"3.7: Cox model from exercise 2.4.1\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp;\nrun;\n\n* To investigate if the covariates may be described as time-constant hazard ratios, we will compare our model from exercise 2.4.1 \n  with models where one of the covariates, Z, is assumed time-dependent, i.e. Z(t) = Z*f(t) for some function t of time.;\n\n* We will investigate the assumption of a time-constant effect of ESVEA by fitting a Cox model with a time-dependent effect of ESVEA \n  described by Z(t) = x1*I(t > 5 years) + x2. Multiple other forms of the function could be chosen but we will only illustrate one \n  choice of f(t) for each covariate.;\n\ntitle \"3.7: Cox model with time-dependent effect of ESVEA\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp esveat0;\n    esveat0 = (esvea=1)*(timestrokeordeath > 5);\nrun;\n\n* We estimate the coefficient of the time-dependent effect of ESVEA to be Z(t) = 0.7788 - 0.0734*I(t > 5). The model thus predicts a decrease \n  in the effect of having ESVEA on the stroke-free survival hazard after 5 years.;\n\n* We can then compare the model with the one from exercise 2.4.1 using a likelihood ratio test. This is done by comparing the likelihood \n  scores for the two models and then calculating the p-value using the Chi-square distribution with 1 degrees of freedom. The likelihood \n  scores are found in the 'Model Fit Statistics' table;\n\ntitle \"3.7: Likelihood ratio test investigating the assumption of a time-constant effect of ESVEA\";\ndata p;\n    chi2=3457.955-3452.967;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n*  We get a Chi-square statistic of 4.988 on 1 degree of freedom and a correpsonding p-value of 0.0255. Thus, including ESVEA as a time-\n   dependent covariate is significant on a 0.05 significance level. The same conclusion appears when studying the Wald test.; \n\n* Likewise, we can investigate the assumption of time-constant effect of sex by fitting a Cox model with Z(t) = x1*log(t) + x2.; \n\ntitle \"3.7: Cox model with a time-dependent effect of sex\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp sexlogtime;\n    sexlogtime = (sex=1)*log(timestrokeordeath);\nrun;\n\n* We estimate the coefficient of the time-dependent effect of sex to be Z(t) = -0.0536*log(t) + 0.6783.;\n\n*Then, we can compare this model with the one from exercise 2.4.1 with a likelihood ratio test.;\n\ntitle \"3.7: Likelihood ratio test investigating the assumption of a time-constant effect of sex\";\ndata p;\n    chi2=3457.955-3457.836;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.119 on 1 degree of freedom and a correpsonding p-value of 0.7301. We conclude that we do not have \n  evidence against the assumption of a time-constant hazard ratio for sex. Same conclusion for the Wald test.;\n\n* We will check the assumption of a time-constant effect of age by including an indicator of whether the current age is greater than 70, \n  i.e. Z(t) = x1 + x2*I((age + t) > 70), in our Cox model.;\n\ntitle \"3.7: Cox model with a time-dependent effect of age\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp aget0;\n    aget0 = ((age + timestrokeordeath) > 70);\nrun;\n\n* We estimate the coefficient of the time-dependent effect of age to be  Z(t) = 0.0585  +  0.3753*I(age + t > 70).;\n\n* Then, we can compare this model with the one from exercise 2.4.1 using a likelihood ratio test.;\n\ndata p;\n    chi2=3457.955-3455.135;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 2.82 on 1 degree of freedom and a correpsonding p-value of 0.0931. Thus, our inclusion of age as a\n  time-dependent covariate does not provide evidence against the assumption of a time-constant hazard ratio of age.\n  Same conclusion for the Wald test.;\n\n* Lastly, we will check the assumption of time-constant effect of systolic blood pressure. We will investigate a model where \n  Z(t) = x1* + x2.;\n\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp sbptime;\n    sbptime = sbp*timestrokeordeath;\nrun;\n\n* We get an estimated time-dependent coefficient for the effect of systolic blood pressure of Z(t) = 5.32*10^{-3} - 2.11*10^{-5}*t.;\n\n* Then, we can compare this model with the one from exercise 2.4.1 using a likelihood ratio test.;\n\ndata p;\n    chi2=3457.955-3457.954;\n    p=1-probchi(chi2,1);\nproc print;\nrun;\n\n* We get a Chi-square statistic of 0.001 on 1 degree of freedom and a correpsonding p-value of 0.9748.Thus, we do not have evidence \n  against the assumption of a time-constant effect of systolic blood pressure.  Same conclusion for the Wald test.;\n\n\n\n\n\n\n\nExercise 3.8\nConsider the Cox model for stroke-free survival in the Copenhagen Holter study including the covariates ESVEA, sex, age, and systolic blood pressure. Add to that model the time-dependent covariate I(AF \\(\\leq\\) t). How does this affect the effect of ESVEA?.\nSince the following exercises investigate the effect of AF on stroke-free survival, we will neglect diagnoses of AF after a stroke. Furthermore, we will replace the NA’s in timeafib with 15.5, i.e. longer than any observation time in the study.\n\nRSAS\n\n\n\n\nCode show/hide\nchs_data <- chs_data %>%  \n            mutate(afib = ifelse(afib == 1 & timeafib > timestrokeordeath, 0, afib),\n                   #timestroke = ifelse(stroke == 1, timestroke, timedeath),\n                   timeafib = ifelse(afib == 1, timeafib, 15.5))\n\n\nThen we can include the time-dependent covariate I(AF \\(\\leq\\) t) using the tt functionality described in exercise 3.7.\n\n\nCode show/hide\n#Cox model including time-dependent covariate I(AF <= t)\ncox38 <- coxph(Surv(timestrokeordeath, strokeordeath) ~ age + esvea + sex + sbp + tt(timeafib), tt = function(x,t,...)\n  1*(x <= t), data = chs_data, method = \"breslow\")\nsummary(cox38)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ age + \n    esvea + sex + sbp + tt(timeafib), data = chs_data, tt = function(x, \n    t, ...) 1 * (x <= t), method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n                 coef exp(coef) se(coef)     z Pr(>|z|)    \nage          0.075481  1.078403 0.009389 8.039 9.05e-16 ***\nesvea        0.225996  1.253571 0.154934 1.459   0.1447    \nsex          0.568302  1.765267 0.127591 4.454 8.42e-06 ***\nsbp          0.004936  1.004948 0.002441 2.022   0.0432 *  \ntt(timeafib) 0.977881  2.658815 0.192421 5.082 3.74e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n             exp(coef) exp(-coef) lower .95 upper .95\nage              1.078     0.9273    1.0587     1.098\nesvea            1.254     0.7977    0.9253     1.698\nsex              1.765     0.5665    1.3747     2.267\nsbp              1.005     0.9951    1.0002     1.010\ntt(timeafib)     2.659     0.3761    1.8235     3.877\n\nConcordance= 0.683  (se = 0.016 )\nLikelihood ratio test= 120.2  on 5 df,   p=<2e-16\nWald test            = 131.5  on 5 df,   p=<2e-16\nScore (logrank) test = 143.4  on 5 df,   p=<2e-16\n\n\nWe get a hazard ratio of exp(0.226) = 1.2536 for ESVEA with a Wald test of 1.459 and a corresponding p-value of 0.1447. Thus, having ESVEA is (insignificantly) associated with a higher rate of stroke or death.\nThe effect of being diagnosed with AF before time t is highly significant and associated with a much higher rate for the composite end-point compared to those not diagnosed with AF at time t.\n\n\n\n\nCode show/hide\n* Since the following exercises investigates the effect of AF on stroke-free survival, we will neglect diagnoses of AF \n  after a stroke. ;\n\ndata chs_data;\n    set chs_data;\n    if afib = 1 and timeafib > timestrokeordeath then afib = 0;\nrun;\n\n* We will include a time-dependent covariate I(AF <= t) to our Cox model.;\n\ntitle \"3.8: Cox model including the time-dependent covariate I(AF < t)\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0) = esvea sex age sbp timeaf;\n    timeaf = 0;\n    if afib = 1 and timeafib <= timestrokeordeath then timeaf=1;\nrun;\n\n* We get a hazard ratio of 1.254 for ESVEA with a Chi-square statistic of 2.1277 on 1 degree of freedom and a correpsonding p-value of \n  0.1447. Thus, having ESVEA is associated with shorter stroke-free survival. However, this effect is not significant!; \n\n* The effect of being diagnosed with AF before time t is highly significant and associated with a much smaller rate of\n  stroke-free survival compared to those not diagnosed with AF at time t.;\n\n\n\n\n\n\n\nExercise 3.9\nConsider the Cox model for stroke-free survival in the Copenhagen Holter study including the covariates ESVEA, sex, age, and systolic blood pressure. Add to that model, incorrectly, the covariate AF – now considered as time-fixed. How does this affect the AF-effect?.\n\nRSAS\n\n\nWe will now fit a model where AF is considered a time-fixed covariate which will lead to so-called immortal time bias.\n\n\nCode show/hide\ncox39 <- coxph(Surv(timestrokeordeath, strokeordeath) ~ age + esvea + sex + sbp + afib, data = chs_data, method = \"breslow\")\nsummary(cox39)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ age + \n    esvea + sex + sbp + afib, data = chs_data, method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n           coef exp(coef)  se(coef)      z Pr(>|z|)    \nage    0.077012  1.080055  0.009372  8.217  < 2e-16 ***\nesvea  0.326924  1.386696  0.153014  2.137   0.0326 *  \nsex    0.581483  1.788689  0.127007  4.578 4.69e-06 ***\nsbp    0.005266  1.005280  0.002455  2.145   0.0319 *  \nafib  -0.153165  0.857988  0.186411 -0.822   0.4113    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nage       1.080     0.9259    1.0604     1.100\nesvea     1.387     0.7211    1.0274     1.872\nsex       1.789     0.5591    1.3945     2.294\nsbp       1.005     0.9947    1.0005     1.010\nafib      0.858     1.1655    0.5954     1.236\n\nConcordance= 0.673  (se = 0.016 )\nLikelihood ratio test= 100.2  on 5 df,   p=<2e-16\nWald test            = 105  on 5 df,   p=<2e-16\nScore (logrank) test = 111  on 5 df,   p=<2e-16\n\n\nWe get a hazard ratio of \\(\\exp(-0.1532) = 0.8580\\) for being diagnosed with AF. The effect of being diagnosed with AF in this model is thus associated with a lower rate of the composite end-point compared to those not diagnosed. The associated Wald test is -0.822 and the p-value is 0.4113.\nThis contradicts the result from exercise 3.8 where AF was (correctly) included as an time-dependent covariate.\n\n\n\n\nCode show/hide\n* We will include AF as a time-fixed covariate to our Cox model which will lead to so-called immortal time bias.;\n\ntitle \"3.9: Cox model including AF as a time-fixed covariate\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)= esvea sex age sbp afib;\nrun;\n\n* We get a hazard ratio of 0.858 for being diagnosed with AF. The effect of being diagnosed with AF during the study is associated \n  with a slightly shorter expected stroke-free survival compared to those not diagnosed. However we get a Chi-square statistic of \n  0.06751 on 1 degree and the p-value is 0.4113. Thus, the effect is not significant.;\n\n* This contradicts the result from exercise 3.7 where AF was (correctly) included as an time-dependent covariate.;\n\n\n\n\n\n\n\nExercise 3.10\nConsider an illness-death model for the Copenhagen Holter study with states ‘0: Alive without AF or stroke’, ‘1: Alive with AF and no stroke’, ‘2: Dead or stroke’, see Figures 1.3 and 1.7.\n\n1.\nFit separate Cox models for the rates of the composite end-point for subjects without or with AF, i.e. for the 0->2 and 1->2 transitions including the covariates ESVEA, sex, age, and systolic blood pressure. The time variable in both models should be time since recruitment.\n\nRSAS\n\n\nWe will fit two separate Cox models for the 0->2 and 1->2 transitions including ESVEA, sex, age, and systolic blood pressure using the procedure described in Section 3.8.\nWe must first add two new time variables, timeoutof0 and timeoutof1 which will indicate time last seen in state 0 and state 1, respectively, and a new censoring variable, strokeordeath0 indicating whether a subject transited to state 2 directly from state 0.\n\n\nCode show/hide\nchs_data <- chs_data %>%  \n            mutate(timeoutof0 = ifelse(afib == 1, timeafib, timestrokeordeath),\n                   strokeordeath0 = ifelse(afib == 1, 0, strokeordeath),\n                   timeoutof1 = ifelse(afib ==1 & timeafib == timestrokeordeath, timestrokeordeath + 0.5/365.25, timestrokeordeath))\n\n\nThen, we can make the duplicated data set. All potential 0->2 transitions will be represented by a row where stratum is 0 whereas potential 1->2 transitions will have stratum equal to 1; entrytime and time will denote the time of entry and the last time seen in state 0 or 1 while status indicates whether a stroke or death occurred at time time. Furthermore, the covariates associated with the 0->2 transition are denoted esvea0, sex0, age0, and sbp0 while the covariates associated with the 1->2 transition are denoted esvea1, sex1, age1, and sbp1.\n\n\nCode show/hide\n# Data set for 0 -> 2 transition\ndouble0 <- chs_data %>% mutate(stratum = 0,\n                               entrytime = 0,\n                               time = timeoutof0,\n                               status = strokeordeath0,\n                               sex0 = sex,\n                               age0 = age,\n                               esvea0 = esvea,\n                               sbp0 = sbp,\n                               sex1 = 0,\n                               age1 = 0, \n                               esvea1 = 0,\n                               sbp1 = 0)\n\n# Data set for 1 -> 2 transition\ndouble1 <- chs_data %>% filter(afib == 1) %>%\n                        mutate(stratum = 1,\n                               entrytime = timeafib,\n                               time = timeoutof1,\n                               status = strokeordeath,\n                               sex0 = 0,\n                               age0 = 0,\n                               esvea0 = 0,\n                               sbp0 = 0,\n                               sex1 = sex,\n                               age1 = age, \n                               esvea1 = esvea,\n                               sbp1 = sbp)\n\n# Duplicated data set as described in section 3.8.1\ndouble <- as.data.frame(rbind(double0, double1))                          \n\n\nFinally, we will use coxph to fit the two separate Cox models; entrytime, time and status are given to the Surv object and strata(stratum), esvea0, sex0, age0, sbp0, esvea1, sex1, age1, and sbp1 are included on the right side of ‘~’.\n\n\nCode show/hide\n# Different covariate effects and non-proportional hazards\ncox3101 <- coxph(Surv(entrytime, time, status) ~ strata(stratum) + esvea0 + sex0 + age0 + sbp0 + esvea1 + sex1 + age1 + sbp1, data = double, ties = \"breslow\")\nsummary(cox3101)\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status) ~ strata(stratum) + \n    esvea0 + sex0 + age0 + sbp0 + esvea1 + sex1 + age1 + sbp1, \n    data = double, ties = \"breslow\")\n\n  n= 745, number of events= 285 \n   (3 observations deleted due to missingness)\n\n            coef exp(coef)  se(coef)      z Pr(>|z|)    \nesvea0  0.340371  1.405468  0.164122  2.074   0.0381 *  \nsex0    0.638729  1.894071  0.135913  4.700 2.61e-06 ***\nage0    0.073487  1.076254  0.009901  7.422 1.15e-13 ***\nsbp0    0.004901  1.004913  0.002608  1.879   0.0602 .  \nesvea1 -0.215942  0.805782  0.458157 -0.471   0.6374    \nsex1    0.132627  1.141824  0.400110  0.331   0.7403    \nage1    0.089863  1.094024  0.033608  2.674   0.0075 ** \nsbp1    0.003389  1.003395  0.007783  0.435   0.6632    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nesvea0    1.4055     0.7115    1.0189     1.939\nsex0      1.8941     0.5280    1.4511     2.472\nage0      1.0763     0.9291    1.0556     1.097\nsbp0      1.0049     0.9951    0.9998     1.010\nesvea1    0.8058     1.2410    0.3283     1.978\nsex1      1.1418     0.8758    0.5212     2.501\nage1      1.0940     0.9141    1.0243     1.169\nsbp1      1.0034     0.9966    0.9882     1.019\n\nConcordance= 0.671  (se = 0.017 )\nLikelihood ratio test= 94.23  on 8 df,   p=<2e-16\nWald test            = 98.8  on 8 df,   p=<2e-16\nScore (logrank) test = 104.1  on 8 df,   p=<2e-16\n\n\n\n\n\n\nCode show/hide\n* We will fit two separate Cox models for 0->2/3 and 1->2/3 transitions including ESVEA, sex, age, and systolic blood pressure using \n  the procedure described in section 3.8. Thus, we will first make the duplicated data set.\n\n  We must first add two new time variables, 'timeoutof0' and 'timeoutof1' which will indicate time last seen in state 0 and state 1,\n  respectively, and a new censoring variable, 'strokeordeath0' indicating whether a subject transitioned to state 2 or 3 directly \n  from state 0.;\n\ndata chs_data;\n    set chs_data;\n    timeoutof0 = timestrokeordeath;\n    if afib = 1 then timeoutof0 = timeafib;\n    strokeordeath0 = strokeordeath;\n    if afib = 1 then strokeordeath0 = 0;\n    timeoutof1 = timestrokeordeath;\n    if afib = 1 and timeafib = timestrokeordeath then timeoutof1 = timestrokeordeath + 0.5/365.25;\nrun;\n\n\n/* Then, we can make the duplicated data set. All potential 0->2/3 transitions will be represented by a row where 'stratum' is 0\n  whereas potential 1->2/3 transitions will have 'stratum' equal to 1. 'entrytime' and 'time' will denote the time of entry \n  and the last time seen in state 0 or 1 while 'status' indicates whether a stroke or death occurred at time 'time'. Furthermore, \n  the covariates associated with the 0->2/3 transition are denoted 'esvea0', 'sex0', age0', and 'sbp0' while the covariates \n  associated with the 1->2/3 transition are denoted 'esvea1', 'sex1', 'age1', and 'sbp1'.;\n*/\ndata double0;\n    set chs_data;\n    entrytime = 0;\n    time = timeoutof0;\n    status = strokeordeath0;\n    esvea0 = esvea;\n    sex0 = sex;\n    age0 = age;\n    sbp0 = sbp;\n    esvea1 = 0;\n    sex1 = 0;\n    age1 = 0;\n    sbp1 = 0;\n    stratum = 0;\nrun;\n\ndata double1;\n    set chs_data;\n    if afib = 1;\n    entrytime = timeafib;\n    time = timeoutof1;\n    status = strokeordeath;\n    esvea0 = 0;\n    sex0 = 0;\n    age0 = 0;\n    sbp0 = 0;\n    esvea1 = esvea;\n    sex1 = sex;\n    age1 = age;\n    sbp1 = sbp;\n    stratum = 1;\nrun;\n\ndata double;\n    set double0 double1;\nrun;\n\n/*\nFinally, we will use **phreg** to fit the two separate Cox models. 'entrytime', 'time' and 'status' are given to the left of '=' and\nand 'esvea0', 'sex0', 'age0', 'sbp0', 'esvea1', 'sex1', 'age1', and 'sbp1' are included on the right side of '='. Furthermore, 'stratum' \nis given in the strata statement\n*/\n\ntitle \"3.10.1: Separate Cox models for stroke-free survival for subjects\nwith or without AF\";\nproc phreg data = double;\n    strata stratum;\n    model (entrytime, time)*status(0)= esvea0 sex0 age0 sbp0 esvea1 sex1 age1 sbp1; \nrun;\n\n\n\n\n\n\n\n2.\nExamine to what extent a combined model for the two intensities (i.e., possibly with common regression coefficients and/or proportional hazards between the 0->2 and 1->2 transition rates) may be fitted.\n\nRSAS\n\n\nWe will examine whether a model that assumes the same covariate effect for the two transitions describes our data just as well as the model we fitted in exercise 3.10.1.\nThus, we will fit a model where esvea0, sex0, age0, sbp0, esvea1, sex1, age1, and sbp1 are replaced with esvea, sex, age, and sbp.\n\n\nCode show/hide\n# Non-proportional hazards same covariate effects\ncox3102_cov <- coxph(Surv(entrytime, time, status) ~ strata(stratum) + esvea + sex + age + sbp, data = double, ties = \"breslow\")\nsummary(cox3102_cov)\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status) ~ strata(stratum) + \n    esvea + sex + age + sbp, data = double, ties = \"breslow\")\n\n  n= 745, number of events= 285 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.239402  1.270489 0.155198 1.543   0.1229    \nsex   0.570975  1.769993 0.127545 4.477 7.58e-06 ***\nage   0.075759  1.078703 0.009403 8.057 7.80e-16 ***\nsbp   0.004721  1.004732 0.002441 1.934   0.0531 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.270     0.7871    0.9373     1.722\nsex       1.770     0.5650    1.3785     2.273\nage       1.079     0.9270    1.0590     1.099\nsbp       1.005     0.9953    0.9999     1.010\n\nConcordance= 0.67  (se = 0.017 )\nLikelihood ratio test= 89.42  on 4 df,   p=<2e-16\nWald test            = 93.38  on 4 df,   p=<2e-16\nScore (logrank) test = 98.05  on 4 df,   p=<2e-16\n\n\nThen, we can compare this model with the one from exercise 3.10.1 using a likelihood ratio test.\n\n\nCode show/hide\n# Testing whether the effect of the covariate is the same for the two transitions\nanova(cox3101, cox3102_cov, test = \"LRT\")\n\n\nAnalysis of Deviance Table\n Cox model: response is  Surv(entrytime, time, status)\n Model 1: ~ strata(stratum) + esvea0 + sex0 + age0 + sbp0 + esvea1 + sex1 + age1 + sbp1\n Model 2: ~ strata(stratum) + esvea + sex + age + sbp\n   loglik Chisq Df Pr(>|Chi|)\n1 -1624.4                    \n2 -1626.8 4.811  4     0.3072\n\n\nWe get a chi-squared statistic of 4.811 on 4 degrees of freedom and a corresponding p-value of 0.3072. Thus, it seems like the new model with common regression coefficients describes our data as well as the one from exercise 3.10.1.\nWe will now examine the assumption of non-proportional hazards. Thus, we must first fit a Cox model where the hazards for subjects with or without AF are assumed proportional. This is done by including AF as a time-dependent covariate like we did in exercise 3.8.\n\n\nCode show/hide\ncox3102_ph <- coxph(Surv(entrytime, time, status) ~  esvea0 + sex0 + age0 + sbp0 + esvea1 + sex1 + age1 + sbp1 + tt(timeafib), tt = function(x,t,...) 1*(x<t), data = double, ties = \"breslow\")\nsummary(cox3102_ph)\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status) ~ esvea0 + sex0 + \n    age0 + sbp0 + esvea1 + sex1 + age1 + sbp1 + tt(timeafib), \n    data = double, ties = \"breslow\", tt = function(x, t, ...) 1 * \n        (x < t))\n\n  n= 745, number of events= 285 \n   (3 observations deleted due to missingness)\n\n                  coef exp(coef)  se(coef)      z Pr(>|z|)    \nesvea0        0.341970  1.407718  0.164133  2.083  0.03721 *  \nsex0          0.636327  1.889528  0.135926  4.681 2.85e-06 ***\nage0          0.073566  1.076339  0.009898  7.432 1.07e-13 ***\nsbp0          0.004914  1.004926  0.002608  1.884  0.05953 .  \nesvea1       -0.283100  0.753444  0.443362 -0.639  0.52313    \nsex1          0.179135  1.196182  0.406807  0.440  0.65969    \nage1          0.090772  1.095019  0.033689  2.694  0.00705 ** \nsbp1          0.005282  1.005296  0.008090  0.653  0.51380    \ntt(timeafib)  0.200521  1.222040  3.063985  0.065  0.94782    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n             exp(coef) exp(-coef) lower .95 upper .95\nesvea0          1.4077     0.7104  1.020483     1.942\nsex0            1.8895     0.5292  1.447616     2.466\nage0            1.0763     0.9291  1.055660     1.097\nsbp0            1.0049     0.9951  0.999803     1.010\nesvea1          0.7534     1.3272  0.315981     1.797\nsex1            1.1962     0.8360  0.538918     2.655\nage1            1.0950     0.9132  1.025051     1.170\nsbp1            1.0053     0.9947  0.989482     1.021\ntt(timeafib)    1.2220     0.8183  0.003013   495.626\n\nConcordance= 0.683  (se = 0.016 )\nLikelihood ratio test= 125.4  on 9 df,   p=<2e-16\nWald test            = 137.1  on 9 df,   p=<2e-16\nScore (logrank) test = 158.9  on 9 df,   p=<2e-16\n\n\nThen the baseline hazards from the Cox model fitted in exercise 3.10.1 are plotted against each other (solid line). Furthermore, a (dashed) straight line through (0,0) with a slope equal to the hazard ratio for the time-dependent covariate AF is added to the plot.\n\n\nCode show/hide\n#Cumulative hazard for subjects without AF\nfrom0_haz <- rbind(c(0,0),subset(basehaz(cox3101, centered = FALSE), strata == \"stratum=0\")[,1:2])\ncolnames(from0_haz) <- c(\"haz0\", \"time\")\n\n#Cumulative hazard for subjects with AF\nfrom1_haz <- rbind(c(0,0),subset(basehaz(cox3101, centered = FALSE), strata == \"stratum=1\")[,1:2])\ncolnames(from1_haz) <- c(\"haz1\", \"time\")\n\n#Data frame with time column and both hazards\nph_data <- merge(from0_haz, from1_haz, all = TRUE)\nph_data <- ph_data %>% fill(haz0,haz1)\n\n#Plotting the hazards against each other\nggplot(data = ph_data) + geom_step(aes(haz0, haz1)) + geom_abline(aes(intercept = 0, slope = 1.222040), linetype = \"dashed\") + xlab(\"Cumulative hazard for subjects without AF\") + ylab(\"Cumulative hazard for subjects with AF\")\n\n\n\n\n\nThe model assuming proportional hazards does not seem to fit the data well, since the dashed straight line does not coincide nicely with the solid curve.\nWe now investigate this further by adding a (linear) time-dependent effect of afib.\n\n\nCode show/hide\ncox3103_ph <- coxph(Surv(entrytime, time, status) ~  esvea0 + sex0 + age0 + sbp0 + esvea1 + sex1 + age1 + sbp1 + tt(timeafib), tt = function(x,t,...) cbind(af=1*(x<t), taf=1*(x<t)*(t-x)), data = double, ties = \"breslow\")\nsummary(cox3103_ph)\n\n\nCall:\ncoxph(formula = Surv(entrytime, time, status) ~ esvea0 + sex0 + \n    age0 + sbp0 + esvea1 + sex1 + age1 + sbp1 + tt(timeafib), \n    data = double, ties = \"breslow\", tt = function(x, t, ...) cbind(af = 1 * \n        (x < t), taf = 1 * (x < t) * (t - x)))\n\n  n= 745, number of events= 285 \n   (3 observations deleted due to missingness)\n\n                     coef exp(coef)  se(coef)      z Pr(>|z|)    \nesvea0           0.343335  1.409642  0.164130  2.092  0.03645 *  \nsex0             0.637169  1.891119  0.135922  4.688 2.76e-06 ***\nage0             0.073679  1.076462  0.009898  7.444 9.75e-14 ***\nsbp0             0.004925  1.004937  0.002607  1.889  0.05891 .  \nesvea1          -0.148546  0.861961  0.442120 -0.336  0.73688    \nsex1             0.224451  1.251636  0.402565  0.558  0.57715    \nage1             0.092251  1.096640  0.032720  2.819  0.00481 ** \nsbp1             0.005316  1.005330  0.007869  0.676  0.49936    \ntt(timeafib)af   0.442310  1.556298  2.888679  0.153  0.87830    \ntt(timeafib)taf -0.121806  0.885320  0.067670 -1.800  0.07186 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n                exp(coef) exp(-coef) lower .95 upper .95\nesvea0             1.4096     0.7094  1.021882     1.945\nsex0               1.8911     0.5288  1.448845     2.468\nage0               1.0765     0.9290  1.055781     1.098\nsbp0               1.0049     0.9951  0.999815     1.010\nesvea1             0.8620     1.1601  0.362372     2.050\nsex1               1.2516     0.7990  0.568610     2.755\nage1               1.0966     0.9119  1.028521     1.169\nsbp1               1.0053     0.9947  0.989943     1.021\ntt(timeafib)af     1.5563     0.6426  0.005411   447.653\ntt(timeafib)taf    0.8853     1.1295  0.775353     1.011\n\nConcordance= 0.683  (se = 0.016 )\nLikelihood ratio test= 129.1  on 10 df,   p=<2e-16\nWald test            = 144.8  on 10 df,   p=<2e-16\nScore (logrank) test = 171.1  on 10 df,   p=<2e-16\n\n\nThis results in a p-value of 0.07186, thus emphasizing that the proportional hazards assumption is questionable.\n\n\n\n\nCode show/hide\n/* We will examine whether a model that assumes the same covariate effect for the two transitions describes our data just as good as \n  the model we fitted in exercise 3.10.1.\n\n Thus, we will fit a model where 'esvea0', 'sex0', 'age0', 'sbp0', 'esvea1', 'sex1', 'age1', and 'sbp1' are replaced with 'esvea', \n  'sex', 'age', and 'sbp'.\n*/\n\ntitle \"3.10.2: Cox model assuming the same effect of the covariates for 0->2/3 and 1->2/3\";\nproc phreg data = double;\n    strata stratum;\n    model (entrytime, time)*status(0) = esvea sex age sbp;\nrun;\n\n/* Then we can compare this model with the one from exercise 3.10.1 with a likelihood ratio test using the scores from the tables \n  'Model Fit Statistics'\n*/\ntitle \"3.10.2: Examining the assumption of same covariate effect\";\ndata p;\n    chi2=3253.556-3248.745;\n    p=1-probchi(chi2,4);\nproc print;\nrun;\n\n* We get a Chi-square statistics of 4.811 on 4 degrees of freedom and a corresponding p-value of 0.3072. Thus, it seems like the \n  new model with common regression coefficients describes our data as good as the one from exercise 3.10.1.;\n\n* We will now examine the assumption of proportional hazards. We must extract the baseline hazards for subjects with or without AF \n  in the model where the hazards are assumed non-proportional. Thus, we fit a model from exercise 3.10.1 once more and specify that \n  all covariates should be 0.;  \n\ndata covstr;\n    esvea0 = 0; sex0 = 0; age0 = 0; sbp0 = 0;\n    esvea1 = 0; sex1 = 0; age1 = 0; sbp1 = 0;\nrun;\n\nproc phreg data = double;\n    strata stratum;\n    model (entrytime, time)*status(0)= esvea0 sex0 age0 sbp0 esvea1 sex1 age1 sbp1;\n    baseline out=hazdata cumhaz = breslow covariates = covstr;\nrun;\n\ndata breslow023;\n    set hazdata; \n    if stratum=0; \n    a023=breslow; \nrun;\n\ndata breslow123;\n    set hazdata;\n    if stratum=1;\n    a123=breslow;\nrun;\n\ndata breslow; \n    merge breslow023 breslow123; \n    by time; \nrun;\n\n* Then, the empty cells of the cumulative hazards are replaced with the previous values;\n\ndata breslow; \nset breslow;\n    by time;\n    retain last1 last2;\n    if a023=. then cumhaz0=last1; if a023 ne . then cumhaz0=a023; \n    if a123=. then cumhaz1=last2; if a123 ne . then cumhaz1=a123;\n    output;\n    last1=cumhaz0; last2=cumhaz1; \nrun;\n\n* Then, we must fit a Cox model where the hazards for subjects with or without AF are assumed proportional. This is done by \n  including AF as an time-dependent covariate like we did in exercise 3.7.;\n\nproc phreg data = double;\n    model (entrytime, time)*status(0) = esvea0 sex0 age0 sbp0 esvea1 sex1 age1 sbp1 timedepaf;\n    timedepaf = 0;\n    if afib = 1 and time > timeafib then timedepaf = 1;\nrun;\n\n* Lastly, the predicted hazard ratio for the time-dependent covariate is added to the data as the slope of a straigth line \n  through (0,0);\n\ndata breslow; \n    set breslow;\n    line=1.222*cumhaz0;\nrun;\n\n\n* Finally, we can check the assumption of proportional hazards by plotting the hazards from the model assuming non-\n  proportional hazards against each other together with the straigth line through (0,0) with a slope equal to the hazard ratio of \n  AF.;\n\ntitle \"3.10.2: Examining the assumption of proportional hazards\";\nproc gplot data=breslow;\n    plot cumhaz1*cumhaz0 line*cumhaz0/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 0.0014 by 0.0001 minor=none label=('Cumulative baseline hazard for subjects without AF');\n    axis2 order=0 to 0.0022 by 0.0001 minor=none label=(a=90 'Cumulative baseline hazard for subjects with AF');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=rl c=blue;\nrun;\n\n*The model assuming proportional hazards does not seem to fit the data well, since the straigth blue line does not coincide nicely \n with the red curve.; \n\n*The proportional hazards assumption may also be investigated using a time-dependent covariate: duration since af.;\n\nproc phreg data = double;\n    model (entrytime, time)*status(0) = esvea0 sex0 age0 sbp0 esvea1 sex1 age1 sbp1 timedepaf duration;\n    timedepaf = 0;\n    if afib = 1 and time > timeafib then timedepaf = 1;\n    duration=0;\n    if timedepaf = 1 then duration = time - timeafib;\nrun;\n\n*This, once more, suggests borderline deviations from proportional hazards.;\n\n\n\n\n\n\n\n\nExercise 3.11\nConsider the data on repeated episodes in affective disorder, Example 1.1.5.\n\n1.\nFit separate gamma frailty models for unipolar and bipolar patients including the covariate ‘number of previous events’ \\(N(t-)\\) assuming (not quite satisfactorily!) that the mortality rate is independent of frailty.\n\nRSAS\n\n\nThe data should be loaded as affective_data\n\n\nCode show/hide\naffective_data <- read.csv(\"data/affective.csv\")\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(mets)\n\n\nWe can fit a gamma frailty model including the number of previous events assuming that the mortality rate is independent of frailty using the coxph function and adding fraily(id) and episode in the formula argument.\n\n\nCode show/hide\n# Fitting a gamma frailty model for patients with unipolar disorder\nfrailty3111_uni <- coxph(Surv(start, stop, status == 1) ~ episode + frailty(id), \n                  method = \"breslow\", \n                  data = subset(affective_data, bip == 0))\nsummary(frailty3111_uni)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ episode + frailty(id), \n    data = subset(affective_data, bip == 0), method = \"breslow\")\n\n  n= 927, number of events= 381 \n\n            coef    se(coef) se2     Chisq  DF    p      \nepisode     0.02813 0.01756  0.01497   2.57  1.00 1.1e-01\nfrailty(id)                          228.73 66.27 9.8e-20\n\n        exp(coef) exp(-coef) lower .95 upper .95\nepisode     1.029     0.9723    0.9937     1.065\n\nIterations: 6 outer, 26 Newton-Raphson\n     Variance of random effect= 0.7084416   I-likelihood = -1535.1 \nDegrees of freedom for terms=  0.7 66.3 \nConcordance= 0.775  (se = 0.016 )\nLikelihood ratio test= 338.1  on 66.99 df,   p=<2e-16\n\n\nThus, we obtain a hazard ratio of \\(\\exp(0.0281) = 1.029\\) for the number of previous episodes for patients with unipolar disorder.\nWe will now fit a gamma frailty model for the patients with bipolar disorder\n\n\nCode show/hide\n# Fitting a gamma frailty model for patients with bipolar disorder\nfrailty3111_bip <- coxph(Surv(start, stop, status == 1) ~ episode + frailty(id), \n                  method = \"breslow\", \n                  data = subset(affective_data, bip == 1))\nsummary(frailty3111_bip)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ episode + frailty(id), \n    data = subset(affective_data, bip == 1), method = \"breslow\")\n\n  n= 360, number of events= 161 \n\n            coef    se(coef) se2     Chisq DF   p    \nepisode     0.07605 0.03179  0.02665  5.72 1.00 0.017\nfrailty(id)                          18.92 9.79 0.038\n\n        exp(coef) exp(-coef) lower .95 upper .95\nepisode     1.079     0.9268     1.014     1.148\n\nIterations: 7 outer, 30 Newton-Raphson\n     Variance of random effect= 0.1391285   I-likelihood = -448 \nDegrees of freedom for terms= 0.7 9.8 \nConcordance= 0.657  (se = 0.034 )\nLikelihood ratio test= 49.91  on 10.5 df,   p=4e-07\n\n\nWe get an estimate of the hazard ratio for the number of episodes of \\(\\exp(0.0761) = 1.079\\) for patients diagnosed with bipolar disorder.\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out=affective_data\n    datafile='data/affective.csv' \n    dbms=csv replace;\n    getnames=yes;\nrun;\n\n* We can fit a gamma frailty model using the phreg procedure where we include a random statement where we specify \n'dist = gamma'.; \n\n* We will first fit a frailty model for the subset of patients with unipolar disorder.;\n\ntitle '3.11.1 - unipolar disorder';\nproc phreg data=affective_data;\n    class id;\n    model (start,stop)*status(0,2,3)=episode;\n    random id/dist=gamma;\n    where state = 0 and bip = 0;\nrun;\n\n* Thus, we obtain a hazard ratio of exp(0.028) = 1.028 for the number of previous episodes for patients with unipolar disorder.;\n\n* Then, we will fit a frailty model for the patients with bipolar disorder;\n\ntitle '3.11.1 - bipolar disorder';\nproc phreg data=affective_data;\n    class id;\n    model (start,stop)*status(0,2,3)=episode;\n    random id/dist=gamma;\n    where state = 0 and  bip = 1;\nrun;\n\n* We get an estimate of the hazard ratio for the number of episodes of exp(0.077) = 1.08 for patients diagnosed with bipolar  disorder.;\n\n\n\n\n\n\n\n2.\nDo the recurrence rates tend to increase with number of previous episodes?.\nThe recurrence rates tend to increase with the number of previous episodes both for patients diagnosed with unipolar and bipolar disorder.\n\n\n\nExercise 3.12\nConsider the data on mortality in relation to childhood vaccinations in Guinea-Bissau, Example 1.1.2.\n\n1.\nFit a gamma frailty model with a random effect of cluster (‘village’) including binary variables for BCG and DTP vaccination and adjusting for age at recruitment (i.e., using time since recruitment as time-variable). Compare the results with those in Table 2.12.\n\nRSAS\n\n\nThe data should be loaded as bissau_data:\n\n\nCode show/hide\nbissau_data <- read.csv(\"data/bissau.csv\")\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\n\n\nTo make our results comparable to Table 2.12 we must first convert the age variable from days to months.\n\n\nCode show/hide\n# Age in months\nbissau_data$agem <- bissau_data$age/30.4\n\n\nThen, we will fit a gamma frailty model using the coxph function from the survival package where we adjust for age, BCG and DTP and a random effect of cluster. This is done by adding frailty(cluster) in the formula argument.\n\n\nCode show/hide\n# Fitting gamma frailty model\nfit3121 <- coxph(Surv(fuptime, dead) ~ frailty(cluster) + bcg + dtp + agem, \n                  method = \"breslow\", \n                  data = bissau_data)\nsummary(fit3121)\n\n\nCall:\ncoxph(formula = Surv(fuptime, dead) ~ frailty(cluster) + bcg + \n    dtp + agem, data = bissau_data, method = \"breslow\")\n\n  n= 5274, number of events= 222 \n\n                 coef     se(coef) se2     Chisq DF p    \nfrailty(cluster)                           0.00  0  0.910\nbcg              -0.40977 0.16685  0.16685 6.03  1  0.014\ndtp               0.07330 0.10366  0.10366 0.50  1  0.480\nagem              0.04006 0.04337  0.04337 0.85  1  0.360\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbcg     0.6638     1.5065    0.4786    0.9206\ndtp     1.0761     0.9293    0.8782    1.3185\nagem    1.0409     0.9607    0.9561    1.1332\n\nIterations: 6 outer, 20 Newton-Raphson\n     Variance of random effect= 5e-07   I-likelihood = -1879.6 \nDegrees of freedom for terms= 0 1 1 1 \nConcordance= 0.55  (se = 0.018 )\nLikelihood ratio test= 6.7  on 3 df,   p=0.08\n\n\nThe coefficient for age (month) is estimated to be 0.04 and the coefficient for BCG vaccination is -0.41. In table 2.12 the coefficient for age (month) was 0.055 and the coefficient for BCG was -0.353. Thus, an increasing age increase the hazard and being vaccinated with BCG decrease the hazard in both models in both models.\nWe furthermore note that our model also adjust for the effect of DTP vaccination unlike the model from Table 2.12. We could also compare with Table 3.2 where dtp is included. Both models suggest an effect of BCG but not DTP.\n\n\n\n\nCode show/hide\n* We first load the data;\nproc import out=bissau_data\n  datafile='data/bissau.csv' \n  dbms=csv replace;\n  getnames=yes;\nrun;\n\n* To make our results comparable to table 2.12 we must first convert the age variable from days to months.;\n\ndata bissau_data;\n    set bissau_data;\n    agem = age/30.4;\nrun;\n\n* Then, we will fit the gamma frailty model using the 'phreg' procedure where we include a random statement with 'dist = gamma' \n  included.;\n\ntitle '3.12.1';\nproc phreg data=bissau_data;\n    class cluster;\n    model fuptime*dead(0)=bcg dtp agem;\n    random cluster/dist=gamma;\nrun;\n\n* The coefficient for age (month) is estimated to be 0.04 and the coefficient for BCG vaccination is -0.41. In table 2.12 the \n  coefficient for age (month) was 0.055 and the coefficient for BCG was -0.353. Thus, an increasing age increase the hazard and \n  being vaccinated with BCG decrease the hazard in both models in both models.;\n\n* We furthermore note that our model also adjust for the effect of DTP vaccination unlike the model from table 2.12. \n  We could also compare with Table 3.2 where dtp is included. Both models suggest an effect of BCG but not DTP.;\n\n\n\n\n\n\n\n2.\nWe fit a Cox model stratified on cluster with the coxph function by including strata(cluster) in the formula argument.\n\nRSAS\n\n\n\n\nCode show/hide\n# Fitting a Cox model statified on cluster\nfit3122 <- coxph(Surv(fuptime, dead) ~ strata(cluster) + bcg + dtp + agem, \n                  method = \"breslow\", \n                  data = bissau_data)\nsummary(fit3122)\n\n\nCall:\ncoxph(formula = Surv(fuptime, dead) ~ strata(cluster) + bcg + \n    dtp + agem, data = bissau_data, method = \"breslow\")\n\n  n= 5274, number of events= 222 \n\n         coef exp(coef) se(coef)      z Pr(>|z|)  \nbcg  -0.33293   0.71682  0.17832 -1.867   0.0619 .\ndtp   0.14412   1.15502  0.11122  1.296   0.1950  \nagem  0.02086   1.02108  0.04520  0.462   0.6444  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbcg     0.7168     1.3951    0.5054     1.017\ndtp     1.1550     0.8658    0.9288     1.436\nagem    1.0211     0.9794    0.9345     1.116\n\nConcordance= 0.537  (se = 0.021 )\nLikelihood ratio test= 4.44  on 3 df,   p=0.2\nWald test            = 4.38  on 3 df,   p=0.2\nScore (logrank) test = 4.39  on 3 df,   p=0.2\n\n\nThe Cox model stratified on cluster and the gamma frailty model agree in the direction BCG, DTP and age change the hazard. However, the gamma frailty model estimates a bigger decrease by being vaccinated with BCG, a smaller increase by being vaccinated with DTP and a larger increase of a positive change in age of the hazard compared to the stratified Cox model.\n\n\n\n\nCode show/hide\n* We fit a Cox model stratified on cluster by adding a 'strata' statement in the 'phreg' procedure;\n\ntitle '3.12.2';\nproc phreg data=bissau_data;\n    model fuptime*dead(0)=bcg dtp agem;\n    strata cluster;\nrun;\n\n* The Cox model stratified on cluster and the gamma frailty model agree in the direction BCG, DTP and age change the hazard. \n  However, the gamma frailty model estimates a bigger decrease by being vaccinated with BCG, a smaller increase by being vaccinated \n  with DTP and a larger increase of a positive change in age of the hazard compared to the stratified Cox model.;"
  },
  {
    "objectID": "Ch4.html#pbc3-trial-in-liver-cirrhosis",
    "href": "Ch4.html#pbc3-trial-in-liver-cirrhosis",
    "title": "4  Intuition for marginal models",
    "section": "PBC3 trial in liver cirrhosis",
    "text": "PBC3 trial in liver cirrhosis\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\npbc3 <- read.csv(\"data/pbc3.csv\")\npbc3$followup<-pbc3$days/365.25\npbc3$fail <- ifelse(pbc3$status != 0, 1, 0) # event/failure indicator\npbc3$tment_char <- ifelse(pbc3$tment == 0, \"Placebo\", \"CyA\")\n# Add transformations of covariates \npbc3$albnorm <- with(pbc3, (alb-35)*(alb>35))\npbc3$alb10 <- with(pbc3, alb/10)\npbc3$alb2 <- with(pbc3, alb10*alb10)\n\npbc3$bilihigh <- with(pbc3, (bili-17.1)*(bili>17.1))\npbc3$bilitoohigh <- with(pbc3, (bili-34.2)*(bili>34.2))\npbc3$bilimuchtoohigh <- with(pbc3, (bili-51.3)*(bili>51.3))\npbc3$bili100 <- with(pbc3, bili/100)\npbc3$bili2 <- with(pbc3, bili100*bili100)\n\npbc3$log2bili <- with(pbc3, log2(bili))\npbc3$log2bili2 <- with(pbc3, log2bili*log2bili)\n\npbc3$logbilihigh <- with(pbc3, (log2bili-log2(17.1))*(bili>17.1))\npbc3$logbilitoohigh <- with(pbc3, (log2bili-log2(34.2))*(bili>34.2))\npbc3$logbilimuchtoohigh <- with(pbc3, (log2bili-log2(51.3))*(bili>51.3))\n\n\n\n\n\n\nCode show/hide\nproc import out=pbc3\n    datafile=\"data/pbc3.csv\"\n    dbms=csv replace;\nrun;\n    \ndata pbc3; \n    set pbc3;\n    followup=days/365.25; /* time in years */\n    albnorm=(alb-35)*(alb>35);\n    alb10=alb/10; alb2=alb10*alb10;\n    bilihigh=(bili-17.1)*(bili>17.1);\n    bilitoohigh=(bili-34.2)*(bili>34.2);\n    bilimuchtoohigh=(bili-51.3)*(bili>51.3);\n    bili100=bili/100; bili2=bili100*bili100;\n    log2bili=log2(bili);\n    logbilihigh=(log2bili-log2(17.1))*(bili>17.1);\n    logbilitoohigh=(log2bili-log2(34.2))*(bili>34.2);\n    logbilimuchtoohigh=(log2bili-log2(51.3))*(bili>51.3);\n    log2bili2=log2bili*log2bili;\nrun;\n\n\n\n\n\n\n\nFigure 4.2\n\nRSAS\n\n\n\n\nCode show/hide\n# General plotting style \nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20),\n        legend.position = \"bottom\", \n        legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        legend.key.size = unit(2,\"line\"))\n\n# Kaplan-Meier estimate per treatment\n# Please note conf.type=\"log-log\"\nlibrary(survival)\nkmfit <- survfit(Surv(days, status != 0) ~ tment, data = pbc3, conf.type=\"log-log\")\n\n# Collect data for plot\n# Note that the standard errors produced by survfit are for the cumulative hazard\nkmdata <- data.frame(surv = kmfit$surv, \n                     time = kmfit$time, \n                     tment = c(rep(names(kmfit$strata)[1], kmfit$strata[1]), \n                               rep(names(kmfit$strata)[2], kmfit$strata[2])))\n\n# Create Figure 4.2\nfig4.2 <- ggplot(aes(x = time / 365.25, y = surv, linetype = tment), data = kmdata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6), breaks = seq(0, 6, by = 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), limits = c(0,1)) +\n  theme_general\n\nfig4.2\n\n\n\n\n\n\n\n\n\nCode show/hide\n* Kaplan-Meier plot per treatment;\n* Using proc lifetest;\nproc lifetest data=pbc3 notable plots=(survival(nocensor));\n  time followup*status(0);\n    strata tment;\nrun;\n\n* Using proc phreg;\nproc phreg data=pbc3;\n    model days*status(0)=;\n    strata tment;\n    baseline out=survdat survival=km / method=pl;\nrun;\n\ndata survdat;\n    set survdat; \n    daysyears = days/365.25; \nrun; \n\nproc gplot data=survdat;\nplot km*daysyears=tment/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Survival probability');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\nIn-text: Kaplan-Meier estimates at 2 years\n\nRSAS\n\n\n\n\nCode show/hide\n# 95 c.i. uses conf.type=\"log-log\" - see above\nsummary(kmfit,times=2*365.25)\n\n\nCall: survfit(formula = Surv(days, status != 0) ~ tment, data = pbc3, \n    conf.type = \"log-log\")\n\n                tment=0 \n        time       n.risk      n.event     survival      std.err lower 95% CI \n    730.5000     106.0000      27.0000       0.8322       0.0296       0.7645 \nupper 95% CI \n      0.8819 \n\n                tment=1 \n        time       n.risk      n.event     survival      std.err lower 95% CI \n    730.5000     111.0000      24.0000       0.8458       0.0292       0.7782 \nupper 95% CI \n      0.8941 \n\n\n\n\n\n\nCode show/hide\nproc lifetest data=pbc3 timelist=2;\n  time followup*status(0);\n  strata tment;\nrun;\n\nproc print data=survdat;\n  where days<=2*365.25;\nrun;\n\n\n\n\n\n\n\nFigure 4.4\n\nRSAS\n\n\n\n\nCode show/hide\n# Poisson model fit (like in Chapter 2)\n# Cuts\ncuts <- c(0, 2, 4) * 365.25\n# event/failure indicator\npbc3$fail <- ifelse(pbc3$status != 0, 1, 0)\n# Make the data ready using survSplit\npbc3mult <- survSplit(Surv(days, fail) ~ ., \n                      pbc3,\n                      cut = cuts[-1], \n                      episode = \"timegroup\")\n\n# Risk time\npbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] \n\n# Summarize\nlibrary(dplyr)\nsumdata <- pbc3mult %>% \n  group_by(tment, timegroup) %>% \n  summarise(fail = sum(fail), \n            risktime = sum(days - cuts[timegroup])#,\n            #logrisktime = sum(log(days))\n  )\nsumdata <- as.data.frame(sumdata)\n\n# Placebo KM data from figure 4.2 model fit\ntment1 <- subset(kmdata, tment == \"tment=1\")\n# Estimated hazard per time group\nsumdata$hazard_timegroup <- sumdata$fail / sumdata$risktime\n# Add a numeric version of the treatment to the NA estimates\nkmdata$tmentnum <- ifelse(kmdata$tment == \"tment=0\", 0, 1)\n# Add piecewise constant hazard to data\nkmdata$pwch <- NULL\n\n# Between time 0 and 2\nkmdata$pwch[kmdata$time <= 2 * 365.25] <- kmdata$time[kmdata$time <= 2  * 365.25] * \n  (sumdata$hazard_timegroup[1] * (1-kmdata$tmentnum[kmdata$time <= 2  * 365.25]) + \n     sumdata$hazard_timegroup[4] * (kmdata$tmentnum[kmdata$time <= 2 * 365.25]))\n\n# Between time 2 and 4\nkmdata$pwch[kmdata$time > 2  * 365.25 & kmdata$time <= 4 * 365.25] <- 2  * 365.25 * \n  (sumdata$hazard_timegroup[1]\n   * (1-kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25]) + \n     sumdata$hazard_timegroup[4] \n   * (kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25])) + \n  (kmdata$time[kmdata$time > 2 * 365.25 & kmdata$time <= 4 * 365.25] - 2 * 365.25) * \n  (sumdata$hazard_timegroup[2] \n   * (1-kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25]) + \n     sumdata$hazard_timegroup[5] \n   * (kmdata$tmentnum[kmdata$time > 2 * 365.25 & kmdata$time <= 4 * 365.25]))\n\n# After time 4\nkmdata$pwch[kmdata$time > 4 * 365.25] <- 2 * 365.25 * \n  (sumdata$hazard_timegroup[1] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + \n     sumdata$hazard_timegroup[4] * (kmdata$tmentnum[kmdata$time > 4 * 365.25])) + \n  2 * 365.25 *\n  (sumdata$hazard_timegroup[2] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + \n     sumdata$hazard_timegroup[5] * (kmdata$tmentnum[kmdata$time > 4 * 365.25])) + \n  (kmdata$time[kmdata$time > 4 * 365.25] - 4 * 365.25) * \n  (sumdata$hazard_timegroup[3] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + \n     sumdata$hazard_timegroup[6] * (kmdata$tmentnum[kmdata$time > 4 * 365.25]))\n\n# Change to estimated survival (plug-in formula)\nkmdata$pwcs <- exp(-kmdata$pwch)\n# Reformat for plot\npiecepdata <- data.frame(surv = c(kmdata$surv, kmdata$pwcs), \n                         time = rep(kmdata$time, 2),\n                         tmentnum = rep(kmdata$tmentnum, 2),\n                         type = c(rep(\"Kaplan-Meier\", length(kmdata$time)), \n                                  rep(\"Piece-wise exponential\", length(kmdata$time))))\n# Only for treatment 1\npiecepdata1 <- subset(piecepdata, tmentnum == 1)\n\n# Create Figure 4.4\nfig4.4 <- ggplot(aes(x = time / 365.25, y = surv, linetype = type), \n                data = subset(piecepdata1, type == \"Kaplan-Meier\")) + \n  geom_step(linewidth = 1) + \n  geom_line(aes(x = time/ 365.25, y = surv, linetype = type), linewidth = 1,\n            data = subset(piecepdata1, type == \"Piece-wise exponential\")) + \n  labs(linetype = \"Type\") + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Survival probability\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general\nfig4.4\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata survdat; \n    set survdat;\n    if days<=2 * 365.25 then\n    pwch=exp(-(days*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)));\n    if 2 * 365.25 <days<=4 * 365.25 then\n    pwch=exp(-(2* 365.25*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)\n    +(days-2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment)));\n    if 4 * 365.25 <days then\n    pwch=exp(-(2* 365.25 *(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)\n    +(2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment)\n    +(days-4* 365.25)*(2.0000000/8642*(1-tment)+2.0000000/7599*tment)));\nrun;\n\ndata survdat;\n    set survdat; \n    daysyears = days/365.25; \nrun; \n\nproc gplot data=survdat; \n    where tment=1;\n    plot (km pwch)*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Survival probability');\n    symbol1  v=none i=stepjl r=1 c=red;\n    symbol2 v=none i=join r=1 c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 4.5\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model\ncoxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, \n                 method = \"breslow\")\n# Unique days times \nfu <- sort(unique(pbc3$days))\n# Data for prediction\npreddata <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), \n                       alb = rep(38, length(fu) * 2),\n                       log2bili = rep(log2(45), length(fu) * 2), \n                       days = c(fu, fu),\n                       status = rep(1, length(fu) * 2))\n\n# Linear predictor\npreds <- predict(coxfit, newdata = preddata, type = \"survival\")\npreddata$preds <- preds\n\n# Create Figure 4.5\nfig4.5 <- ggplot(aes(x = days / 365.25, y = preds, linetype = as.factor(tment)), \n                data = preddata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Estimated survival function\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general \nfig4.5\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata cov;\n    tment=0; alb=38; log2bili=log2(45); output;\n    tment=1; alb=38; log2bili=log2(45); output;\nrun;\n\nproc phreg data=pbc3;\n    model days*status(0)=tment alb log2bili/rl;\n    baseline out=predsurv survival=surv covariates=cov/ method=breslow;\nrun;\n\ndata predsurv;\n    set predsurv; \n    daysyears = days/365.25; \nrun; \n\nproc gplot data=predsurv;\n    plot surv*daysyears=tment/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Estimated survival function');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 4.6\n\nRSAS\n\n\n\n\nCode show/hide\n# Add log(-log(S(t)))\npreddata$logminlogsurv <- with(preddata, log(-log(preds)))\n\n# Create Figure 4.6\nfig4.6 <- ggplot(aes(x = days / 365.25, y = logminlogsurv, linetype = as.factor(tment)), \n                data = preddata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"log(-log(survival function))\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05))) +\n  theme_general\n\nfig4.6\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata predsurv2; \n    set predsurv; \n    logminlogsurv = log(-log(surv)); \nrun; \n\ndata predsurv2;\n    set predsurv2; \n    daysyears = days/365.25; \nrun; \n\nproc gplot data=predsurv2;\n    plot logminlogsurv*daysyears=tment/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=-7 to 0 by 1 minor=none label=(a=90 'log(-log(survival function))');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 4.7\n\nRSAS\n\n\n\n\nCode show/hide\n# g-formula\n# We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)\n# We need to have n survival curves * 2\n# make a double data set with extra Z\npbc3_counterfact <- pbc3\npbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment\npbc3_double <- rbind(pbc3, pbc3_counterfact)\n\n# Baseline survival\ncoxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, \n                 method = \"breslow\")\npred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))\nallsurv <-\n  lapply(1:nrow(pbc3_double),\n       function(i)\n         pred$surv ^\n         exp(coef(coxfit)[1] * pbc3_double$tment[i] +\n               coef(coxfit)[2] * pbc3_double$alb[i] +\n               coef(coxfit)[3] * pbc3_double$log2bili[i]))\npotout <-\n  data.frame(surv = unlist(allsurv),\n           tment = rep(pbc3_double$tment, each = length(pred$time)),\n           time = rep(pred$time, times = nrow(pbc3)*2))\n\n# Average over values\nlibrary(dplyr)\nsumdata <- potout %>%\n  group_by(tment, time) %>%\n  summarise(average_pred = mean(surv, na.rm = TRUE),\n            .groups = c(\"keep\"))\nsumdata <- as.data.frame(sumdata)\n\n# Create Figure 4.7\nfig4.7 <- ggplot(aes(x = time / 365.25, y = average_pred, linetype = as.factor(tment)),\n                data = sumdata) +\n  geom_step(linewidth = 1) +\n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\")) +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Estimated survival function (g-formula)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general \n\nfig4.7\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    class tment;\n    model days*status(0)=tment alb log2bili / rl;\n    baseline out=gsurv survival=surv stderr=sd /\n    method=breslow diradj group=tment;\nrun;\ndata gsurv;\n    set gsurv; \n    daysyears = days/365.25; \nrun; \nproc gplot data=gsurv;\n    plot surv*daysyears=tment / haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none\n  label=(a=90 'Estimated survival function (g-formula)');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nIn-text: g-formula from Cox\n\nRSAS\n\n\n\nUsing riskRegression package\n\n\nCode show/hide\nlibrary(riskRegression)\nsubpbc<-subset(pbc3, !is.na(alb))\nsubpbc$tment<-relevel(factor(subpbc$tment),ref=\"0\")\ncfit <- coxph(Surv(days, fail) ~ tment + alb + log2bili, data = subpbc, \n                 method = \"breslow\",y=TRUE,x=TRUE)\natecfit<-ate(cfit, data = subpbc, treatment = \"tment\", times = 2*365.25,\n             cause=1, verbose=F)\nsummary(atecfit,type=\"meanRisk\",se=T)\n\n\n     Average treatment effect \n\n - Treatment            : tment (2 levels: \"0\" \"1\")\n - Event                : fail (cause: 1, censoring: 0)\n - Time  [min;max]      : days [1;2150]\n - Eval. time          : 730.5\n      number at risk 0     102\n      number at risk 1     110\n\n Estimation procedure \n - Estimator  : G-formula\n - Uncertainty: Gaussian approximation \n                where the variance is estimated via the influence function \n\n Testing procedure\n - Null hypothesis     : given two treatments (A,B) and a specific timepoint, equal risks \n - Confidence level    : 0.95\n\n Results: \n - Standardized risk between time zero and 'time', reported on the scale [0;1] (probability scale)\n   (average risk when treating all subjects with one treatment)\n\n time tment  risk     se          ci\n  730     0 0.201 0.0271 [0.15;0.25]\n  730     1 0.133 0.0217 [0.09;0.18]\n\n risk            : estimated standardized risk \n ci              : pointwise confidence intervals \n\n\nCode show/hide\nsummary(atecfit,type=\"diffRisk\",se=T)\n\n\n     Average treatment effect \n\n - Treatment            : tment (2 levels: \"0\" \"1\")\n - Event                : fail (cause: 1, censoring: 0)\n - Time  [min;max]      : days [1;2150]\n - Eval. time          : 730.5\n      number at risk 0     102\n      number at risk 1     110\n\n Estimation procedure \n - Estimator  : G-formula\n - Uncertainty: Gaussian approximation \n                where the variance is estimated via the influence function \n\n Testing procedure\n - Null hypothesis     : given two treatments (A,B) and a specific timepoint, equal risks \n - Confidence level    : 0.95\n\n Results: \n - Difference in standardized risk (B-A) between time zero and 'time' \n                reported on the scale [-1;1] (difference between two probabilities)\n (difference in average risks when treating all subjects with the experimental treatment (B),\n                                vs. treating all subjects with the reference treatment (A))\n\n time tment=A tment=B difference     se            ci p.value\n  730       0       1    -0.0681 0.0259 [-0.12;-0.02] 0.00855\n\n difference      : estimated difference in standardized risks \n ci              : pointwise confidence intervals \n p.value         : (unadjusted) p-value \n\n\nCode show/hide\n# Survival instead of failure risk\n1-atecfit$meanRisk$estimate\n\n\n[1] 0.7989143 0.8670633\n\n\nCode show/hide\n# Bootstrap\natecfitB<-ate(cfit, data = subpbc, treatment = \"tment\", times = 2*365.25,\n             cause=1, verbose=F, B=100)\nsummary(atecfitB,type=\"meanRisk\",se=T)\n\n\n     Average treatment effect \n\n - Treatment            : tment (2 levels: \"0\" \"1\")\n - Event                : fail (cause: 1, censoring: 0)\n - Time  [min;max]      : days [1;2150]\n - Eval. time          : 730.5\n      number at risk 0     102\n      number at risk 1     110\n\n Estimation procedure \n - Estimator  : G-formula\n - Uncertainty: Percentile bootstrap based on 100 bootstrap samples\n                that were drawn with replacement from the original data.\n\n Testing procedure\n - Null hypothesis     : given two treatments (A,B) and a specific timepoint, equal risks \n - Confidence level    : 0.95\n\n Results: \n - Standardized risk between time zero and 'time', reported on the scale [0;1] (probability scale)\n   (average risk when treating all subjects with one treatment)\n\n time tment  risk risk.boot     se          ci\n  730     0 0.201     0.199 0.0261 [0.15;0.26]\n  730     1 0.133     0.132 0.0192 [0.10;0.17]\n\n risk            : estimated standardized risk \n risk.boot       : average value over the bootstrap samples \n ci              : pointwise confidence intervals \n\n\nCode show/hide\nsummary(atecfitB,type=\"diffRisk\",se=T)\n\n\n     Average treatment effect \n\n - Treatment            : tment (2 levels: \"0\" \"1\")\n - Event                : fail (cause: 1, censoring: 0)\n - Time  [min;max]      : days [1;2150]\n - Eval. time          : 730.5\n      number at risk 0     102\n      number at risk 1     110\n\n Estimation procedure \n - Estimator  : G-formula\n - Uncertainty: Percentile bootstrap based on 100 bootstrap samples\n                that were drawn with replacement from the original data.\n\n Testing procedure\n - Null hypothesis     : given two treatments (A,B) and a specific timepoint, equal risks \n - Confidence level    : 0.95\n\n Results: \n - Difference in standardized risk (B-A) between time zero and 'time' \n                reported on the scale [-1;1] (difference between two probabilities)\n (difference in average risks when treating all subjects with the experimental treatment (B),\n                                vs. treating all subjects with the reference treatment (A))\n\n time tment=A tment=B difference difference.boot     se            ci p.value\n  730       0       1    -0.0681         -0.0668 0.0239 [-0.12;-0.02]       0\n\n difference      : estimated difference in standardized risks \n difference.boot : average value over the bootstrap samples \n ci              : pointwise confidence intervals \n p.value         : (unadjusted) p-value \n\n\n\n\nUsing mets package\n\n\nCode show/hide\nlibrary(mets)\ncfitmets <- phreg(Surv(days, fail) ~ tment + alb + log2bili, data = subpbc)\nsummary(survivalG(cfitmets, subpbc, time = 2*365.25))\n\n\nrisk:\n      Estimate Std.Err   2.5%  97.5%    P-value\nrisk0   0.7989 0.02722 0.7455 0.8522 2.325e-189\nrisk1   0.8671 0.02171 0.8245 0.9096  0.000e+00\n\nAverage Treatment effects (G-estimator) :\n   Estimate Std.Err    2.5%  97.5%  P-value\np1   0.0682 0.02622 0.01681 0.1196 0.009297\n\nAverage Treatment effect ratio (G-estimator) :\n     Estimate    Std.Err     2.5%    97.5%    P-value\n[p1] 1.085375 0.03484226 1.017085 1.153664 0.01427275\n\n\n\n\n\n\n\nCode show/hide\nproc print data=gsurv;\n  where days=714;\nrun;\n\n\n\n\n\n\n\nFigure 4.8\n\nRSAS\n\n\n\n\nCode show/hide\n# Product representation based on Breslow estimator\n# Survival prediction\npreds <- basehaz(coxfit, centered = F)\n\n# For tment=0, alb=38, log2bili=log2(45)\ndA_tment0 <- diff(c(0, preds$hazard \n                    * exp(coef(coxfit)[1]*0 + coef(coxfit)[2]*38 + coef(coxfit)[3] * log2(45) )))\nsurv_tment0 <- cumprod(1 - dA_tment0)\n\n# For tment=1, alb=38, log2bili=log2(45)\ndA_tment1 <- diff(c(0, preds$hazard \n                    * exp(coef(coxfit)[1]*1 + coef(coxfit)[2]*38 + coef(coxfit)[3] * log2(45) )))\nsurv_tment1 <- cumprod(1 - dA_tment1)\n\npdata <- data.frame(surv = c(surv_tment0, surv_tment1),\n                    time = c(preds$time, preds$time), \n                    tment = c(rep(\"0\", length(preds$time)),\n                              rep(\"1\", length(preds$time))))\n\n# Create Figure 4.8\nfig4.8 <- ggplot(aes(x = time / 365.25, y = surv, linetype = as.factor(tment)), \n                data = pdata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Treatment\", labels = c(\"Placebo\", \"CyA\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Estimated survival function\") + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general\n\nfig4.8\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    *class tment;\n    model days*status(0)=tment alb log2bili/rl;\n    baseline out=predsurvpl survival=surv covariates=cov / method=pl;\nrun;\n\ndata predsurvpl;\n    set predsurvpl; \n    daysyears = days/365.25; \nrun; \n\nproc gplot data=predsurvpl;\n    plot surv*daysyears=tment/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Estimated survival function');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nTable 4.1\n\nRSAS\n\n\n\nNon-parametric using survival package\n\n\nCode show/hide\nlibrary(survival)\nnp_km <- survfit(Surv(days/365.25, status != 0) ~ tment, data = pbc3)\nprint(np_km,rmean=3)\n\n\nCall: survfit(formula = Surv(days/365.25, status != 0) ~ tment, data = pbc3)\n\n          n events rmean* se(rmean) median 0.95LCL 0.95UCL\ntment=0 173     46   2.61    0.0633     NA    4.51      NA\ntment=1 176     44   2.68    0.0565     NA    4.66      NA\n    * restricted mean with upper limit =  3 \n\n\n\n\nNon-parametric using mets package\n\n\nCode show/hide\n# non-parametric could also be done using mets package\nlibrary(mets)\nout1 <- phreg(Surv(days/365.25,fail)~strata(tment),data=pbc3)\nrm1 <- resmean.phreg(out1,times=3)\nsummary(rm1)\n\n\n  strata times    rmean   se.rmean years.lost\n1      0     3 2.606095 0.06325665  0.3939052\n2      1     3 2.677657 0.05654602  0.3223425\n\n\nCode show/hide\nresmeanIPCW(Event(days/365.25,fail)~1, data=subset(pbc3,tment==0),time=3,model=\"linear\")\n\n\n\n   n events\n 173     36\n\n 173 clusters\ncoeffients:\n            Estimate  Std.Err     2.5%    97.5% P-value\n(Intercept) 2.605894 0.063305 2.481818 2.729969       0\n\nexp(coeffients):\n            Estimate   2.5%  97.5%\n(Intercept)   13.543 11.963 15.332\n\n\nCode show/hide\nresmeanIPCW(Event(days/365.25,fail)~1, data=subset(pbc3,tment==1),time=3,model=\"linear\")\n\n\n\n   n events\n 176     32\n\n 176 clusters\ncoeffients:\n            Estimate  Std.Err     2.5%    97.5% P-value\n(Intercept) 2.677458 0.056607 2.566511 2.788405       0\n\nexp(coeffients):\n            Estimate   2.5%  97.5%\n(Intercept)   14.548 13.020 16.255\n\n\nCode show/hide\n# or\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\nout<-resmeanIPCW(Event(days/365.25,fail)~-1+factor(tment),data=pbc3,time=3,model=\"linear\",\n            cens.model = ~strata(tment))\nestimate(out)\n\n\n               Estimate Std.Err  2.5% 97.5% P-value\nfactor(tment)0    2.606 0.06330 2.482 2.730       0\nfactor(tment)1    2.677 0.05661 2.567 2.788       0\n\n\n\n\nCode for rest of table\n\n\nCode show/hide\n#### Non-parametric using RISCA package\nkmdata <- data.frame(surv = np_km$surv, \n                      time = np_km$time, \n                     strata = c(rep(names(np_km$strata[1]), np_km$strata[[1]]), \n                              rep(names(np_km$strata[2]), np_km$strata[[2]])))\n# Restrict to each treat\nkmdata0 <- subset(kmdata, strata == \"tment=0\")\nkmdata1 <- subset(kmdata, strata == \"tment=1\")\n\n# rmst\nlibrary(RISCA)\nrmst0 <- rmst(times = kmdata0$time, surv.rates = kmdata0$surv, max.time = 3, type = \"s\")\nrmst1 <- rmst(times = kmdata1$time, surv.rates = kmdata1$surv, max.time = 3, type = \"s\")\n\n# Cox model, alb = 38, bili = 45\n# Cox model fit with covariates tment, alb and log2bili\ncoxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, \n                method = \"breslow\")\n\n# Unique followup times \nfu <- sort(unique(pbc3$days))\n\n# Data for prediction\npreddata1 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), \n                       alb = rep(38, length(fu) * 2),\n                       log2bili = rep(log2(45), length(fu) * 2), \n                       days = c(fu, fu),\n                       status = rep(1, length(fu) * 2)\n)\n\n# Linear predictor\npreds1 <- predict(coxfit, newdata = preddata1, type = \"survival\")\n\npreddata1$preds <- preds1\n\ncox10 <- subset(preddata1, tment == \"0\")\ncox11 <- subset(preddata1, tment == \"1\")\n\n# Rmst \nrmstcox10 <- rmst(times = cox10$days, surv.rates = cox10$preds, max.time = 3 * 365.25, type = \"s\")\nrmstcox11 <- rmst(times = cox11$days, surv.rates = cox11$preds, max.time = 3 * 365.25, type = \"s\")\n\n# Cox for alb = 20 and bili = 90 \n\n# Data for prediction\npreddata2 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), \n                        alb = rep(20, length(fu) * 2),\n                        log2bili = rep(log2(90), length(fu) * 2), \n                        days = c(fu, fu),\n                        status = rep(1, length(fu) * 2)\n)\n\n# Linear predictor\npreds2 <- predict(coxfit, newdata = preddata2, type = \"survival\")\n\npreddata2$preds <- preds2\n\ncox20 <- subset(preddata2, tment == \"0\")\ncox21 <- subset(preddata2, tment == \"1\")\n\n# Rmst \nrmstcox20 <- rmst(times = cox20$days, surv.rates = cox20$preds, max.time = 3 * 365.25, type = \"s\")\nrmstcox21 <- rmst(times = cox21$days, surv.rates = cox21$preds, max.time = 3 * 365.25, type = \"s\")\n\n# Cox model, g-formula\n\n# We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)\n# We need to have n survival curves * 2\n# make a double data set with extra Z\npbc3_counterfact <- pbc3\npbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment\npbc3_double <- rbind(pbc3, pbc3_counterfact)\n\n# Baseline survival\npred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))\n\nallsurv <-\n  lapply(1:nrow(pbc3_double),\n         function(i)\n           pred$surv ^\n           exp(coef(coxfit)[1] * pbc3_double$tment[i] +\n                 coef(coxfit)[2] * pbc3_double$alb[i] +\n                 coef(coxfit)[3] * pbc3_double$log2bili[i]))\n\npotout <-\n  data.frame(surv = unlist(allsurv),\n             tment = rep(pbc3_double$tment, each = length(pred$time)),\n             time = rep(pred$time, times = nrow(pbc3)*2)\n  )\n\n# Average over values\nrequire(dplyr)\nsumdata <- potout %>%\n  group_by(tment, time) %>%\n  summarise(average_pred = mean(surv, na.rm = TRUE),\n            .groups = c(\"keep\"))\nsumdata <- as.data.frame(sumdata)\n\n\n# Split data per group\ncoxg0 <- subset(sumdata, tment == \"0\")\ncoxg1 <- subset(sumdata, tment == \"1\")\n\n# Rmst \nrmstcoxg0 <- rmst(times = coxg0$time, surv.rates = coxg0$average_pred, max.time = 3 * 365.25, type = \"s\")\nrmstcoxg1 <- rmst(times = coxg1$time, surv.rates = coxg1$average_pred, max.time = 3 * 365.25, type = \"s\")\n\n##### BOOTSTRAP FOR SE'S #####\n\n# Resample data sets \n\nB<-200\nbootdata <- list()\nkmres <- cox1res <- cox2res <- coxgres <- list()\n\n#colnames(kmres) <- colnames(cox1res) <- colnames(cox2res) <- colnames(coxgres) <- c(\"rmst0\", \"rmst1\")\n\n\nfor (b in 1:B){\n  bootdata[[b]] <- pbc3[sample(1:nrow(pbc3), size = nrow(pbc3), replace = T),]\n  \n  ###### KM #######\n  np_km <- survfit(Surv(days, status != 0) ~ tment, data = bootdata[[b]])\n  \n  kmdata <- data.frame(surv = np_km$surv, \n                       time = np_km$time, \n                       strata = c(rep(names(np_km$strata[1]), np_km$strata[[1]]), \n                                  rep(names(np_km$strata[2]), np_km$strata[[2]])))\n  # Restrict to each treat\n  kmdata0 <- subset(kmdata, strata == \"tment=0\")\n  kmdata1 <- subset(kmdata, strata == \"tment=1\")\n  \n  # rmst\n  rmst0 <- rmst(times = kmdata0$time, surv.rates = kmdata0$surv, max.time = 3 * 365.25, type = \"s\")\n  rmst1 <- rmst(times = kmdata1$time, surv.rates = kmdata1$surv, max.time = 3 * 365.25, type = \"s\")\n\n  kmres[[b]] <- c(rmst0, rmst1)\n  \n  \n  ###### Cox 1 #######\n  \n  coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = bootdata[[b]], \n                  method = \"breslow\")\n  \n  # Unique followup times \n  fu <- sort(unique(pbc3$days))\n  \n  # Data for prediction\n  preddata1 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), \n                          alb = rep(38, length(fu) * 2),\n                          log2bili = rep(log2(45), length(fu) * 2), \n                          days = c(fu, fu),\n                          status = rep(1, length(fu) * 2))\n  \n  # Linear predictor\n  preds1 <- predict(coxfit, newdata = preddata1, type = \"survival\")\n  preddata1$preds <- preds1\n  cox10 <- subset(preddata1, tment == \"0\")\n  cox11 <- subset(preddata1, tment == \"1\")\n  \n  # Rmst \n  rmstcox10 <- rmst(times = cox10$days, surv.rates = cox10$preds, max.time = 3 * 365.25, type = \"s\")\n  rmstcox11 <- rmst(times = cox11$days, surv.rates = cox11$preds, max.time = 3 * 365.25, type = \"s\")\n    cox1res[[b]] <- c(rmstcox10, rmstcox11)\n  \n  ###### Cox 2 #######\n\n  # Cox for alb = 20 and bili = 90   \n  # Data for prediction\n  preddata2 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), \n                          alb = rep(20, length(fu) * 2),\n                          log2bili = rep(log2(90), length(fu) * 2), \n                          days = c(fu, fu),\n                          status = rep(1, length(fu) * 2))\n  \n  # Linear predictor\n  preds2 <- predict(coxfit, newdata = preddata2, type = \"survival\")\n  preddata2$preds <- preds2\n  cox20 <- subset(preddata2, tment == \"0\")\n  cox21 <- subset(preddata2, tment == \"1\")\n  \n  # Rmst \n  rmstcox20 <- rmst(times = cox20$days, surv.rates = cox20$preds, max.time = 3 * 365.25, type = \"s\")\n  rmstcox21 <- rmst(times = cox21$days, surv.rates = cox21$preds, max.time = 3 * 365.25, type = \"s\")\n  cox2res[[b]] <- c(rmstcox20, rmstcox21) \n  \n  \n  ##### Cox - g formula #######\n  \n  # We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)\n  # We need to have n survival curves * 2\n  # make a double data set with extra Z\n  pbc3_counterfact <- bootdata[[b]]\n  pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment\n  pbc3_double <- rbind(bootdata[[b]], pbc3_counterfact)\n  \n  # Baseline survival\n  pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))\n  \n  allsurv <-\n    lapply(1:nrow(pbc3_double),\n           function(i)\n             pred$surv ^\n             exp(coef(coxfit)[1] * pbc3_double$tment[i] +\n                   coef(coxfit)[2] * pbc3_double$alb[i] +\n                   coef(coxfit)[3] * pbc3_double$log2bili[i]))\n  \n  potout <-\n    data.frame(surv = unlist(allsurv),\n               tment = rep(pbc3_double$tment, each = length(pred$time)),\n               time = rep(pred$time, times = nrow(pbc3)*2)\n    )\n  \n  # Average over values\n  require(dplyr)\n  sumdata <- potout %>%\n    group_by(tment, time) %>%\n    summarise(average_pred = mean(surv, na.rm = TRUE),\n              .groups = c(\"keep\"))\n  sumdata <- as.data.frame(sumdata)\n\n  # Split data per group\n  coxg0 <- subset(sumdata, tment == \"0\")\n  coxg1 <- subset(sumdata, tment == \"1\")\n  \n  # Rmst \n  rmstcoxg0 <- rmst(times = coxg0$time, surv.rates = coxg0$average_pred, max.time = 3 * 365.25, type = \"s\")\n  rmstcoxg1 <- rmst(times = coxg1$time, surv.rates = coxg1$average_pred, max.time = 3 * 365.25, type = \"s\")\n  coxgres[[b]] <- c(rmstcoxg0, rmstcoxg1)\n}\n\nkmreso <- do.call(\"rbind\", kmres)\ncox1reso <- do.call(\"rbind\", cox1res)\ncox2reso <- do.call(\"rbind\", cox2res)\ncoxgreso <- do.call(\"rbind\", coxgres)\n\n\n\n\nCox (38,45)\n\n\nCode show/hide\napply(cox1reso, 2, mean)/365.25\n\n\n[1] 2.527231 2.720892\n\n\nCode show/hide\napply(cox1reso, 2, sd)/365.25\n\n\n[1] 0.06340501 0.04929527\n\n\n\n\nCox (20,90)\n\n\nCode show/hide\napply(cox2reso, 2, mean)/365.25\n\n\n[1] 0.9566561 1.3641107\n\n\nCode show/hide\napply(cox2reso, 2, sd)/365.25\n\n\n[1] 0.2510078 0.2445435\n\n\n\n\nCox g-formula\n\n\nCode show/hide\napply(coxgreso, 2, mean)/365.25\n\n\n[1] 2.548957 2.703833\n\n\nCode show/hide\napply(coxgreso, 2, sd)/365.25\n\n\n[1] 0.05726278 0.04401984\n\n\n\n\nCox g-formula using RISCA package\n\n\nCode show/hide\npbc3$followup<-pbc3$days/365.25\ncoxf <- coxph(Surv(followup, fail) ~ tment + alb + log2bili,\n                data = pbc3, method = \"breslow\")\nlibrary(RISCA)\ngc.ate <- gc.survival(object=coxf, data=pbc3, \n                      group=\"tment\", times=\"followup\", failures=\"fail\",\n                      max.time=3, iterations=1000, effect=\"ATE\")\nrbind(Placebo=gc.ate$RMST0,CyA=gc.ate$RMST1)\n\n\n        estimate  std.error ci.lower ci.upper\nPlacebo 2.553795 0.05834140 2.439448 2.668142\nCyA     2.705696 0.04488675 2.617719 2.793672\n\n\n\n\n\n\nNon-parametric using PROC RMSTREG\n\n\nCode show/hide\nproc sort data=pbc3 out=pbc3sorted;\n    by tment;\nrun;\nproc rmstreg data=pbc3sorted tau=3;\n  by tment;\n  model followup*status(0)= / \n        link=linear method=ipcw(strata=tment);\nrun;\n\n* Bootstrapping using 'point='; \ndata bootpbc;\n    do sampnum = 1 to 1000; /* nboot=1000*/\n        do i = 1 to 349;      /*nobs=349*/\n            x=round(ranuni(0)*349); \n            set pbc3\n            point=x;\n            output;\n        end;\n    end;\n    stop;\nrun;\nproc sort data=bootpbc out=boot;\n  by sampnum tment;\nrun;\nproc rmstreg data=boot tau=3;\n  by sampnum tment;\n  model followup*status(0)= / \n        link=linear method=ipcw(strata=tment);\n    ods output parameterestimates=pe;\nrun;\nproc means data=pe mean stddev;\n  class tment;\n    var estimate;\nrun;\n\n\n\n\nMacro and bootstrap data set\n\n\nCode show/hide\n* Bootstrapping using 'point='; \ndata bootpbc;\n    do sampnum = 1 to 1000; /* nboot=1000*/\n        do i = 1 to 349;      /*nobs=349*/\n            x=round(ranuni(0)*349); \n            set pbc3\n            point=x;\n            output;\n        end;\n    end;\n    stop;\nrun;\n\n* AUC under stepcurves; \n%macro areastepby(data,byvar,trt,grp,time,y,tau);\n    data select;\n        set &data;\n        where &trt=&grp;\n    run;\n\n    data select;\n        set select;\n        by &byvar;\n        retain mu oldt oldy;\n        if first.&byvar then do;\n            oldt=0; oldy=1; mu=0;\n        end;\n        if &time>&tau then do;\n            &time=&tau; &y=oldy;\n        end;\n        if not first.&byvar then mu+oldy*(&time-oldt);\n        if last.&byvar then do;\n        if &time<&tau then mu+(&tau-&time)*&y; end;\n        oldy=&y; oldt=&time;\n    run;\n\n    data last; set select;\n        by  &byvar;\n        if last.&byvar;\n    run;\n%mend areastepby;\n\n\n\n\nNon-parametric using macro\n\n\nCode show/hide\nproc phreg data=bootpbc noprint;\n    by sampnum;\n    model followup*status(0)=;\n    strata tment;\n    baseline out=survdat survival=km / method=pl;\nrun;\n\n%areastepby(survdat,sampnum,tment,0,followup,km,3);\ntitle \"Placebo\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n%areastepby(survdat,sampnum,tment,1,followup,km,3);\ntitle \"CyA\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n\n\n\n\nCox (38,45) using macro\n\n\nCode show/hide\ndata cov;\n    tment=0; alb=38; log2bili=log2(45); output;\n    tment=1; alb=38; log2bili=log2(45); output;\nrun;\nproc phreg data=bootpbc noprint;\n    by sampnum;\n    model followup*status(0)=tment alb log2bili/rl;\n    baseline out=predsurv survival=surv covariates=cov/ method=breslow;\nrun;\n\n%areastepby(predsurv,sampnum,tment,0,followup,surv,3);\ntitle \"Placebo\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n%areastepby(predsurv,sampnum,tment,1,followup,surv,3);\ntitle \"CyA\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n\n\n\n\nCox (20,90) using macro\n\n\nCode show/hide\ndata cov;\n    tment=0; alb=20; log2bili=log2(90); output;\n    tment=1; alb=20; log2bili=log2(90); output;\nrun;\nproc phreg data=bootpbc noprint;\n    by sampnum;\n    model followup*status(0)=tment alb log2bili/rl;\n    baseline out=predsurv2 survival=surv covariates=cov/ method=breslow;\nrun;\n\n%areastepby(predsurv2,sampnum,tment,0,followup,surv,3);\ntitle \"Placebo\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n%areastepby(predsurv2,sampnum,tment,1,followup,surv,3);\ntitle \"CyA\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n\n\n\n\nCox g-formula using macro\n\n\nCode show/hide\nproc phreg data=bootpbc noprint;\n    by sampnum;\n    class tment (ref='0');\n    model followup*status(0)=tment alb log2bili/rl;\n    baseline out=gsurv survival=surv stderr=se/ method=breslow diradj group=tment;\nrun;\n\n%areastepby(gsurv,sampnum,tment,0,followup,surv,3);\ntitle \"Placebo\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n%areastepby(gsurv,sampnum,tment,1,followup,surv,3);\ntitle \"CyA\";\nproc means data=last mean stddev;\n    var mu;\nrun;\n\n\n\n\n\n\n\n\nFigure 4.10\n\nRSAS\n\n\n\n\nCode show/hide\n# Cumulative incidences are estimated using Aalen-Johansen\n\n# Overall survival \noverall_surv <- survfit(Surv(days, status != 0) ~ 1, \n                        data = subset(pbc3, tment_char == \"Placebo\"))\n\n# Cause 1 survival: transplantation\nlibrary(mets)\ncause1_cif <- cif(Event(days, status) ~ 1, \n                  data = subset(pbc3, tment_char == \"Placebo\"), \n                  cause = 1)\n\n# Cause 2 survival: death w/o transplantation\ncause2_cif <- cif(Event(days, status) ~ 1, \n                  data = subset(pbc3, tment_char == \"Placebo\"), \n                  cause = 2)\n\n# Get them on the same time scale - book keeping\n\nalltimes <- overall_surv$time\ncause1st <- stepfun(x = cause1_cif$cumhaz[,1], y = c(0, cause1_cif$cumhaz[,2]))\ncause1times <- cause1st(v = alltimes)\n\ncause2st <- stepfun(x = cause2_cif$cumhaz[,1], y = c(0, cause2_cif$cumhaz[,2]))\ncause2times <- cause2st(v = alltimes)\n\n\n# Collect the data \ndata_comb <- data.frame(cif = c(overall_surv$surv + cause1times + cause2times, \n                                cause1times + cause2times, \n                                cause1times),\n                        time = c(alltimes, alltimes, alltimes),\n                        type = c(rep(\"Overall\", length(alltimes)), \n                                 rep(\"Transplantation + death without transplantation\", length(alltimes)), \n                                 rep(\"Transplantation\", length(alltimes)))\n                        )\n\n# Create Figure 4.10\nfig4.10 <- ggplot(aes(x = time / 365.25, y = cif, linetype = type), \n                data = data_comb) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Type\") + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Stacked cumulative incidence and survival\") + \n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), \n                     limits = c(0, 6), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), \n                     limits = c(0, 1.0), \n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general + \n  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + \n  theme(legend.position=\"bottom\",\n        legend.box=\"vertical\",\n        text = element_text(size=21), \n        legend.key.width = unit(1, \"cm\"))\n\nfig4.10\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3 noprint;\nmodel days*status(0)=;\nbaseline out=overallsurv survival=surv / method=;\nrun;\nproc sort;by tment days;run;\nproc phreg data=pbc3 noprint;\nmodel days*status(0)=/eventcode=1;\nstrata tment;\nbaseline out=cuminc1 cif=cif1;\nrun;\nproc sort;by tment days;run;\nproc phreg data=pbc3 noprint;\nmodel days*status(0)=/eventcode=2;\nstrata tment;\nbaseline out=cuminc2 cif=cif2;\nrun;\nproc sort;by tment days;run;\ndata plot0; \nmerge overallsurv cuminc1 cuminc2; \nby tment days;\nif tment=0;\nfail=1-surv;\nrun;\n\ndata plot0ok; \nset plot0;\nby days;\nretain last0 last1 last2;\nif fail=. then c0=last0; if fail ne . then c0=fail;\nif cif1=. then c1=last1; if cif1 ne . then c1=cif1;\nif cif2=. then c2=last2; if cif2 ne . then c2=cif2;\noutput;\nlast0=c0; last1=c1; last2=c2;\nrun;\ndata plot0ok; \nset plot0ok;\ncum1=c1; \ncum2=c1+c2; \ncum3=c1+c2+(1-c0);\nrun;\nproc print;run;\n\ndata plot0ok; \nset plot0ok; \ndaysyears = days/365.25; \nrun; \n\nproc gplot \ndata=plot0ok;\nplot cum1*daysyears cum2*daysyears cum3*daysyears /overlay haxis=axis1 vaxis=axis2;\naxis1 order=0 to 6 by 1 minor=none label=('Years');\naxis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');\nsymbol1  v=none i=stepjl c=blue;\nsymbol2  v=none i=stepjl c=red;\nsymbol3  v=none i=stepjl c=black;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 4.11\n\nRSAS\n\n\n\n\nCode show/hide\n# Cumulative incidences are (wrongly) estimated using Kaplan-Meier\n\n# Overall survival \noverall_surv <- survfit(Surv(days, status != 0) ~ 1, \n                        data = subset(pbc3, tment_char == \"Placebo\"))\n\n# Cause 1 survival: transplantation, KM\ncause1_cif_w <- survfit(Surv(days, status == 1) ~ 1, \n                        data = subset(pbc3, tment_char == \"Placebo\"))\n\n# Cause 2 survival: death w/o transplantation, KM\ncause2_cif_w <- survfit(Surv(days, status == 2) ~ 1, \n                      data = subset(pbc3, tment_char == \"Placebo\"))\n\n# Get them on the same time scale - book keeping\nalltimes <- overall_surv$time\ncause1st <- stepfun(x = cause1_cif_w$time, y = c(0, cause1_cif_w$surv))\ncause1times <- cause1st(v = alltimes)\n\ncause2st <- stepfun(x = cause2_cif_w$time, y = c(0, cause2_cif_w$surv))\ncause2times <- cause2st(v = alltimes)\n\n# Collect the data \ndata_comb <- data.frame(cif_w = c(overall_surv$surv + 1-cause1times + 1-cause2times, \n                                1-cause1times + 1-cause2times, \n                                1-cause1times),\n                        time = c(alltimes, alltimes, alltimes),\n                        type = c(rep(\"Overall\", length(alltimes)), \n                                 rep(\"Transplantation + death without transplantation\", length(alltimes)), \n                                 rep(\"Transplantation\", length(alltimes)))\n)\n\n\n\n# Create Figure\nfig4.11 <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type), \n                 data = data_comb) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Type\") + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Stacked cumulative incidence and survival\") + \n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), \n                     limits = c(0, 6), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), \n                     limits = c(0, 1.1), \n                     breaks = seq(0, 1.1, 0.1)) +\n  theme_general + \n  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + \n  theme(legend.box=\"vertical\",\n        text = element_text(size=21), \n        legend.key.width = unit(1, \"cm\"))\nfig4.11\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3 noprint;\n    model days*status(0 2)=;\n    strata tment;\n    baseline out=cuminc1wrng survival=s1wrng;\nrun;\n\nproc phreg data=pbc3 noprint;\n    model days*status(0 1)=;\n    baseline out=cuminc2wrng survival=s2wrng;\n    strata tment;\nrun;\n\ndata plot0wrng; \n    merge overallsurv cuminc1wrng cuminc2wrng; \n    where tment=0; by days;\nrun;\n\ndata plot0wrng; \n    set plot0wrng;\n    by days;\n    retain last1 last2;\n    if s1wrng=. then c1=last1; if s1wrng ne . then c1=1-s1wrng;\n    if s2wrng=. then c2=last2; if s2wrng ne . then c2=1-s2wrng;\n    output;\n    last1=c1; last2=c2;\nrun;\n\ndata plot0wrng; \n    set plot0wrng;\n    cum1=c1; cum2=c1+c2; cum3=c1+c2+surv; one=1;\nrun;\n\ndata plot0wrng; \n    set plot0wrng; \n    daysyears = days/365.25; \nrun; \n\nproc gplot \n    data=plot0wrng;\n    plot cum1*daysyears cum2*daysyears cum3*daysyears one*daysyears\n         /overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1.1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\n    symbol3  v=none i=stepjl c=black;\n    symbol4  v=none i=stepjl l=2 c=black;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 4.12\n\nRSAS\n\n\n\nFigure 4.12 (a)\n\n\nCode show/hide\n# Overall\noverall_cox <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili + sex + age,\n                        data = subset(pbc3, !is.na(alb)),\n                     method = \"breslow\", eps=1e-9)\n\n# Cause 1: transplantation\ncause1_cox <- coxph(Surv(days, status == 1) ~ tment + alb + log2bili + sex + age,\n                    data = subset(pbc3, !is.na(alb)), \n                    method = \"breslow\", eps=1e-9)\n\n# Cause 2: death w/o transplantation\ncause2_cox <- coxph(Surv(days, status == 2) ~ tment + alb + log2bili + sex + age,\n                    data = subset(pbc3, !is.na(alb)), \n                    method = \"breslow\", eps=1e-9)\n\n\n# for tment = placebo, age = 40, alb = 38, bili = log2(45) and sex = F\nnewd <- data.frame(tment = 0, age = 40, \n                   alb = 38, log2bili = log2(45), \n                   sex = 0)\nest_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz \n\nest_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz \n\nest_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv\n\n# Calculate S, and F1 and F2\nalltimes <- basehaz(overall_cox, centered = F)$time\n\nA <- cumsum(diff(c(0, est_cause1 + est_cause2)))\ndA <- diff(c(0, A))\nS <- cumprod(1-dA) #exp(-cumsum(dA)) \nA1 <- est_cause1\nA2 <- est_cause2\n\ndat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))\ndat2 <- subset(dat, dA > 0)\ndat2$lagS <- with(dat2, c(0, S[-length(S)])) \n\ndat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))\ndat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))\n\n\n# Collect the data\ndata_comb <- with(dat2, \n                  data.frame(cif_w = c(rep(1, length(alltimes)),\n                                       F1 + F2,\n                                       F1),\n                             time = c(alltimes, alltimes, alltimes),\n                             type = c(rep(\"Overall\", length(alltimes)),\n                                      rep(\"Transplantation + death without transplantation\", length(alltimes)),\n                                      rep(\"Transplantation\", length(alltimes)))\n                  ))\n\n\n# Create Figure\nfig4.12a <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),\n                 data = data_comb) +\n  geom_step(linewidth = 1) +\n  scale_linetype_discrete(\"Type\") +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Stacked cumulative incidence and survival\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + \n  theme(legend.box=\"vertical\",\n        text = element_text(size=22), \n        legend.key.width = unit(1, \"cm\"))\n\nfig4.12a\n\n\n\n\n\n\n\nFigure 4.12 (b)\n\n\nCode show/hide\n# for tment = placebo, age = 40, alb = 20, bili = log2(90) and sex = F\nnewd <- data.frame(tment = 0, age = 40, \n                    alb = 20, log2bili = log2(90), \n                    sex = 0)\n\nest_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz\n\nest_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz\n\nest_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv\n\n\n# Calculate S, and F1 and F2\nalltimes <- basehaz(overall_cox, centered = F)$time\n\nA <- cumsum(diff(c(0, est_cause1 + est_cause2)))\ndA <- diff(c(0, A))\nS <- cumprod(1-dA) #exp(-cumsum(dA)) \nA1 <- est_cause1\nA2 <- est_cause2\n\ndat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))\ndat2 <- subset(dat, dA > 0)\ndat2$lagS <- with(dat2, c(0, S[-length(S)])) \n\ndat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))\ndat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))\n\n\n# Collect the data\ndata_comb <- with(dat2, \n                  data.frame(cif_w = c(rep(1, length(alltimes)),\n                                  F1 + F2,\n                                  F1),\n                        time = c(alltimes, alltimes, alltimes),\n                        type = c(rep(\"Overall\", length(alltimes)),\n                                 rep(\"Transplantation + death without transplantation\", length(alltimes)),\n                                 rep(\"Transplantation\", length(alltimes)))))\n\n# Create Figure\nfig4.12b <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),\n                 data = data_comb) +\n  geom_step(linewidth = 1) +\n  scale_linetype_discrete(\"Type\") +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Stacked cumulative incidence and survival\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + \n  theme(legend.box=\"vertical\",\n        text = element_text(size=22), \n        legend.key.width = unit(1, \"cm\"))\n\n\nfig4.12b\n\n\n\n\n\n\n\nFigure 4.12 (c)\n\n\nCode show/hide\n# for tment = placebo, age = 60, alb = 38, bili = log2(45) and sex = F\nnewd <- data.frame(tment = 0, age = 60, \n                   alb = 38, log2bili = log2(45), \n                   sex = 0)\n\nest_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz\n\nest_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz\n\nest_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv\n\n\n# Calculate S, and F1 and F2\nalltimes <- basehaz(overall_cox, centered = F)$time\n\nA <- cumsum(diff(c(0, est_cause1 + est_cause2)))\ndA <- diff(c(0, A))\nS <- cumprod(1-dA) #exp(-cumsum(dA)) \nA1 <- est_cause1\nA2 <- est_cause2\n\ndat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))\ndat2 <- subset(dat, dA > 0)\ndat2$lagS <- with(dat2, c(0, S[-length(S)])) \n\ndat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))\ndat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))\n\n\n# Collect the data\ndata_comb <- with(dat2, \n                  data.frame(cif_w = c(rep(1, length(alltimes)), F1 + F2, F1),\n                             time = c(alltimes, alltimes, alltimes),\n                             type = c(rep(\"Overall\", length(alltimes)),\n                                      rep(\"Transplantation + death without transplantation\",\n                                          length(alltimes)),\n                                      rep(\"Transplantation\", length(alltimes)))))\n\n# Create Figure\nfig4.12c <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),\n                 data = data_comb) +\n  geom_step(linewidth = 1) +\n  scale_linetype_discrete(\"Type\") +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Stacked cumulative incidence and survival\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 6),\n                     breaks = seq(0, 6, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general + \n  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + \n  theme(legend.position=\"bottom\",\n        legend.box=\"vertical\",\n        text = element_text(size=22), \n        legend.key.width = unit(1, \"cm\"))\n\n\nfig4.12c\n\n\n\n\n\n\n\n\n\nMacro and double data set\nThe SAS macro below can alternatively be loaded using this code:\n\n\nCode show/hide\nfilename cumincpr url 'http://publicifsv.sund.ku.dk/~pka/CumInc.sas';\n%inc cumincpr;\n\n\n\n\nCode show/hide\n%macro CumInc(Data,Strata,Time,Surv);\n\n/* Number of Stratas */\n  \n  proc sort data=&Data;\nby &Strata;\n\ndata nstrat;\nset &Data end=last;\nby &Strata;\nfirstS=first.&Strata;\nretain nStrata 0;\nnStrata+firstS;\nif last then call symput('nStrata',nStrata);\ndrop firstS;\nrun;\n\n\n/* Observations in ciData are deleted */\n  \n  \n  data newData; \nset &Data;\nstart=(&Time eq 0);   \nretain komb 0;\nkomb+start;\nmed=0;\n%do k=0 %to (&nStrata-1) %by 1;\nmed=med+(komb eq (1+&k*(&nStrata+1)));\n%end;\nif (med eq 1);  \ndrop start med komb;\nrun;\n\n/* Time vector */\n  \n  proc sort data=newData;\nby &Time;\n\ndata Time (keep=&Time); \nset newData;\n%do i=1 %to &nStrata %by 1;\nif &Time=lag(&Time) then delete;\n%end;\n\n\n/* Strata vector */\n  \n  proc sort data=newData;\nby &Strata &Time;\n\ndata temp1;\nset newData; by &Strata;\nretain stratum 0;\nstratum+first.&Strata;\n\n/*  A=sum(A_1,...,A_nStrata) */\n  \n  %do i=1 %to &nStrata %by 1;\ndata data&i;\nset temp1;\nif stratum=&i;\n\ndata data&i (keep = &Time A&i);\nmerge data&i Time; by &Time;  \nretain Surv&i;\nif not (&Surv=.) then Surv&i=&Surv;\nA&i=-log(Surv&i);\n\n%end;\n\n\ndata A_and_S;\nA=0;\n%do i=1 %to &nStrata %by 1;\nmerge data&i; by &Time;\nA+A&i;\n%end;\n\ndA=A-lag(A);\nif dA eq . then dA=0;\n\nretain S 1;\nS+S*(1-dA)-S;\nlagS=lag(S);\nrun;\n\n\n\n/* Output */\n  \n  data temp2 (keep = &Strata &Time);\nset temp1; \nproc sort data=temp2; by &Time;\n\ndata temp3;\nmerge temp2 A_and_S; by &Time;\nproc sort data=temp3; by &Strata &Time;\n\n\ndata data0 (keep = &Time p stratum);\nset temp3; by &Strata;\n*   lagS=lag(S);\n\nif first.&Strata then do;\nlagS=1; end;\n\nretain stratum 0;\nstratum+first.&Strata;\n\n%do i=1 %to &nStrata %by 1;\nlagA&i=lag(A&i);\nif ((stratum eq &i) and (first.&Strata)) then lagA&i=0;\nif (stratum ne &i) then lagA&i=0;\n\nl&i=(stratum=&i)*(lagS*(A&i-lagA&i));\nretain p&i 0;\np&i+l&i; \nif (stratum ne &i) then p&i=0;\n%end;\n\np=0;\n%do i=1 %to &nStrata %by 1;\np=p+p&i; %end;\nrun;\n\n\n\n\n\n/* put data into the right form */\n  \n  %do i=1 %to &nStrata;\ndata data&i;\nset data0;\nif (stratum eq &i);\np0&i=p; drop p stratum;\n\nproc sort data=data&i;\nby &Time;\n%end;\n\ndata data;\nset data1;\n%do i=1 %to &nStrata;\ndata data;\nmerge data data&i;\nby &Time;\n%end;\n\n\n* and complete the p-s;\n\nproc sort data=data;\n by &Time;\n\ndata data; \n set data end=last;\n  by &Time;\n   n=_N_;\n  if last then call symput('nobs',n);\n  drop n;\n\ndata data;\n set data;\n  %do i=1 %to &nStrata;\n   %do j=1 %to &nobs;\n    dummy=lag(p0&i);\n    if (p0&i eq .) then p0&i=dummy;\n   %end;\n  %end;\n  drop dummy;\n  p00=1;\n  %do i=1 %to &nStrata;\n   p00=p00-p0&i;\n  %end;\nrun;\n%mend CumInc;\n\n\n* Cuminc macro requires duplication; \ndata pbc32; \n    set pbc3 pbc3;\n    h=1+(_N_ gt 349);\n    time=days;\n    d=(status=1)*(h=1)+(status=2)*(h=2);\n    tment1=tment*(h=1); tment2=tment*(h=2);\n    sex1=sex*(h=1); sex2=sex*(h=2);\n    age1=age*(h=1); age2=age*(h=2);\n    alb1=alb*(h=1); alb2=alb*(h=2);\n    log2bili1=log2bili*(h=1); log2bili2=log2bili*(h=2);\nrun;\n\n\n\n\nFigure 4.12 (a)\n\n\nCode show/hide\ndata cov;\n  input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n  datalines; \n  0 0 0 0 40 0 38 0 45 0\n  0 0 0 0 0 40 0 38 0 45\n  ;\nrun;\ndata cov; \n  set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n                    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata data; set data; tment=0; run;\ndata plot1; \n    set data; \n    cum1=p01; cum2=p01+p02; cum3=1;\n    p = p01+p02+p00;\nrun;\ndata plot1; \n    set plot1; \n    daysyears = time/365.25; \nrun; \nproc gplot data=plot1;\n    plot cum1*daysyears cum2*daysyears cum3*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\n    symbol3  v=none i=stepjl c=black;\nrun;\nquit;\n\n\n\n\nFigure 4.12 (b)\n\n\nCode show/hide\ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    0 0 0 0 40 0 20 0 90 0\n    0 0 0 0 0 40 0 20 0 90\n    ;\nrun;\ndata cov; \n  set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n                    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata data; set data; tment=0; run;\ndata plot2plac; set data; \n    cum1=p01; cum2=p01+p02; cum3=1;\nrun;\ndata plot2plac; \n    set plot2plac; \n    daysyears = time/365.25; \nrun; \nproc gplot data=plot2plac;\n    plot cum1*daysyears cum2*daysyears cum3*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\n    symbol3  v=none i=stepjl c=black;\nrun;\nquit;\n\n\n\n\nFigure 4.12 (c)\n\n\nCode show/hide\ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    0 0 0 0 60 0 38 0 45 0\n    0 0 0 0 0 60 0 38 0 45\n    ;\nrun;\ndata cov;\n    set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n                    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata data; set data; tment=0; run;\ndata plot3plac; set data; \n    cum1=p01; cum2=p01+p02; cum3=1;\nrun;\ndata plot3plac; \n    set plot3plac; \n    daysyears = time/365.25; \nrun; \nproc gplot data=plot3plac;\n    plot cum1*daysyears cum2*daysyears cum3*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\n    symbol3  v=none i=stepjl c=black;\nrun;\nquit;\n\n\n\n\n\n\n\n\nTable 4.2\n\nRSAS\n\n\n\nScenario 1 (no adjustment)\n\n\nCode show/hide\nlibrary(\"survRM2\")\n\n# No adjustment \ncoxsurv <- coxph(Surv(days, status != 0) ~ strata(tment), data = pbc3, \n                      method = \"breslow\")\n\n# death w/o transplant\ncox1 <- coxph(Surv(days, status == 2) ~ strata(tment), data = pbc3, \n              method = \"breslow\")\n\n# transplant\ncox2 <- coxph(Surv(days, status == 1) ~ strata(tment), data = pbc3, \n              method = \"breslow\")\n\ntime <- basehaz(cox1, center = F)$time\nsurv <- exp(-basehaz(coxsurv, center = F)$hazard)\nlamd1 <- basehaz(cox1, center = F)$hazard\nlamd2 <- basehaz(cox2, center = F)$hazard\nstrat <- basehaz(cox1, center = F)$strata\n  \n# Cumulative incidence\nF01_plac <- cumsum(surv[strat == \"tment=0\"] * diff(c(0,lamd1[strat == \"tment=0\"])))\nF01_cya <- cumsum(surv[strat == \"tment=1\"] * diff(c(0,lamd1[strat == \"tment=1\"])))\n\nF02_plac <- cumsum(surv[strat == \"tment=0\"] * diff(c(0,lamd2[strat == \"tment=0\"])))\nF02_cya <- cumsum(surv[strat == \"tment=1\"] * diff(c(0,lamd2[strat == \"tment=1\"])))\n\ntimep <- time[strat == \"tment=0\"]\ntimec <- time[strat == \"tment=1\"]\n\n# Transplantation\nscenario1.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F02_plac[timep <= 3 * 365.25])/365.25,\nCyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F02_cya[timec <= 3 * 365.25])/365.25)\n\n# Death without transplantation\nscenario1.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F01_plac[timep <= 3 * 365.25])/365.25,\nCyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F01_cya[timec <= 3 * 365.25])/365.25)\nscenario1.T;scenario1.D \n\n\n   Placebo        CyA \n0.14268790 0.08567096 \n\n\n  Placebo       CyA \n0.2499754 0.2365865 \n\n\n\n\nScenario 1 (no adjustment) using mets package\n\n\nCode show/hide\nlibrary(mets)\nrmc1 <- cif.yearslost(Event(days/365.25,status)~strata(tment), \n                      data=pbc3, time=3)\nsummary(rmc1)\n\n\n  strata times     intF11    intF12  se.intF11  se.intF12 total.years.lost\n1      0     3 0.14274534 0.2511599 0.04083718 0.05260692        0.3939052\n2      1     3 0.08637516 0.2359673 0.03029502 0.05031025        0.3223425\n\n\n\n\nScenario 2\n\n\nCode show/hide\ncoxsurv <- coxph(Surv(days/365.25, status != 0) ~ tment + sex + age + alb + log2bili,\n                 data = pbc3, method = \"breslow\")\n# death w/o transplant\ncox1 <- coxph(Surv(days/365.25, status == 2) ~ tment + sex + age + alb + log2bili,\n              data = pbc3, method = \"breslow\")\n# transplant\ncox2 <- coxph(Surv(days/365.25, status == 1) ~ tment + sex + age + alb + log2bili,\n              data = pbc3, method = \"breslow\")\n\n# Sex = F, age = 40, alb = 38, bili = 45\n# Predictions \nnewd <- data.frame(tment = c(0, 1),\n                   sex = c(0, 0),\n                   age = c(40, 40),\n                   alb = c(38, 38), \n                   log2bili = log2(c(45, 45)))\n\n# predictions\ntime <- basehaz(cox1, center = F)$time\nsurv <- exp(-basehaz(coxsurv, center = F)$hazard)\nlamd1 <- basehaz(cox1, center = F)$hazard\nlamd2 <- basehaz(cox2, center = F)$hazard\n\nlpsurv <- predict(coxsurv, newd, type = \"lp\", reference = \"zero\")\nlpcox1 <- predict(cox1, newd, type = \"lp\", reference = \"zero\")\nlpcox2 <- predict(cox2, newd, type = \"lp\", reference = \"zero\")\n\n# Linear predictors\nsurv_plac <- surv^exp(lpsurv[1])\nsurv_cya <- surv^exp(lpsurv[2])\n\nlamd1_plac <- lamd1 * exp(lpcox1[1])\nlamd1_cya <- lamd1 * exp(lpcox1[2])\n\nlamd2_plac <- lamd2 * exp(lpcox2[1])\nlamd2_cya <- lamd2 * exp(lpcox2[2])\n\n# Cumulative incidence\nF01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))\nF01_cya  <- cumsum(surv_cya * diff(c(0,lamd1_cya)))\n\nF02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))\nF02_cya  <- cumsum(surv_cya * diff(c(0,lamd2_cya)))\n\ntimep <- timec <- time\n\n# Transplantation\nscenario2.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F02_plac[timep <= 3]),\nCyA=sum(diff(c(0, timec[timec <= 3])) * F02_cya[timec <= 3]))\n\n# Death without transplantation\nscenario2.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F01_plac[timep <= 3]),\n                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F01_cya[timec  <= 3])\n                 )\nscenario2.T;scenario2.D \n\n\n  Placebo       CyA \n0.2204065 0.1161289 \n\n\n   Placebo        CyA \n0.09008897 0.06091087 \n\n\n\n\nScenario 3\n\n\nCode show/hide\n# Sex = F, age = 40, alb = 20, bili = 90 #\n# Predictions \nnewd <- data.frame(tment = c(0, 1),\n                   sex = c(0, 0),\n                   age = c(40, 40),\n                   alb = c(20, 20), \n                   log2bili = log2(c(90, 90)))\n\n# predictions\ntime <- basehaz(cox1, center = F)$time\nsurv <- exp(-basehaz(coxsurv, center = F)$hazard)\nlamd1 <- basehaz(cox1, center = F)$hazard\nlamd2 <- basehaz(cox2, center = F)$hazard\n\nlpsurv <- predict(coxsurv, newd, type = \"lp\", reference = \"zero\")\nlpcox1 <- predict(cox1, newd, type = \"lp\", reference = \"zero\")\nlpcox2 <- predict(cox2, newd, type = \"lp\", reference = \"zero\")\n\n# Linear predictors\nsurv_plac <- surv^exp(lpsurv[1])\nsurv_cya <- surv^exp(lpsurv[2])\n\nlamd1_plac <- lamd1 * exp(lpcox1[1])\nlamd1_cya <- lamd1 * exp(lpcox1[2])\n\nlamd2_plac <- lamd2 * exp(lpcox2[1])\nlamd2_cya <- lamd2 * exp(lpcox2[2])\n\n# Cumulative incidence\nF01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))\nF01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))\n\nF02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))\nF02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))\n\ntimep <- timec <- time\n\n# Transplantation\nscenario3.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F02_plac[timep <= 3]),\n                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F02_cya[timec  <= 3])\n                 )\n\n# Death without transplantation\nscenario3.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F01_plac[timep <= 3]),\n                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F01_cya[timec  <= 3]))\nscenario3.T;scenario3.D\n\n\nPlacebo     CyA \n1.69057 1.06836 \n\n\n  Placebo       CyA \n0.4232820 0.3293008 \n\n\n\n\nScenario 4\n\n\nCode show/hide\n##### Sex = F, age = 60, alb = 38, bili = 45 #####\n\n# Predictions \nnewd <- data.frame(tment = c(0, 1),\n                   sex = c(0, 0),\n                   age = c(60, 60),\n                   alb = c(38, 38), \n                   log2bili = log2(c(45, 45)))\n\n# predictions\nlpsurv <- predict(coxsurv, newd, type = \"lp\", reference = \"zero\")\nlpcox1 <- predict(cox1, newd, type = \"lp\", reference = \"zero\")\nlpcox2 <- predict(cox2, newd, type = \"lp\", reference = \"zero\")\n\ntime <- basehaz(cox1, center = F)$time\nsurv <- exp(-basehaz(coxsurv, center = F)$hazard)\nlamd1 <- basehaz(cox1, center = F)$hazard\nlamd2 <- basehaz(cox2, center = F)$hazard\n\n# Linear predictors\nsurv_plac <- surv^exp(lpsurv[1])\nsurv_cya <- surv^exp(lpsurv[2])\n\nlamd1_plac <- lamd1 * exp(lpcox1[1])\nlamd1_cya <- lamd1 * exp(lpcox1[2])\n\nlamd2_plac <- lamd2 * exp(lpcox2[1])\nlamd2_cya <- lamd2 * exp(lpcox2[2])\n\n# Cumulative incidence\nF01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))\nF01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))\n\nF02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))\nF02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))\n\ntimep <- timec <- time\n\n# Transplantation\nscenario4.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F02_plac[timep <= 3]), \n                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F02_cya[timec  <= 3])\n                 )\n\n# Death without transplantation\nscenario4.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F01_plac[timep <= 3]),\n                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F01_cya[timec  <= 3])\n                 )\nscenario4.T;scenario4.D\n\n\n   Placebo        CyA \n0.07879677 0.04263005 \n\n\n  Placebo       CyA \n0.3678765 0.2544924 \n\n\n\n\n\n\nMacro for area under CIF\n\n\nCode show/hide\n%macro areastep(data,trt,grp,time,y,tau);\n    data select; set &data; where &trt=&grp;\n    run;\n    data select; set select;by &trt;\n        retain mu;\n        if first.&trt then mu=0;\n        if &time>&tau then do;\n        &time=&tau; &y=lag(&y); end;\n        mu+lag(&y)*(&time-lag(&time));\n        if last.&trt then do;\n        if &time<&tau then mu+(&tau-&time)*&y; end;\n    run;\n    data last;\n      set select;\n        by &trt;\n        if last.&trt;\n    run;\n    proc print; run;\n%mend areastep;\n\n\n\n\nScenario 1 (no adjustment)\n\n\nCode show/hide\n* No adjustment: Transplantation; \nproc phreg data=pbc3 noprint;\n    model followup*status(0)=/eventcode=1;\n    strata tment;\n    baseline out=cuminc1 cif=cif1 stdcif=std1;\nrun;\ntitle \"Placebo\";\n%areastep(cuminc1,tment,0,followup,cif1,3);\ntitle \"CyA\";\n%areastep(cuminc1,tment,1,followup,cif1,3);\n\n* No adjustment: Death wo transplant;\nproc phreg data=pbc3 noprint;\n    model followup*status(0)=/eventcode=2;\n    strata tment;\n    baseline out=cuminc2 cif=cif2 stdcif=std2;\nrun;\ntitle \"Placebo\";\n%areastep(cuminc2,tment,0,followup,cif2,3);\ntitle \"CyA\";\n%areastep(cuminc2,tment,1,followup,cif2,3);\n\n\n\n\nScenario 2\n\n\nCode show/hide\n*** age=40 alb=38 bili=45 ***; \n* CyA; \ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    1 0 0 0 40 0 38 0 45 0\n    0 1 0 0 0 40 0 38 0 45\n    ;\nrun;\n\ndata cov; set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\n\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata dataC; \n    set data; \n    tment=1; \nrun;\n%areastep(dataC,tment,1,time,p01,3);\n%areastep(dataC,tment,1,time,p02,3);\n\n* Placebo; \ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    0 0 0 0 40 0 38 0 45 0\n    0 0 0 0 0 40 0 38 0 45\n    ;\nrun;\ndata cov; set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n                                    log2bili1 log2bili2;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata dataP; \nset data; \ntment=0; \nrun;\n%areastep(dataP,tment,0,time,p01,3);\n%areastep(dataP,tment,0,time,p02,3);\n\n\n\n\nScenario 3\n\n\nCode show/hide\n*** age=40 alb=20 bili=90 ***; \n* CyA; \ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    1 0 0 0 40 0 20 0 90 0\n    0 1 0 0 0 40 0 20 0 90\n    ;\nrun;\n\ndata cov; set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\n\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n\n%cuminc(cidata,h,time,surv);\n\ndata dataC; \n    set data; \n    tment=1; \nrun;\n\n%areastep(dataC,tment,1,time,p01,3);\n%areastep(dataC,tment,1,time,p02,3);\n\n* Placebo; \ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    0 0 0 0 40 0 20 0 90 0\n    0 0 0 0 0 40 0 20 0 90\n    ;\nrun;\n\ndata cov; set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata dataP; \n    set data; \n    tment=0; \nrun;\n%areastep(dataP,tment,0,time,p01,3);\n%areastep(dataP,tment,0,time,p02,3);\n\n\n\n\nScenario 4\n\n\nCode show/hide\n*** age=60 alb=38 bili=45 ***; \n* CyA; \ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    1 0 0 0 60 0 38 0 45 0\n    0 1 0 0 0 60 0 38 0 45\n    ;\nrun;\ndata cov; set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata dataC; \n    set data; \n    tment=1; \nrun;\n%areastep(dataC,tment,1,time,p01,3);\n%areastep(dataC,tment,1,time,p02,3);\n\n* Placebo; \ndata cov;\n    input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;\n    datalines; \n    0 0 0 0 60 0 38 0 45 0\n    0 0 0 0 0 60 0 38 0 45\n    ;\nrun;\ndata cov; set cov;\n    if log2bili1>0 then log2bili1=log2(log2bili1);\n    if log2bili2>0 then log2bili2=log2(log2bili2);\nrun;\nproc phreg data=pbc32 noprint;\n    model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 \n    log2bili1 log2bili2/rl;\n    strata h;\n    baseline out=cidata covariates=cov survival=surv/nomean method=ch;\nrun;\n%cuminc(cidata,h,time,surv);\ndata dataP; \n    set data; \n    tment=0; \nrun;\n%areastep(dataP,tment,0,time,p01,3);\n%areastep(dataP,tment,0,time,p02,3);\n\n\n\n\n\n\n\n\nTable 4.4\n\nRSAS\n\n\n\nUsing survRM2 package\nHere we get the same as in SAS PROC RMSTREG\n\n\nCode show/hide\nlibrary(\"survRM2\")\npbcsub <- subset(pbc3,!is.na(alb))\ntime   <- pbcsub$days/365.25\nstatus <- pbcsub$status!=0\narm    <- pbcsub$tment==\"1\"\nalb    <- pbcsub$alb\nlogbili<- log2(pbcsub$bili)\nxx <- cbind(alb, logbili)\nrmst2(time, status, arm, tau=3, covariates=xx)\n\n\n\nThe truncation time: tau = 3  was specified. \n\nSummary of between-group contrast (adjusted for the covariates) \n                      Est. lower .95 upper .95     p\nRMST (arm=1)-(arm=0) 0.168     0.016     0.320 0.031\nRMST (arm=1)/(arm=0) 1.065     1.004     1.130 0.037\nRMTL (arm=1)/(arm=0) 0.548     0.364     0.823 0.004\n\n\nModel summary (difference of RMST) \n            coef se(coef)      z     p lower .95 upper .95\nintercept  2.376    0.381  6.241 0.000     1.630     3.122\narm        0.168    0.078  2.160 0.031     0.016     0.320\nalb        0.031    0.008  4.058 0.000     0.016     0.045\nlogbili   -0.214    0.034 -6.207 0.000    -0.281    -0.146\n\n\nModel summary (ratio of RMST) \n            coef se(coef)      z     p exp(coef) lower .95 upper .95\nintercept  0.882    0.151  5.827 0.000     2.415     1.795     3.249\narm        0.063    0.030  2.089 0.037     1.065     1.004     1.130\nalb        0.011    0.003  3.859 0.000     1.012     1.006     1.017\nlogbili   -0.085    0.016 -5.499 0.000     0.918     0.891     0.947\n\n\nModel summary (ratio of time-lost) \n            coef se(coef)      z     p exp(coef) lower .95 upper .95\nintercept -0.142    0.802 -0.177 0.860     0.868     0.180     4.183\narm       -0.602    0.208 -2.895 0.004     0.548     0.364     0.823\nalb       -0.095    0.017 -5.469 0.000     0.909     0.878     0.941\nlogbili    0.524    0.061  8.540 0.000     1.689     1.498     1.906\n\n\n\n\nUsing mets package\nHowever, this does not align exactly with survRM2 package?\n\n\nCode show/hide\nlibrary(mets)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\nresmeanIPCW(Event(followup,fail)~factor(tment)+alb+log2bili,\n            data=pbcsub, time=3, model=\"lin\",\n            cens.model=~strata(tment))\n\n\n\n   n events\n 343     67\n\n 343 clusters\ncoeffients:\n                Estimate   Std.Err      2.5%     97.5% P-value\n(Intercept)     2.722803  1.326849  0.122227  5.323380  0.0402\nfactor(tment)1  0.144855  0.085063 -0.021866  0.311576  0.0886\nalb             0.022829  0.027178 -0.030438  0.076096  0.4009\nlog2bili       -0.223035  0.093775 -0.406830 -0.039240  0.0174\n\nexp(coeffients):\n               Estimate     2.5%    97.5%\n(Intercept)    15.22293  1.13001 205.0758\nfactor(tment)1  1.15587  0.97837   1.3656\nalb             1.02309  0.97002   1.0791\nlog2bili        0.80009  0.66576   0.9615\n\n\n\n\n\n\n\nCode show/hide\nproc rmstreg data=pbc3 tau=3;\n  model followup*status(0)=tment alb log2bili / \n        link=linear method=ipcw(strata=tment);\nrun;\n\n\n\n\n\n\n\nIn-text: RMST g-formula and bootstrap\n\nRSAS\n\n\n\n\nCode show/hide\npbcsub <- subset(pbc3,!is.na(alb))\ntime   <- pbcsub$days/365.25\nstatus <- pbcsub$status!=0\narm    <- pbcsub$tment==\"1\"\nalb    <- pbcsub$alb\nlogbili<- log2(pbcsub$bili)\nxx <- cbind(alb, logbili)\ntrydata<-as.data.frame(cbind(arm,time,status,xx))\n\nboot.fun <- function(dat, index){\nbdata <- dat[index,]\nobj<-rmst2(bdata$time,bdata$status,bdata$arm,tau=3,\n           covariates=cbind(bdata$alb,bdata$logbili))\nrmst0<-obj$RMST.difference.adjusted[1,1]+\n  obj$RMST.difference.adjusted[2,1]*0+\n  obj$RMST.difference.adjusted[3,1]*bdata$alb+\n  obj$RMST.difference.adjusted[4,1]*bdata$logbili\nrmst1<-obj$RMST.difference.adjusted[1,1]+\n  obj$RMST.difference.adjusted[2,1]*1+\n  obj$RMST.difference.adjusted[3,1]*bdata$alb+\n  obj$RMST.difference.adjusted[4,1]*bdata$logbili\ndiff<-rmst1-rmst0\nres<-cbind(mean(rmst0),mean(rmst1),mean(diff))\nreturn(res)\n}\n\nlibrary(boot)\nB<-200\nbootres <- boot(trydata, boot.fun, R = B)\n\n# mean and SD\nrbind(\n  cbind(Placebo=mean(bootres$t[,1]),\n        CyA=mean(bootres$t[,2]),\n        Diff=mean(bootres$t[,3])),\n  cbind(Placebo=sqrt(var(bootres$t[,1])),\n        CyA=sqrt(var(bootres$t[,2])),\n        Diff=sqrt(var(bootres$t[,3])))\n)\n\n\n        Placebo        CyA       Diff\n[1,] 2.56815001 2.72999845 0.16184844\n[2,] 0.06209124 0.05416741 0.07844583\n\n\n\n\n\n\n\n\n\n\nTable 4.5\n\nRSAS\n\n\n\nUsing mets package\n\n\nCode show/hide\nlibrary(mets)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\nsubpbc<-subset(pbc3, !is.na(alb))\nsubpbc$tment<-factor(subpbc$tment)\n\n# Death w/o transplant\nfgdeath<-cifreg(Event(days,status)~factor(tment)+alb+log2bili+sex+age, cause=2, \n                data = subpbc, propodds=NULL)\nfgdeath\n\n\nCall:\ncifreg(formula = Event(days, status) ~ factor(tment) + alb + \n    log2bili + sex + age, data = subpbc, cause = 2, propodds = NULL)\n\n   n events\n 343     60\n\n 343 clusters\ncoeffients:\n                Estimate      S.E.   dU^-1/2 P-value\nfactor(tment)1 -0.352775  0.260075  0.267053  0.1750\nalb            -0.061245  0.030848  0.028700  0.0471\nlog2bili        0.615653  0.088872  0.090387  0.0000\nsex             0.414735  0.316821  0.312520  0.1905\nage             0.087488  0.015744  0.016208  0.0000\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\nfactor(tment)1  0.70274 0.42210 1.1700\nalb             0.94059 0.88541 0.9992\nlog2bili        1.85087 1.55499 2.2030\nsex             1.51397 0.81365 2.8171\nage             1.09143 1.05826 1.1256\n\n\nCode show/hide\n# Transplant\nfgtrans<-cifreg(Event(days,status)~factor(tment)+alb+log2bili+sex+age, cause=1, \n                data = subpbc, propodds=NULL, cox.prep=TRUE)\nfgtrans\n\n\nCall:\ncifreg(formula = Event(days, status) ~ factor(tment) + alb + \n    log2bili + sex + age, data = subpbc, cause = 1, propodds = NULL, \n    cox.prep = TRUE)\n\n   n events\n 343     28\n\n 343 clusters\ncoeffients:\n                Estimate      S.E.   dU^-1/2 P-value\nfactor(tment)1 -0.407479  0.368430  0.403161  0.2687\nalb            -0.069736  0.032685  0.038429  0.0329\nlog2bili        0.619024  0.101177  0.128955  0.0000\nsex             0.087804  0.579890  0.551723  0.8796\nage            -0.075062  0.017119  0.020770  0.0000\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\nfactor(tment)1  0.66533 0.32317 1.3698\nalb             0.93264 0.87477 0.9943\nlog2bili        1.85711 1.52306 2.2644\nsex             1.09177 0.35037 3.4020\nage             0.92769 0.89708 0.9593\n\n\n\n\nUsing survival package\n\n\nCode show/hide\n# Death w/o transplant\n# Two step\nfg_c2 <- finegray(Surv(days, as.factor(status)) ~ ., etype = 2,\n                  data = subset(pbc3, !is.na(alb)))\nfg_cox2 <- coxph(Surv(fgstart, fgstop, fgstatus) ~ \n                   tment + alb + log2bili + sex + age, \n                 weight = fgwt, data = fg_c2, eps=1e-9)\nsummary(fg_cox2)\n\n\nCall:\ncoxph(formula = Surv(fgstart, fgstop, fgstatus) ~ tment + alb + \n    log2bili + sex + age, data = fg_c2, weights = fgwt, eps = 1e-09)\n\n  n= 1004, number of events= 60 \n\n             coef exp(coef) se(coef) robust se      z Pr(>|z|)    \ntment    -0.35282   0.70270  0.26705   0.25111 -1.405   0.1600    \nalb      -0.06122   0.94062  0.02870   0.02933 -2.087   0.0369 *  \nlog2bili  0.61556   1.85069  0.09038   0.08521  7.224 5.06e-13 ***\nsex       0.41484   1.51412  0.31251   0.30590  1.356   0.1751    \nage       0.08748   1.09142  0.01621   0.01507  5.804 6.47e-09 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n         exp(coef) exp(-coef) lower .95 upper .95\ntment       0.7027     1.4231    0.4296    1.1495\nalb         0.9406     1.0631    0.8881    0.9963\nlog2bili    1.8507     0.5403    1.5660    2.1871\nsex         1.5141     0.6604    0.8313    2.7577\nage         1.0914     0.9162    1.0597    1.1241\n\nConcordance= 0.829  (se = 0.024 )\nLikelihood ratio test= 89.68  on 5 df,   p=<2e-16\nWald test            = 111.5  on 5 df,   p=<2e-16\nScore (logrank) test = 93.71  on 5 df,   p=<2e-16,   Robust = 43.86  p=2e-08\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n# Transplant\n# Two step\nfg_c1 <- finegray(Surv(days, as.factor(status)) ~ ., etype = 1,\n                  data = subset(pbc3, !is.na(alb)))\nfg_cox1 <- coxph(Surv(fgstart, fgstop, fgstatus) ~ \n                   tment + alb + log2bili + sex + age, \n                 weight = fgwt, data = fg_c1, eps=1e-9)\nsummary(fg_cox1)\n\n\nCall:\ncoxph(formula = Surv(fgstart, fgstop, fgstatus) ~ tment + alb + \n    log2bili + sex + age, data = fg_c1, weights = fgwt, eps = 1e-09)\n\n  n= 1068, number of events= 28 \n\n             coef exp(coef) se(coef) robust se      z Pr(>|z|)    \ntment    -0.40756   0.66527  0.40311   0.34977 -1.165   0.2439    \nalb      -0.06960   0.93276  0.03844   0.03005 -2.316   0.0205 *  \nlog2bili  0.61867   1.85646  0.12892   0.09119  6.785 1.16e-11 ***\nsex       0.09043   1.09465  0.55193   0.55524  0.163   0.8706    \nage      -0.07507   0.92768  0.02077   0.01590 -4.720 2.36e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n         exp(coef) exp(-coef) lower .95 upper .95\ntment       0.6653     1.5031    0.3352    1.3205\nalb         0.9328     1.0721    0.8794    0.9894\nlog2bili    1.8565     0.5387    1.5526    2.2198\nsex         1.0946     0.9135    0.3687    3.2501\nage         0.9277     1.0780    0.8992    0.9570\n\nConcordance= 0.858  (se = 0.025 )\nLikelihood ratio test= 52.17  on 5 df,   p=5e-10\nWald test            = 78.57  on 5 df,   p=2e-15\nScore (logrank) test = 56.42  on 5 df,   p=7e-11,   Robust = 21.26  p=7e-04\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\n\n\n\n\n\nCode show/hide\n* Death without transplantation; \nproc phreg data=pbc3;\n    class sex (ref='1') tment (ref='0');\n    model days*status(0)=sex tment age log2bili alb / rl eventcode=2;\nrun;\n\n* Transplantation; \nproc phreg data=pbc3;\n    class sex (ref='1') tment (ref='0');\n    model days*status(0)=sex tment age log2bili alb / rl eventcode=1;\nrun;\n\n\n\n\n\n\n\nIn-text: Fine-Gray and g-formula\nUsing mets package and not bootstrap as in book.\n\nRSAS\n\n\n\n\nCode show/hide\n# Fine-Gray models using package mets\nlibrary(mets)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\n# Transplant\nsubpbc<-subset(pbc3, !is.na(alb))\nsubpbc$trt<-factor(subpbc$tment)\nfgtrans<-cifreg(Event(days,status)~trt+alb+log2bili+sex+age, cause=1, \n                data = subpbc, propodds=NULL, cox.prep=TRUE)\nsummary(survivalG(fgtrans, subpbc, 2*365.25))\n\n\nrisk:\n      Estimate Std.Err    2.5%   97.5%   P-value\nrisk0  0.06890 0.01994 0.02983 0.10798 0.0005477\nrisk1  0.04895 0.01310 0.02327 0.07464 0.0001875\n\nAverage Treatment effects (G-estimator) :\n   Estimate Std.Err     2.5%   97.5% P-value\np1 -0.01995 0.01915 -0.05748 0.01758  0.2975\n\nAverage Treatment effect ratio (G-estimator) :\n      Estimate Std.Err      2.5%    97.5%   P-value\n[p1] 0.7104376 0.21938 0.2804607 1.140415 0.1868643\n\n\nCode show/hide\n# Death w/o transplant\nfgdeath<-cifreg(Event(days,status)~trt+alb+log2bili+sex+age, cause=2, \n                data = subpbc, propodds=NULL, cox.prep=TRUE)\nsummary(survivalG(fgdeath, subpbc, 2*365.25))\n\n\nrisk:\n      Estimate Std.Err    2.5%  97.5%   P-value\nrisk0  0.11694 0.02164 0.07453 0.1594 6.520e-08\nrisk1  0.08815 0.01890 0.05111 0.1252 3.107e-06\n\nAverage Treatment effects (G-estimator) :\n   Estimate Std.Err     2.5%   97.5% P-value\np1 -0.02879 0.02126 -0.07046 0.01289  0.1758\n\nAverage Treatment effect ratio (G-estimator) :\n      Estimate   Std.Err      2.5%    97.5%   P-value\n[p1] 0.7538432 0.1581281 0.4439178 1.063769 0.1195436\n\n\n\n\n\n\nCode show/hide\n\n\n\n\n\n\n\n\nFigure 4.17\n\nRSAS\n\n\n\nFigure 4.17 (a)\n\n\nCode show/hide\n# Fine-Gray model for death w/o transplant\n# Predictions \n# Placebo\nnewd_t0 <- data.frame(tment = 0, age = 40, \n                      alb = 38, log2bili = log2(45), \n                      sex = 0)\nC2_t0 <- survfit(fg_cox2, ctype = 2, newdata = newd_t0)$cumhaz \n\n# CyA\nnewd_t1 <- data.frame(tment = 1, age = 40, \n                      alb = 38, log2bili = log2(45), \n                      sex = 0)\nC2_t1 <- survfit(fg_cox2, ctype = 2, newdata = newd_t1)$cumhaz \n\ntime <- survfit(fg_cox2, ctype = 2, newdata = newd_t1)$time\n\n# Make data ready for plotting \npdata <- data.frame(time = c(time, time), \n                    cif = c(C2_t0, C2_t1), \n                    tment = c(rep(\"Placebo\", length(time)), \n                              rep(\"CyA\", length(time))))\n\n# Create Figure\nfig4.17a <- ggplot(aes(x = time / 365.25, y = cif, linetype = tment), \n                 data = pdata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_manual(\"Treatment\", values = c(\"dashed\", \"solid\"),guide = guide_legend(reverse = TRUE)) + \n  xlab(\"Time since randomization (years)\") + \n  ylab('Cumulative incidence for death w/o transplantation') + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), \n                     limits = c(0, 1.0), \n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general + \n  theme(legend.position=\"bottom\", legend.box = \"vertical\")\n      #  legend.key.size = unit(1.5, 'cm'))\n\nfig4.17a\n\n\n\n\n\n\n\nFigure 4.17 (b)\n\n\nCode show/hide\n# Fine-Gray model for transplant\n# Predictions \n# Placebo\nC1_t0 <- survfit(fg_cox1, ctype = 2, newdata = newd_t0)$cumhaz \n\n# CyA\nC1_t1 <- survfit(fg_cox1, ctype = 2, newdata = newd_t1)$cumhaz \n\ntime <- survfit(fg_cox1, ctype = 2, newdata = newd_t1)$time\n\n# Make data ready for plotting \npdata <- data.frame(time = c(time, time), \n                    cif = c(C1_t0, C1_t1), \n                    tment = c(rep(\"Placebo\", length(time)), \n                              rep(\"CyA\", length(time))))\n\n# Create Figure\nfig4.17b <- ggplot(aes(x = time / 365.25, y = cif, linetype = tment), \n                 data = pdata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_manual(\"Treatment\", values = c(\"dashed\", \"solid\"),guide = guide_legend(reverse = TRUE)) + \n  xlab(\"Time since randomization (years)\") + \n  ylab('Cumulative incidence for transplantation') + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), \n                     limits = c(0, 1.0), \n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general + \n  theme(legend.box = \"vertical\",\n        legend.key.size = unit(1.5, 'cm'))\n\n\nfig4.17b\n\n\n\n\n\n\n\n\n\nCovariate values\n\n\nCode show/hide\ndata cov0;\n    input sex tment age alb log2bili;\n    log2bili=log2(log2bili);\n    datalines;\n    0 0 40 38 45\n    ;\nrun;\ndata cov1;\n    input sex tment age alb log2bili;\n    log2bili=log2(log2bili);\n    datalines;\n    0 1 40 38 45\n    ;\nrun;\n\n\n\n\nFigure 4.17 (a)\n\n\nCode show/hide\n* For death without transplantation; \nproc phreg data=pbc3;\n    model days*status(0)=sex tment age log2bili alb/eventcode=2;\n    baseline out=cuminc20 covariates=cov0 cif=cif20;\nrun;\nproc phreg data=pbc3;\n    model days*status(0)=sex tment age log2bili alb/eventcode=2;\n    baseline out=cuminc21 covariates=cov1 cif=cif21;\nrun;\ndata cuminc2; \n    merge cuminc20 cuminc21; \n    by days; \nrun;\ndata cuminc2; \n    set cuminc2; \n    daysyears = days / 365.25; \nrun; \nproc gplot data=cuminc2;\n    plot cif20*daysyears cif21*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Cumulative incidences for death');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\nFigure 4.17 (b)\n\n\nCode show/hide\n* For transplantation; \nproc phreg data=pbc3;\n    *class sex tment (ref='0');\n    model days*status(0)=sex tment age log2bili alb/eventcode=1;\n    baseline out=cuminc10 covariates=cov0 cif=cif10;\nrun;\nproc phreg data=pbc3;\n    *class sex tment (ref='0');\n    model days*status(0)=sex tment age log2bili alb/eventcode=1;\n    baseline out=cuminc11 covariates=cov1 cif=cif11;\nrun;\ndata cuminc1; \n    merge cuminc10 cuminc11; \n    by days; \nrun;\ndata cuminc1; \n    set cuminc1; \n    daysyears = days / 365.25; \nrun; \nproc gplot data=cuminc1;\n    plot cif10*daysyears cif11*daysyears/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Cumulative incidence for transpl.');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\n\nTable 4.6\n\nR\n\n\n\nCreate R function rmtl.ipcw()\nThe function rmtl.ipcw() fit a restricted mean time lost regression model using IPCW with competing risks data.\n\n\nCode show/hide\n### Note: This code is modified from the original 'rmst2reg function' of the\n### survRM2 package, which was authored by Hajime Uno, Lu Tian, Angel Cronin, \n### Chakib Battioui, and Miki Horiguchi, in order to account for competing risks.\n### Last updated by Sarah Conner on October 22, 2020\n\nlibrary(survival)\n\nrmtl.ipcw <- function(times, event, eoi=1, tau, cov=NULL, strata=FALSE, group=NULL){\n  \n  if(is.null(group) & strata==TRUE){stop('Please specify a factor variable to statify weights.')}\n  if(is.null(cov)){print('Warning: Fitting intercept-only model.')}\n  \n  # Round event times to avoid issues with survival() package rounding differently\n  y <- round(times,4)\n  id <- 1:length(y)\n  \n  # Recode so delta1 reflects event of interest, delta2 reflects all competing events. Assumes 0=censoring.\n  delta1 <- ifelse(event==eoi, 1, 0)\n  delta2 <- ifelse(event!=0 & event!=eoi, 1, 0)\n  \n  # Overall quantities\n  x <- cbind(int=rep(1, length(y)), cov)\n  p <- length(x[1,])\n  if(is.null(group)){group <- as.factor(rep(1, length(y)))}\n  \n  # Recode event indicators to reflect status at chosen tau\n  delta1[y>tau] <- 0\n  delta2[y>tau] <- 0\n  \n  y <- pmin(y, tau)\n  y1 <- y*delta1\n  \n  d0 <- 1 - (delta1 + delta2) # censoring indicator\n  d0[y==tau] <- 0  # If follow-up lasts til tau, the event will not count as 'censored' in IPCW weights\n  weights <- NULL\n  \n  ## Calculate IPCW weights (option to stratify by group) ## \n  \n  if(strata==TRUE){\n    for(aa in 1:length(unique(group))){\n      # Subset the group\n      a <- unique(group)[aa]\n      d0.a <- d0[group==a]\n      delta1.a <- delta1[group==a]\n      y.a <- y[group==a]\n      x.a <- x[group==a,]\n      n.a <- length(d0.a)\n      orig.id.a0 <- orig.id.a <- id[group==a]\n      \n      # Order the event times\n      id.a <- order(y.a)\n      y.a <- y.a[id.a]\n      d0.a <- d0.a[id.a]\n      delta1.a <- delta1.a[id.a]\n      x.a <- x.a[id.a,]\n      orig.id.a <- orig.id.a[id.a]\n      \n      # Derive IPCW\n      fit <- survfit(Surv(y.a, d0.a) ~ 1)\n      weights.a <- (1-d0.a)/rep(fit$surv, table(y.a))\n      \n      # Need to assign weights accordig to original ID, not ordered by event time\n      linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a)\n      weights <- rbind(weights, linked.weights.a)\n    }\n  } else {\n    \n    # Order the event times\n    id.a <- order(y)\n    y.a <- y[id.a]\n    d0.a <- d0[id.a]\n    delta1.a <- delta1[id.a]\n    x.a <- x[id.a,]\n    orig.id.a <- id[id.a]\n    \n    # Derive IPCW\n    fit <- survfit(Surv(y.a, d0.a) ~ 1)\n    weights.a <- (1-d0.a)/rep(fit$surv, table(y.a))\n    \n    # Need to assign weights accordig to original ID, not ordered by event time\n    linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a)\n    weights <- rbind(weights, linked.weights.a)\n  }\n  \n  \n  ## Fit linear model ## \n  \n  # Link weights to original data frame\n  #colnames(weights) <- c('id', 'weights')\n  #data <- merge(data0, weights, by='id')\n  #summary(lm(tau-y ~ x-1, weights=weights, data=data))\n  \n  # Or, sort weights and use vectors\n  w <- weights[order(weights[, 1]),2]\n  lm.fit <- lm(delta1*(tau-y) ~ x-1, weights=w)\n  \n  \n  ## Derive SE ##\n  \n  beta0 <- lm.fit$coef\n  error <- tau - y - as.vector(x %*% beta0)\n  score <- x * w * error\n  \n  # Kappa (sandwich variance components) stratified by group\n  kappa <- NULL\n  \n  for(aa in 1:length(unique(group))){\n    \n    # Subset the group\n    a <- unique(group)[aa]\n    d0.a <- d0[group==a]\n    delta1.a <- delta1[group==a]\n    y.a <- y[group==a]\n    x.a <- x[group==a,]\n    n.a <- length(d0.a)\n    orig.id.a0 <- orig.id.a <- id[group==a]\n    score.a <- score[group==a,]\n    \n    # Kappa calculations for sandwich variance\n    kappa.a <- matrix(0, n.a, p)\n    \n    for(i in 1:n.a){\n      kappa1 <- score.a[i,]\n    \n      kappa2 <- apply(score.a[y.a>=y.a[i],,drop=F], 2, sum)*(d0.a[i])/sum(y.a>=y.a[i])\n    \n      kappa3 <- rep(0, p)\n    \n      for(k in 1:n.a){\n        if(y.a[k]<=y.a[i]){\n          kappa3 <- kappa3+apply(score.a[y.a>=y.a[k],,drop=F], 2, sum)*(d0.a[k])/(sum(y.a>=y.a[k]))^2\n        }\n      }\n  \n      kappa.a[i,] <- kappa1+kappa2-kappa3\n    }\n    kappa <- rbind(kappa, kappa.a)\n  }\n  \n  # Transpose the kappas rbinded from each group gives pxp matrix\n  gamma <- t(kappa) %*% kappa\n  \n  A <- t(x) %*% x\n  varbeta <- solve(A) %*% gamma %*% solve(A)\n  se <- sqrt(diag(varbeta))\n  \n  \n  #--- Return results ---\n  \n  res <- cbind(beta=lm.fit$coef, se=se, cil=lm.fit$coef-(1.96*se), ciu=lm.fit$coef+(1.96*se), \n               z=lm.fit$coef/se, p=2*(1-pnorm(abs(lm.fit$coef/se))))\n  #rownames(res) <- c(\"Intercept\", colnames(x[,-1])) FJERNET! PKA 030621\n  \n  allres <- list(res=res, varbeta=varbeta)\n  #print(round(res, 3))\n  invisible(allres)\nreturn(res[,1]) #tilføjet 040322\n}  \n\n\n\n\nUsing rmtl.ipcw() function\n\n\nCode show/hide\nrmtl.ipcw(pbc3$days/365.25,pbc3$status,eoi=2,tau=3,cov=pbc3$tment)\n\n\n        xint         xcov \n0.2438698018 0.0001853217 \n\n\nCode show/hide\nrmtl.ipcw(pbc3$days/365.25,pbc3$status,eoi=1,tau=3,cov=pbc3$tment)\n\n\n       xint        xcov \n 0.13827426 -0.04885493 \n\n\nCode show/hide\npbcny   <- subset(pbc3,!is.na(alb))\ntime    <- pbcny$days/365.25\nstatus  <- pbcny$status\narm     <- pbcny$tment\nsex     <- pbcny$sex\nage     <- pbcny$age\nalb     <- pbcny$alb\nlogbili <- log2(pbcny$bili)\n\nx <- cbind(arm, alb, logbili, sex, age)\nrmtl.ipcw(time, status, eoi=2, tau=3, x)\n\n\n       xint        xarm        xalb    xlogbili        xsex        xage \n-0.47710972 -0.08191763 -0.01872268  0.15948703  0.12945255  0.01324603 \n\n\nCode show/hide\nrmtl.ipcw(time, status, eoi=1, tau=3, x)\n\n\n        xint         xarm         xalb     xlogbili         xsex         xage \n 0.595880668 -0.066527285 -0.006567316  0.071836632  0.131691403 -0.010132691 \n\n\nCode show/hide\nx1 <- cbind(arm, alb, logbili)\nrmtl.ipcw(time, status, eoi=2, tau=3, x1)\n\n\n       xint        xarm        xalb    xlogbili \n 0.79996123 -0.07930867 -0.02829702  0.12396009 \n\n\nCode show/hide\nrmtl.ipcw(time, status, eoi=1, tau=3, x1)\n\n\n        xint         xarm         xalb     xlogbili \n-0.201485168 -0.068452390 -0.002058876  0.091436591 \n\n\n\n\nUsing mets package\nHowever, does not give exactly same results as hard code\n\n\nCode show/hide\nlibrary(mets)\n\n# Death without transplantation\nresmeanIPCW(Event(days/365.25,status)~factor(tment),cause=2,\n            data=pbc3, time=3, model=\"linear\")\n\n\n\n   n events\n 349     47\n\n 349 clusters\ncoeffients:\n                Estimate   Std.Err      2.5%     97.5% P-value\n(Intercept)     0.253900  0.053258  0.149517  0.358284  0.0000\nfactor(tment)1 -0.019753  0.073194 -0.163211  0.123704  0.7873\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\n(Intercept)     1.28904 1.16127 1.4309\nfactor(tment)1  0.98044 0.84941 1.1317\n\n\nCode show/hide\nresmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili+sex+age,cause=2,\n            data=subset(pbc3,!is.na(alb)), time=3, model=\"linear\")\n\n\n\n   n events\n 343     47\n\n 343 clusters\ncoeffients:\n                 Estimate    Std.Err       2.5%      97.5% P-value\n(Intercept)    -0.7249855  0.4048719 -1.5185199  0.0685489  0.0733\nfactor(tment)1 -0.0804114  0.0668270 -0.2113898  0.0505670  0.2289\nalb            -0.0151672  0.0063347 -0.0275830 -0.0027514  0.0167\nlog2bili        0.1729104  0.0323201  0.1095641  0.2362567  0.0000\nsex             0.2071442  0.1068157 -0.0022107  0.4164990  0.0525\nage             0.0141707  0.0030794  0.0081351  0.0202063  0.0000\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\n(Intercept)     0.48433 0.21904 1.0710\nfactor(tment)1  0.92274 0.80946 1.0519\nalb             0.98495 0.97279 0.9973\nlog2bili        1.18876 1.11579 1.2665\nsex             1.23016 0.99779 1.5166\nage             1.01427 1.00817 1.0204\n\n\nCode show/hide\nresmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili,cause=2,\n            data=subset(pbc3,!is.na(alb)), time=3, model=\"linear\")\n\n\n\n   n events\n 343     47\n\n 343 clusters\ncoeffients:\n                 Estimate    Std.Err       2.5%      97.5% P-value\n(Intercept)     0.4548449  0.3266548 -0.1853868  1.0950766  0.1638\nfactor(tment)1 -0.0888451  0.0688834 -0.2238542  0.0461640  0.1971\nalb            -0.0215121  0.0066239 -0.0344947 -0.0085294  0.0012\nlog2bili        0.1439391  0.0323606  0.0805134  0.2073648  0.0000\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\n(Intercept)     1.57593 0.83078 2.9894\nfactor(tment)1  0.91499 0.79943 1.0472\nalb             0.97872 0.96609 0.9915\nlog2bili        1.15481 1.08384 1.2304\n\n\nCode show/hide\n# Transplantation\nresmeanIPCW(Event(days/365.25,status)~factor(tment),cause=1,\n            data=pbc3, time=3, model=\"lin\")\n\n\n\n   n events\n 349     21\n\n 349 clusters\ncoeffients:\n                Estimate   Std.Err      2.5%     97.5% P-value\n(Intercept)     0.143960  0.041249  0.063114  0.224806  0.0005\nfactor(tment)1 -0.058157  0.051128 -0.158365  0.042052  0.2553\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\n(Intercept)     1.15484 1.06515 1.2521\nfactor(tment)1  0.94350 0.85354 1.0429\n\n\nCode show/hide\nresmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili+sex+age,cause=1,\n            data=subset(pbc3,!is.na(alb)), time=3, model=\"lin\")\n\n\n\n   n events\n 343     20\n\n 343 clusters\ncoeffients:\n                 Estimate    Std.Err       2.5%      97.5% P-value\n(Intercept)     0.3224456  0.2826487 -0.2315356  0.8764268  0.2540\nfactor(tment)1 -0.0688959  0.0453965 -0.1578714  0.0200796  0.1291\nalb            -0.0038059  0.0042657 -0.0121665  0.0045546  0.3723\nlog2bili        0.0868250  0.0236530  0.0404659  0.1331841  0.0002\nsex             0.1010467  0.0785489 -0.0529064  0.2549998  0.1983\nage            -0.0082742  0.0028017 -0.0137653 -0.0027831  0.0031\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\n(Intercept)     1.38050 0.79331 2.4023\nfactor(tment)1  0.93342 0.85396 1.0203\nalb             0.99620 0.98791 1.0046\nlog2bili        1.09071 1.04130 1.1425\nsex             1.10633 0.94847 1.2905\nage             0.99176 0.98633 0.9972\n\n\nCode show/hide\nresmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili,cause=1,\n            data=subset(pbc3,!is.na(alb)), time=3, model=\"lin\")\n\n\n\n   n events\n 343     20\n\n 343 clusters\ncoeffients:\n                  Estimate     Std.Err        2.5%       97.5% P-value\n(Intercept)    -0.29824097  0.21529398 -0.72020941  0.12372746  0.1660\nfactor(tment)1 -0.06453816  0.04593998 -0.15457888  0.02550255  0.1601\nalb            -0.00067397  0.00410667 -0.00872290  0.00737496  0.8696\nlog2bili        0.10093806  0.02632894  0.04933429  0.15254183  0.0001\n\nexp(coeffients):\n               Estimate    2.5%  97.5%\n(Intercept)     0.74212 0.48665 1.1317\nfactor(tment)1  0.93750 0.85678 1.0258\nalb             0.99933 0.99132 1.0074\nlog2bili        1.10621 1.05057 1.1648\n\n\n\n\n\n\n\n\nIn-text: Time lost g-formula and bootstrap\n\nR\n\n\n\n\nCode show/hide\nlibrary(boot)\n\n# Transplantation\nboot.fun <- function(dat, index){\nbdata <- dat[index,]\nobj<-rmtl.ipcw(bdata$time,bdata$status,eoi=1,tau=3,cbind(bdata$arm,bdata$alb,bdata$logbili))\nrmst0<-obj[1]+obj[2]*0+obj[3]*bdata$alb+obj[4]*bdata$logbili\nrmst1<-obj[1]+obj[2]*1+obj[3]*bdata$alb+obj[4]*bdata$logbili\ndiff<-rmst1-rmst0\nres<-cbind(mean(rmst0),mean(rmst1),mean(diff))\nreturn(res)\n}\nB<-200 \nset.seed(1234)\ntrydata<-as.data.frame(cbind(time,status,x1))\nbootres <- boot(trydata, boot.fun, R = B)\n\n# mean and SD\nprint(\"Transplantation\")\n\n\n[1] \"Transplantation\"\n\n\nCode show/hide\nrbind(\n  cbind(Placebo=mean(bootres$t[,1]),\n        CyA=mean(bootres$t[,2]),\n        Diff=mean(bootres$t[,3])),\n  cbind(Placebo=sqrt(var(bootres$t[,1])),\n        CyA=sqrt(var(bootres$t[,2])),\n        Diff=sqrt(var(bootres$t[,3])))\n)\n\n\n        Placebo        CyA        Diff\n[1,] 0.14211202 0.07317405 -0.06893798\n[2,] 0.04101209 0.02876443  0.04993619\n\n\nCode show/hide\n# Death without transplantation\nboot.fun <- function(dat, index){\nbdata <- dat[index,]\nobj<-rmtl.ipcw(bdata$time,bdata$status,eoi=2,tau=3,cbind(bdata$arm,bdata$alb,bdata$logbili))\n\nrmst0<-obj[1]+obj[2]*0+obj[3]*bdata$alb+obj[4]*bdata$logbili\nrmst1<-obj[1]+obj[2]*1+obj[3]*bdata$alb+obj[4]*bdata$logbili\ndiff<-rmst1-rmst0\nres<-cbind(mean(rmst0),mean(rmst1),mean(diff))\nreturn(res)\n}\n\ntrydata<-as.data.frame(cbind(time,status,x1))\nbootres <- boot(trydata, boot.fun, R = B)\n# mean and SD\nprint(\"Death without transplantation\")\n\n\n[1] \"Death without transplantation\"\n\n\nCode show/hide\nrbind(\n  cbind(Placebo=mean(bootres$t[,1]),\n        CyA=mean(bootres$t[,2]),\n        Diff=mean(bootres$t[,3])),\n  cbind(Placebo=sqrt(var(bootres$t[,1])),\n        CyA=sqrt(var(bootres$t[,2])),\n        Diff=sqrt(var(bootres$t[,3])))\n)\n\n\n        Placebo        CyA        Diff\n[1,] 0.28945212 0.21368521 -0.07576691\n[2,] 0.05330835 0.05003825  0.07054484\n\n\n\n\n\n\n\nFigure 4.21\n\nRSAS\n\n\n\n\nCode show/hide\n# Overall survival \noverall_surv <- survfit(Surv(days, status != 0) ~ 1, data = pbc3)\n\n# Censoring\ncens_surv <- survfit(Surv(days, status == 0) ~ 1, data = pbc3)\n\n# Make data ready for plotting \npdata <- data.frame(time = c(overall_surv$time, cens_surv$time), \n                    surv = c(overall_surv$surv, cens_surv$surv), \n                    type = c(rep(\"Treatment failure\", length(overall_surv$time)), \n                             rep(\"Censoring\", length(overall_surv$time))))\n\n# Create Figure\nfig4.21 <- ggplot(aes(x = time / 365.25, y = surv, linetype = type), \n                 data = pdata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_manual(\"Type\", values = c(\"dashed\", \"solid\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab('Probability') + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 6), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), \n                     limits = c(0, 1.0), \n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general + \n  theme(legend.box = \"vertical\",\n        legend.key.size = unit(1.5, 'cm'))\n\n\nfig4.21\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3 atrisk noprint;\n    model followup*status(1 2)=;\n    baseline out=survcens survival=kmc / method=pl;\nrun;\nproc phreg data=pbc3 atrisk noprint;\n    model followup*status(0)=;\n    baseline out=survdat survival=kms / method=pl;\nrun;\ndata plotsurv; \n    merge survcens survdat; \n    by followup;\nrun;\ndata plotfin; set plotsurv;\n    by followup;\n    retain lastc lasts;\n    if kmc=. then do c=lastc; s=kms; end; \n    if kms=. then do s=lasts; c=kmc; end;\n    if kmc ne . and kms ne . then do; c=kmc; s=kms; end;\n    output;\n    lastc=c; lasts=s;\nrun;\nproc gplot data=plotfin;\n    plot c*followup s*followup/haxis=axis1 vaxis=axis2 overlay;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none\n    label=(a=90 '\"Survival\" probability');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nIn-text: Cox for censoring\n\nRSAS\n\n\n\n\nCode show/hide\nsummary(coxph(Surv(days, status == 0) ~ tment, data = pbc3, method = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(days, status == 0) ~ tment, data = pbc3, \n    method = \"breslow\")\n\n  n= 349, number of events= 259 \n\n         coef exp(coef) se(coef)     z Pr(>|z|)\ntment 0.08402   1.08765  0.12550 0.669    0.503\n\n      exp(coef) exp(-coef) lower .95 upper .95\ntment     1.088     0.9194    0.8505     1.391\n\nConcordance= 0.507  (se = 0.018 )\nLikelihood ratio test= 0.45  on 1 df,   p=0.5\nWald test            = 0.45  on 1 df,   p=0.5\nScore (logrank) test = 0.45  on 1 df,   p=0.5\n\n\nCode show/hide\nsummary(coxph(Surv(days, status == 0) ~ alb, data = pbc3, method = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(days, status == 0) ~ alb, data = pbc3, method = \"breslow\")\n\n  n= 343, number of events= 255 \n   (6 observations deleted due to missingness)\n\n        coef exp(coef) se(coef)     z Pr(>|z|)\nalb 0.001017  1.001017 0.012818 0.079    0.937\n\n    exp(coef) exp(-coef) lower .95 upper .95\nalb     1.001      0.999    0.9762     1.026\n\nConcordance= 0.496  (se = 0.021 )\nLikelihood ratio test= 0.01  on 1 df,   p=0.9\nWald test            = 0.01  on 1 df,   p=0.9\nScore (logrank) test = 0.01  on 1 df,   p=0.9\n\n\nCode show/hide\nsummary(coxph(Surv(days, status == 0) ~ bili, data = pbc3, method = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(days, status == 0) ~ bili, data = pbc3, \n    method = \"breslow\")\n\n  n= 349, number of events= 259 \n\n          coef exp(coef)  se(coef)      z Pr(>|z|)\nbili -0.002524  0.997479  0.001817 -1.389    0.165\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbili    0.9975      1.003    0.9939     1.001\n\nConcordance= 0.49  (se = 0.021 )\nLikelihood ratio test= 2.18  on 1 df,   p=0.1\nWald test            = 1.93  on 1 df,   p=0.2\nScore (logrank) test = 1.93  on 1 df,   p=0.2\n\n\n\n\n\n\nCode show/hide\nproc phreg data=pbc3;\n    class tment (ref='0');\n    model followup*status(1 2)=tment/rl;\nrun;\nproc phreg data=pbc3;\n    model followup*status(1 2)=alb/rl;\nrun;\nproc phreg data=pbc3;\n    model followup*status(1 2)=bili/rl;\nrun;"
  },
  {
    "objectID": "Ch4.html#prova-trial-in-liver-cirrhosis",
    "href": "Ch4.html#prova-trial-in-liver-cirrhosis",
    "title": "4  Intuition for marginal models",
    "section": "PROVA trial in liver cirrhosis",
    "text": "PROVA trial in liver cirrhosis\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nprova <- read.csv(\"data/prova.csv\", na.strings = c(\".\"))\n# Treatment 2x2 factorial\nprova$beh <- with(prova, as.factor(scle + beta*2))\n# Extra variables\nprovany <- prova\nprovany$log2bili <- with(provany, log2(bili))\n\n\n\n\n\n\nCode show/hide\nproc import out=prova\n    datafile=\"data/prova.csv\"\n    dbms=csv replace;\nrun;\ndata cens;\n  set prova;\n    if timebleed=. then time=timedeath;\n    else time= timebleed + timedeath;\n    beh = scle + beta*2; \n    log2bili = log2(bili);\nrun;\n\n\n\n\n\n\n\nFigure 4.22\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\",\n        text = element_text(size = 20),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20))\n\n# Make KM estimate of censoring distribution\nprovany$time <- with(provany, ifelse(!is.na(timebleed), timebleed + timedeath, timedeath))\ncensdist <- survfit(Surv(time, death == 0) ~ 1, data = provany)\ncensdist\n\n\nCall: survfit(formula = Surv(time, death == 0) ~ 1, data = provany)\n\n       n events median 0.95LCL 0.95UCL\n[1,] 286    211    905     796    1082\n\n\nCode show/hide\n# Make data ready for plotting\npdata <- data.frame(time = censdist$time,\n                    surv = censdist$surv)\n\n\n# Create Figure\nfig4.22 <- ggplot(aes(x = time / 365.25, y = surv),\n                 data = pdata) +\n  geom_step(linewidth = 1) +\n  xlab(\"Time since randomization (years)\") +\n  ylab('Probability of no censoring') +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.005)),\n                     limits = c(0, 7),\n                     breaks = seq(0, 7, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.005)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  theme(legend.box = \"vertical\",\n        legend.key.size = unit(1.5, 'cm'))\n\n\nfig4.22\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=cens atrisk noprint;\n    model time*death(1)=;\n    baseline out=survcens survival=kmc / method=pl;\nrun;\ndata survcens; \n    set survcens; \n    timey = time/365.25; \nrun;\nproc gplot data=survcens;\n    plot kmc*timey/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 6 by 1 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Probability of no censoring');\n    symbol1  v=none i=stepjl c=black;\nrun;\nquit;\n\n\n\n\n\n\n\nTable 4.12\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\n# treat\ncoxph(Surv(time, death == 0) ~ beh, data = provany)\n\n\nCall:\ncoxph(formula = Surv(time, death == 0) ~ beh, data = provany)\n\n         coef exp(coef) se(coef)      z     p\nbeh1  0.03074   1.03122  0.19080  0.161 0.872\nbeh2 -0.04113   0.95970  0.18910 -0.218 0.828\nbeh3  0.04131   1.04218  0.20386  0.203 0.839\n\nLikelihood ratio test=0.22  on 3 df, p=0.9751\nn= 286, number of events= 211 \n\n\nCode show/hide\n# size \ncoxph(Surv(time, death == 0) ~ factor(varsize), data = provany)\n\n\nCall:\ncoxph(formula = Surv(time, death == 0) ~ factor(varsize), data = provany)\n\n                    coef exp(coef) se(coef)      z      p\nfactor(varsize)2 -0.2324    0.7926   0.1465 -1.586 0.1127\nfactor(varsize)3 -0.4386    0.6449   0.2327 -1.885 0.0594\n\nLikelihood ratio test=4.77  on 2 df, p=0.0922\nn= 286, number of events= 211 \n\n\nCode show/hide\n# sex\ncoxph(Surv(time, death == 0) ~ sex, data = provany)\n\n\nCall:\ncoxph(formula = Surv(time, death == 0) ~ sex, data = provany)\n\n       coef exp(coef) se(coef)    z     p\nsex 0.07847   1.08163  0.14542 0.54 0.589\n\nLikelihood ratio test=0.29  on 1 df, p=0.588\nn= 286, number of events= 211 \n\n\nCode show/hide\n# coag\ncoxph(Surv(time, death == 0) ~ coag, data = provany)\n\n\nCall:\ncoxph(formula = Surv(time, death == 0) ~ coag, data = provany)\n\n          coef exp(coef)  se(coef)      z     p\ncoag -0.002827  0.997177  0.002635 -1.073 0.283\n\nLikelihood ratio test=1.18  on 1 df, p=0.2775\nn= 272, number of events= 199 \n   (14 observations deleted due to missingness)\n\n\nCode show/hide\n# bili\ncoxph(Surv(time, death == 0) ~ log2bili, data = provany)\n\n\nCall:\ncoxph(formula = Surv(time, death == 0) ~ log2bili, data = provany)\n\n            coef exp(coef) se(coef)     z    p\nlog2bili 0.07575   1.07870  0.05649 1.341 0.18\n\nLikelihood ratio test=1.77  on 1 df, p=0.1834\nn= 275, number of events= 202 \n   (11 observations deleted due to missingness)\n\n\nCode show/hide\n# age\ncoxph(Surv(time, death == 0) ~ age, data = provany)\n\n\nCall:\ncoxph(formula = Surv(time, death == 0) ~ age, data = provany)\n\n         coef exp(coef)  se(coef)      z       p\nage -0.017105  0.983040  0.005777 -2.961 0.00307\n\nLikelihood ratio test=8.67  on 1 df, p=0.003242\nn= 286, number of events= 211 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=cens;\n    class beh (ref='0');\n    model time*death(1)=beh;\nrun;\nproc phreg data=cens;\n    class varsize (ref='1');\n    model time*death(1)=varsize;\nrun;\nproc phreg data=cens;\n    class sex (ref='1');\n    model time*death(1)=sex;\nrun;\nproc phreg data=cens;\n    model time*death(1)=coag;\nrun;\nproc phreg data=cens;\n    model time*death(1)=log2bili;\nrun;\nproc phreg data=cens;\n    model time*death(1)=age;\nrun;"
  },
  {
    "objectID": "Ch4.html#recurrent-episodes-in-affective-disorders",
    "href": "Ch4.html#recurrent-episodes-in-affective-disorders",
    "title": "4  Intuition for marginal models",
    "section": "Recurrent episodes in affective disorders",
    "text": "Recurrent episodes in affective disorders\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\naffective <- read.csv(\"data/affective.csv\")\naffective$wait <- with(affective, stop - start)\naffectivewlw <- read.csv(\"data/affectivewlw.csv\")\nlibrary(survival)\n\n\n\n\n\n\nCode show/hide\nproc import out=affective\n    datafile=\"data/affective.csv\"\n    dbms=csv replace;\nrun;\ndata affective; \n    set affective; \n    wait = stop - start; \nrun; \ndata angstprev; \n    set affective;\n    by id;\n    retain prev;\n    if first.id then prev=0; \n    output; \n    if state=1 then prev=start; if state=0 then prev=stop;\nrun;\n\n\n\n\n\n\n\nTable 4.3\n\nRSAS - NA\n\n\n\n\nCode show/hide\n# Make dataset ready for mstate \n# From Out -> In,   trans = 1\n# From Out -> Dead, trans = 2\n# From In -> Out,   trans = 3\n# From In -> Dead,  trans = 4\n# + update status variable\n\nlibrary(dplyr)\naffectivemstate__ <- affective %>% \n  mutate(statusnew = ifelse(status == 3, 0, 1), \n         trans = case_when(state == 0 & status == 1 ~ 1, \n                           state == 0 & status == 2 ~ 2, \n                           state == 1 & status == 0 ~ 3,\n                           state == 1 & status == 2 ~ 4, \n                           state == 0 & status == 3 ~ 1, \n                           state == 1 & status == 3 ~ 3))\n\n# For each transition, we should have a censoring for the trans to the other state\naffectivemstate_ <- affectivemstate__ %>% \n  mutate(statusnew = 0,\n         trans = case_when(trans == 1 ~ 2,\n                           trans == 2 ~ 1, \n                           trans == 3 ~ 4, \n                           trans == 4 ~ 3))\n\naffectivemstate <- rbind(affectivemstate__, affectivemstate_) %>% arrange(id, start)\naffectivemstate <- affectivemstate %>% \n  mutate(from = case_when(trans == 1 ~ 1,\n                          trans == 2 ~ 1, \n                          trans == 3 ~ 2, \n                          trans == 4 ~ 2), \n         to = case_when(trans == 1 ~ 2,\n                        trans == 2 ~ 3, \n                        trans == 3 ~ 1, \n                        trans == 4 ~ 3),\n         starty = start/12, \n         stopy = stop/12\n         )\n\n# Subset data by disease\naffective0 <- subset(affectivemstate, bip == 0)\naffective1 <- subset(affectivemstate, bip == 1)\n\n# Set-up transition matrix\ntmat <- matrix(NA, 3, 3)\ntmat[1, 2:3]    <- 1:2\ntmat[2, c(1,3)] <- 3:4\nstatenames <- c(\"Out of hospital\", \"In hospital\", \"Dead\")\ndimnames(tmat) <- list(from = statenames, to = statenames)\n\nlibrary(mstate)\n## For unipolar (bip = 0) ----------------------------------- ##\nattr(affective0, 'class') <- c(\"msdata\",\"data.frame\")\nattr(affective0, 'trans') <- tmat\n# Fit empty cox model per trans\nc0 <- coxph(Surv(starty, stopy, statusnew) ~ strata(trans), data = affective0)\n# Make a mstate object\nmsf0 <- msfit(object=c0, trans=tmat)\npt0  <- probtrans(msf0, predt=0)\n\n## For bipolar (bip = 1) ----------------------------------- ##\nattr(affective1, 'class') <- c(\"msdata\",\"data.frame\")\nattr(affective1, 'trans') <- tmat\n# Fit empty cox model per trans\nc1 <- coxph(Surv(starty, stopy, statusnew) ~ strata(trans), data = affective1)\n# Make a mstate object\nmsf1 <- msfit(object=c1, trans=tmat)\npt1 <- probtrans(msf1, predt=0)\n\n\nregcoefvec <- function(data, tmat, tau) {\n  cx <- coxph(Surv(starty, stopy, statusnew) ~ strata(trans), data=data)\n  msf0 <- msfit(object = cx, trans = tmat)\n  pt0 <- probtrans(msf0, predt=0)\n  mat <- ELOS(pt0, tau=tau)\n  return(mat[2,])\n}\n\nset.seed(1234)\nres <- msboot(theta=regcoefvec, data=affective0, B=100, id=\"id\", tmat=tmat, tau=15)\nuniest<-regcoefvec(affective0, tmat, 15)\nuniboots<-matrix(c(mean(res[1,]),sqrt(var(res[1,])),\n         mean(res[2,]),sqrt(var(res[2,])),\n         mean(res[3,]),sqrt(var(res[3,]))),\n       nrow = 3, dimnames = list(c(\"Out of hosp\",\"In hosp\",\"Dead\"), c(\"Years\",\"SD\")))\nuni<-list(\"estimate\"=uniest,\"bootstrap\"=uniboots)\nset.seed(1234)\nres <- msboot(theta=regcoefvec, data=affective1, B=100, id=\"id\", tmat=tmat, tau=15)\nbiest<-regcoefvec(affective0, tmat, 15)\nbiboots<-matrix(c(mean(res[1,]),sqrt(var(res[1,])),\n         mean(res[2,]),sqrt(var(res[2,])),\n         mean(res[3,]),sqrt(var(res[3,]))),\n       nrow = 3, dimnames = list(c(\"Out of hosp\",\"In hosp\",\"Dead\"), c(\"Years\",\"SD\")))\nbi<-list(\"estimate\"=biest,\"bootstrap\"=biboots)\nlist(\"Unipolar\"=uni,\"Bipolar\"=bi)\n\n\n$Unipolar\n$Unipolar$estimate\n     in1      in2      in3 \n9.589138 2.202036 3.208826 \n\n$Unipolar$bootstrap\n                Years        SD\nOut of hosp 9.6888785 0.2515182\nIn hosp     0.4962329 3.1828301\nDead        2.1282913 0.4881871\n\n\n$Bipolar\n$Bipolar$estimate\n     in1      in2      in3 \n9.589138 2.202036 3.208826 \n\n$Bipolar$bootstrap\n                 Years        SD\nOut of hosp 12.6037941 0.3523277\nIn hosp      0.7299104 0.8614208\nDead         1.5347851 0.5616117\n\n\n\n\n\n\n\n\n\n\nFigure 4.16\n\nRSAS - NA\n\n\n\n\nCode show/hide\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Make data set with probabilities - predictions from state 2 (in hospital)\n# bip = 0 \nt0 <- data.frame(\n  time = pt0[[2]]$time, \n  pstate1 = pt0[[2]]$pstate1, \n  pstate2 = pt0[[2]]$pstate2, \n  pstate3 = pt0[[2]]$pstate3, \n  bip = rep(\"No\", nrow(pt0[[2]]))\n)\n\n# bip = 1\nt1 <- data.frame(\n  time = pt1[[2]]$time, \n  pstate1 = pt1[[2]]$pstate1, \n  pstate2 = pt1[[2]]$pstate2, \n  pstate3 = pt1[[2]]$pstate3, \n  bip = rep(\"Yes\", nrow(pt1[[2]]))\n)\npstate1 <- data.frame(\n  type = rep(\"Out of hospital\", nrow(pt0[[2]]) + nrow(pt1[[2]])), \n  bip = c(rep(\"No\", nrow(pt0[[2]])), rep(\"Yes\", nrow(pt1[[2]]))),\n  pstate = c(pt0[[2]]$pstate1, pt1[[2]]$pstate1), \n  time = c(pt0[[2]]$time, pt1[[2]]$time))\n\npstate2 <- data.frame(\n  type = rep(\"In hospital\", nrow(pt0[[2]]) + nrow(pt1[[2]])), \n  bip = c(rep(\"No\", nrow(pt0[[2]])), rep(\"Yes\", nrow(pt1[[2]]))),\n  pstate = c(pt0[[2]]$pstate2, pt1[[2]]$pstate2), \n  time = c(pt0[[2]]$time, pt1[[2]]$time))\n\npstate3 <- data.frame(\n  type = rep(\"Dead\", nrow(pt0[[2]]) + nrow(pt1[[2]])),\n  bip = c(rep(\"No\", nrow(pt0[[2]])), rep(\"Yes\", nrow(pt1[[2]]))),\n  pstate = c(pt0[[2]]$pstate3, pt1[[2]]$pstate3), \n  time = c(pt0[[2]]$time, pt1[[2]]$time))\n\nprobs <- rbind(pstate1, pstate2, pstate3)\n\n# A couple of places, a very small negative probability is predicted\n# We fix it + sum here\nt <- probs[probs$pstate <0,]$time #<-0\n\nprobs[probs$bip == \"No\" & probs$time == t[1], \"pstate\"]  <- \n  c(probs[probs$bip == \"No\" & probs$time == t[1], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"No\" & probs$time == t[1], \"pstate\"] %*% c(0,0,1))\n\nprobs[probs$bip == \"No\" & probs$time == t[2], \"pstate\"]  <- \n  c(probs[probs$bip == \"No\" & probs$time == t[2], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"No\" & probs$time == t[2], \"pstate\"] %*% c(0,0,1))\n\nprobs[probs$bip == \"No\" & probs$time == t[3], \"pstate\"]  <- \n  c(probs[probs$bip == \"No\" & probs$time == t[3], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"No\" & probs$time == t[3], \"pstate\"] %*% c(0,0,1))\n\nprobs[probs$bip == \"No\" & probs$time == t[4], \"pstate\"]  <- \n  c(probs[probs$bip == \"No\" & probs$time == t[4], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"No\" & probs$time == t[4], \"pstate\"] %*% c(0,0,1))\n\n\nprobs[probs$bip == \"Yes\" & probs$time == t[5], \"pstate\"]  <- \n  c(probs[probs$bip == \"Yes\" & probs$time == t[5], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"Yes\" & probs$time == t[5], \"pstate\"] %*% c(0,0,1))\n\n\nprobs[probs$bip == \"Yes\" & probs$time == t[6], \"pstate\"]  <- \n  c(probs[probs$bip == \"Yes\" & probs$time == t[6], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"Yes\" & probs$time == t[6], \"pstate\"] %*% c(0,0,1))\n\n\nprobs[probs$bip == \"Yes\" & probs$time == t[7], \"pstate\"]  <- \n  c(probs[probs$bip == \"Yes\" & probs$time == t[7], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"Yes\" & probs$time == t[7], \"pstate\"] %*% c(0,0,1))\n\nprobs[probs$bip == \"Yes\" & probs$time == t[8], \"pstate\"]  <- \n  c(probs[probs$bip == \"Yes\" & probs$time == t[8], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"Yes\" & probs$time == t[8], \"pstate\"] %*% c(0,0,1))\n\nprobs[probs$bip == \"Yes\" & probs$time == t[9], \"pstate\"]  <- \n  c(probs[probs$bip == \"Yes\" & probs$time == t[9], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"Yes\" & probs$time == t[9], \"pstate\"] %*% c(0,0,1))\n\nprobs[probs$bip == \"Yes\" & probs$time == t[10], \"pstate\"]  <- \n  c(probs[probs$bip == \"Yes\" & probs$time == t[10], \"pstate\"] %*% c(1,1,0), \n    0, \n    probs[probs$bip == \"Yes\" & probs$time == t[10], \"pstate\"] %*% c(0,0,1))\n\n\nprobs2 <- probs[order(probs$bip, probs$type, probs$time, probs$pstate, decreasing = F),]\n\nlibrary(ggpattern)\np1 <- ggplot(aes(x = time), data = subset(probs2, bip == \"No\")) +\n  geom_area_pattern(aes(y = pstate, \n                        pattern = type,\n                        pattern_fill = type ), \n                    fill = 'white', \n                    colour = 'black', \n                    #pattern_density = 0.02, \n                    pattern_aspect_ratio = 1,\n                    pattern_fill = 'darkgrey', \n                    pattern_color = 'black', \n                    pattern_spacing = 0.02,\n                    linewidth = 0.7) + \n  ylab(\"Probability\") + \n  xlab(\"Time since first admission (years)\") + \n  scale_pattern_discrete(name = c(\"State\"), \n                         choices = c(\"circle\", \"stripe\", \"crosshatch\")) + \n  scale_pattern_fill_discrete(name = c(\"State\")) + \n  scale_pattern_spacing_discrete(name = c(\"State\")) + \n  theme_general + ggtitle(\"Unipolar\") + \n  theme(legend.key.size = unit(1, 'cm'))\n\np2 <- ggplot(aes(x = time), data = subset(probs2, bip == \"Yes\")) +\n  geom_area_pattern(aes(y = pstate, \n                        pattern = type,\n                        pattern_fill = type ), \n                    fill = 'white', \n                    colour = 'black', \n                    #pattern_density = 0.02, \n                    pattern_aspect_ratio = 1,\n                    pattern_fill = 'darkgrey', \n                    pattern_color = 'black', \n                    pattern_spacing = 0.02,\n                    linewidth = 0.7) + \n  ylab(\"Probability\") + \n  xlab(\"Time since first admission (years)\") + \n  scale_pattern_discrete(name = c(\"State\"),\n                         choices = c(\"circle\", \"stripe\", \"crosshatch\")) + \n  scale_pattern_fill_discrete(name = c(\"State\")) + \n  scale_pattern_spacing_discrete(name = c(\"State\")) + \n  theme_general + ggtitle(\"Bipolar\") + \n  theme(legend.key.size = unit(1, 'cm'))\n\n# common legend\nlibrary(grid)\nlibrary(gridExtra)\nplots <- list(p1, p2)\ng <- ggplotGrob(plots[[1]] + theme(legend.position=\"bottom\"))$grobs\nlegend <- g[[which(sapply(g, function(x) x$name) == \"guide-box\")]]\nlheight <- sum(legend$height)\ntmp <- arrangeGrob(p1 + theme(legend.position = \"none\"), \n                   p2 + theme(legend.position = \"none\"), \n                   layout_matrix = matrix(c(1, 2), nrow = 1))\n\n\nfig4.16<-grid.arrange(tmp, legend, ncol = 1, \n                       heights = unit.c(unit(1, \"npc\") - lheight, lheight))\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 4.7\n\nRSAS\n\n\n\n\nCode show/hide\n# In years\nlibrary(dplyr)\naffective <- affective %>% mutate(starty = start / 12, stopy = stop / 12) %>% group_by(id) %>% \n                mutate(prevy1 = lag(starty, n = 1, default = 0), \n                       prevy2 = lag(stopy, n = 1, default = 0),\n                       prevy = ifelse(state == 1, prevy2, prevy1))\n\n# LWYY model - Mortality treated as censoring \nsubaff<-subset(affective, state == 0 | status %in% c(2,3))\nfit1 <- coxph(Surv(prevy, stopy, status == 1) ~ bip + cluster(id), \n              data = subaff, ties = \"breslow\")\nsummary(fit1)\n\n\nCall:\ncoxph(formula = Surv(prevy, stopy, status == 1) ~ bip, data = subaff, \n    ties = \"breslow\", cluster = id)\n\n  n= 661, number of events= 542 \n\n       coef exp(coef) se(coef) robust se     z Pr(>|z|)  \nbip 0.42019   1.52225  0.09446   0.18167 2.313   0.0207 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n    exp(coef) exp(-coef) lower .95 upper .95\nbip     1.522     0.6569     1.066     2.173\n\nConcordance= 0.535  (se = 0.019 )\nLikelihood ratio test= 18.62  on 1 df,   p=2e-05\nWald test            = 5.35  on 1 df,   p=0.02\nScore (logrank) test = 20.07  on 1 df,   p=7e-06,   Robust = 4.15  p=0.04\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n# Ghosh-Lin model - Mortality treated as competing risk\n#library(mets)\n#fit2 <- recreg(Event(prevy, stopy, status) ~ bip + cluster(id),\n#               data = subaff, cause = 1, cens.code = 3, death.code = 2)\n#summary(fit2)\n\n\n\n\n\n\n\n\nNote\n\n\n\nCannot fit Ghosh-Lin model we get the following error: Error in xtfrm.data.frame(x) : cannot xtfrm data frames\nEstimates in the book are from SAS.\n\n\n\n\n\n\nCode show/hide\n* LWYY model - Mortality treated as censoring; \nproc phreg covs(aggregate) data=angstprev;\n    where state=0 or status=2 or status=3;\n    class bip (ref='0');\n    model stop*status(2 3)=bip/entry=prev rl;\n    id id;\nrun;\n\n* Ghosh-Lin model - Mortality treated as competing risk; \nproc phreg data=angstprev;\n    where state=0 or status=2 or status=3;\n    class bip (ref='0');\n    model stop*status(3)=bip/entry=prev eventcode=1 rl;\nrun;\n\n\n\n\n\n\n\nFigure 4.18\n\nRSAS\n\n\n\n\nCode show/hide\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Use Nelson-Aalen to estimate marginal mean, incorrectly censoring for death \nnaa_est <- survfit(Surv(prevy, stopy, status == 1) ~ bip + cluster(id), \n    data = subset(affective, stopy > prevy & (state == 0 | status %in% c(2,3))), \n                   ctype = 1)\n# Collect data for plotting\nplotdata <- data.frame(time = naa_est$time, \n                       mu = naa_est$cumhaz, \n                       bip = c(rep(\"No\", naa_est$strata[[1]]), \n                               rep(\"Yes\", naa_est$strata[[2]])))\n\nfig4.18 <- ggplot(aes(x = time, y = mu, linetype = bip), data = plotdata) + \n  geom_step(size = 1) + \n  xlab(\"Time since first admission (years)\") + \n  ylab(\"Expected number of episodes\") + \n  scale_linetype_manual(\"Bipolar\", values = c(\"dashed\", \"solid\"),\n                        labels=c(\"Unipolar\",\"Bipolar\")) + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 30), \n                     breaks = seq(0, 30, by = 5)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 10), \n                     breaks = seq(0, 10, by = 2)) +\n  theme_general + \n  theme(legend.box = \"vertical\",\n        legend.key.size = unit(1.5, 'cm'))\nfig4.18\n\n\n\n\n\n\n\n\n\nCode show/hide\nods graphics on; \nproc phreg plots(overlay=row)=mcf covs(aggregate) data=angstprev;\n    where state=0 or status=2 or status=3;\n    class bip;\n    model stop*status(2 3)=/entry=prev;\n    id id;\n    strata bip;\n    baseline out=mcfdata cmf=naa;\nrun;\ndata mcfdata; set mcfdata;\n    years=stop/12;\nrun;\nproc gplot data=mcfdata;\n    plot naa*years=bip/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 30 by 5 minor=none label=('Years');\n    axis2 order=0 to 12 by 2 minor=none label=(a=90 'Expected number of episodes');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nFigure 4.19\n\nRSAS\n\n\n\n\nCode show/hide\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        legend.title=element_blank(),\n        legend.text = element_text(size = 20),\n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\nlibrary(mets)\nxr <- phreg(Surv(prevy, stopy, status == 1) ~ strata(bip) + cluster(id),\n            data = subset(affective, state == 0 | status %in% c(2,3)))\nxd <- phreg(Surv(prevy, stopy, status == 2) ~ strata(bip) + cluster(id),\n            data = subset(affective, state == 0 | status %in% c(2,3)))\n\nout <- recurrentMarginal(xr, xd)\npout <- data.frame(time = out$cumhaz[,1], \n                   mu = out$cumhaz[,2],\n                   bip = as.factor(out$strata))\n\nNAa_fit <- survfit(Surv(prevy, stopy, status == 1) ~ strata(bip),\n                   data = subset(affective, state == 0 | status %in% c(2,3)),\n                   id = id, ctype = 1, timefix = FALSE)\n  \nKM_fit <- survfit(Surv(prevy, stopy, status == 2) ~ strata(bip),\n                  data = subset(affective, state == 0 | status %in% c(2,3)),\n                  id = id, timefix = FALSE)\n  \n# Adjust hat(mu)\nlS0 <- dplyr::lag(KM_fit$surv[1:(KM_fit$strata[1])], default = 1)\ndA0 <- diff(NAa_fit$cumhaz[1:NAa_fit$strata[1]])\nmu_adj0 <- cumsum(lS0 * c(0, dA0))\n\nlS1 <- dplyr::lag(KM_fit$surv[(KM_fit$strata[1]+1):(KM_fit$strata[1] + KM_fit$strata[2])], default = 1)\ndA1 <- diff(NAa_fit$cumhaz[(KM_fit$strata[1]+1):(KM_fit$strata[1] + KM_fit$strata[2])])\nmu_adj1 <- cumsum(lS1 * c(0, dA1))\n\nplotdata2 <- data.frame(time = KM_fit$time, \n                       mu = c(mu_adj0, mu_adj1), \n                       bip = c(rep(\"No\", length(mu_adj0)), \n                               rep(\"Yes\", length(mu_adj1))))\n\nfig4.19 <- ggplot(aes(x = time, y = mu, linetype = bip), data = plotdata2) + \n  geom_step(linewidth = 1) + \n  xlab(\"Time since first admission (years)\") + \n  ylab(\"Expected number of episodes\") + \n  scale_linetype_manual(\"Bipolar\", values = c(\"dashed\", \"solid\"),\n                        labels=c(\"Unipolar\",\"Bipolar\") ) + \n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 30), breaks = seq(0, 30, by = 5)) + \n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), \n                     limits = c(0, 10), breaks = seq(0, 10, by = 2)) +\n  theme_general + \n  theme(legend.box = \"vertical\",\n        legend.key.size = unit(1.5, 'cm'))\nfig4.19\n\n\n\n\n\n\n\n\n\nCode show/hide\n/* Using \"fine-gray model\" in PHREG gives an alternative solution to \n  the estimator for CMF using the Breslow type estimator for \n  the baseline mean function (see p. 199 in book). The estimator is not\n    exactly the same as Cook-Lawless because of a different procedures \n    for ties of terminating events and censorings. If no ties \n    (or no censorings) it equals Cook & Lawless */\n\nproc phreg data=angstprev;\n    where state=0 or status=2 or status=3;\n    model stop*status(3)=/entry=prev eventcode=1;\n    strata bip;\n    baseline out=mcfdata1 cif=naa1;\nrun;\ndata mcfdata1;\n    set mcfdata1;\n    cmf=-log(1-naa1);\n    years=stop/12;\nrun;\nproc gplot data=mcfdata1;\n    plot cmf*years=bip/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 30 by 5 minor=none label=('Years');\n    axis2 order=0 to 12 by 2 minor=none label=(a=90 'Expected number of episodes');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\nquit;\n\n\n/*** Calc Cook & Lawless or (Ghosh & Lin (GL)) estimator for CMF 'by hand' ***/\n/* First create KM data for death */\nproc phreg data=angstprev noprint;\n    where state=0 or status=2 or status=3;\n  model stop*status(1 3)= / entry=prev; /* status=2=death */\n  strata bip;\n  baseline out=kmdata survival=km / method=pl ;\nrun;\n/* Second create NAa data */\nproc phreg data=angstprev noprint;\n    where state=0 or status=2 or status=3;\n  model stop*status(2 3)= / entry=prev;/* status=1=event */\n  strata bip;\n  baseline out=nadata cumhaz=na;\nrun;\n/* Use NA data to calculate dA(u), i.e., increments in NAa */\ndata na;\n  set nadata;\n  dAu=na-lag(na);\n  if stop=0 then dAu=0;\n  keep bip stop dAu na;\nrun;\n/* merge NAa and KM data */\ndata merged;\n  merge na kmdata;\n  by bip stop;\nrun;\n/* multiply S(u-) and dA(u) */\ndata fill;\n   set merged;\n   retain _km;\n   if not missing(km) then _km=km;\n   else km=_km;\n   /* S(u-) */\n   S_uminus=lag(km);\n   if stop=0 then S_uminus=1;\n\n   if dAu=. then dAu=0;\n   GLfactor=S_uminus*dAu;\n   keep bip stop na dAu S_uminus GLfactor;\nrun;\ndata GLdata;\n  set fill;\n  by bip;\n  if first.bip then GL=0;\n  else GL+GLfactor;\nrun;\nproc sgplot data=GLdata;\n  step x=stop y=GL / group=bip;\n  step x=stop y=na / group=bip;\nrun;\n\n\n\n\n\n\n\nTable 4.9\n\nRSAS\n\n\n\n\nCode show/hide\n# Number of recurrences and death\nwith(subset(affective, episode < 5), table(episode, status))\n\n\n       status\nepisode   0   1   2   3\n      1 116  99  16   4\n      2  91  82  12   5\n      3  74  62  17   3\n      4  56  47  10   5\n\n\nCode show/hide\napply(with(subset(affective, episode < 5), table(episode, status)), 2, cumsum)\n\n\n       status\nepisode   0   1  2  3\n      1 116  99 16  4\n      2 207 181 28  9\n      3 281 243 45 12\n      4 337 290 55 17\n\n\n\n\n\n\nCode show/hide\ndata angstwlw; \n    set affective;\n    if episode<5 and (state=0 or status=2 or status=3);\nrun;\nproc sort data=angstwlw; \n    by id; \nrun;\nproc freq data=angstwlw;\n    tables episode*status; \nrun;\n\n\n\n\n\n\n\nTable 4.10\n\nRSAS\n\n\n\n\nCode show/hide\n# Make WLW data ready using SAS data - see SAS code\naffectivewlw <- read.csv(\"data/affectivewlw.csv\")\naffectivewlw <- affectivewlw %>% mutate(bip1 = bip * (stratum == 1), \n                                        bip2 = bip * (stratum == 2), \n                                        bip3 = bip * (stratum == 3), \n                                        bip4 = bip * (stratum == 4))\n\n# Composite endpoint\nfit1 <- coxph(Surv(time, dc %in% c(1, 2)) ~ bip1 + bip2 + bip3 + bip4 + cluster(id) + strata(stratum), \n              data = affectivewlw, \n              ties = \"breslow\")\nsummary(fit1)\n\n\nCall:\ncoxph(formula = Surv(time, dc %in% c(1, 2)) ~ bip1 + bip2 + bip3 + \n    bip4 + strata(stratum), data = affectivewlw, ties = \"breslow\", \n    cluster = id)\n\n  n= 476, number of events= 434 \n\n         coef exp(coef) se(coef) robust se     z Pr(>|z|)  \nbip1 0.379171  1.461073 0.244976  0.208531 1.818    0.069 .\nbip2 0.290599  1.337228 0.249212  0.255307 1.138    0.255  \nbip3 0.003218  1.003223 0.253766  0.245542 0.013    0.990  \nbip4 0.107276  1.113241 0.255085  0.236751 0.453    0.650  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbip1     1.461     0.6844    0.9709     2.199\nbip2     1.337     0.7478    0.8108     2.206\nbip3     1.003     0.9968    0.6200     1.623\nbip4     1.113     0.8983    0.6999     1.771\n\nConcordance= 0.51  (se = 0.017 )\nLikelihood ratio test= 3.67  on 4 df,   p=0.5\nWald test            = 8.7  on 4 df,   p=0.07\nScore (logrank) test = 3.97  on 4 df,   p=0.4,   Robust = 7.94  p=0.09\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\nfit2 <- coxph(Surv(time, dc %in% c(1, 2)) ~ bip + cluster(id) + strata(stratum), \n              data = affectivewlw, \n              ties = \"breslow\")\nsummary(fit2)\n\n\nCall:\ncoxph(formula = Surv(time, dc %in% c(1, 2)) ~ bip + strata(stratum), \n    data = affectivewlw, ties = \"breslow\", cluster = id)\n\n  n= 476, number of events= 434 \n\n      coef exp(coef) se(coef) robust se     z Pr(>|z|)\nbip 0.1927    1.2125   0.1254    0.2037 0.946    0.344\n\n    exp(coef) exp(-coef) lower .95 upper .95\nbip     1.212     0.8248    0.8133     1.808\n\nConcordance= 0.51  (se = 0.017 )\nLikelihood ratio test= 2.27  on 1 df,   p=0.1\nWald test            = 0.89  on 1 df,   p=0.3\nScore (logrank) test = 2.37  on 1 df,   p=0.1,   Robust = 0.95  p=0.3\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n# Cause-specific hazard of recurrence\nfit3 <- coxph(Surv(time, dc %in% c(1)) ~ bip1 + bip2 + bip3 + bip4 + cluster(id) + strata(stratum), \n              data = affectivewlw, \n              ties = \"breslow\")\nsummary(fit3)\n\n\nCall:\ncoxph(formula = Surv(time, dc %in% c(1)) ~ bip1 + bip2 + bip3 + \n    bip4 + strata(stratum), data = affectivewlw, ties = \"breslow\", \n    cluster = id)\n\n  n= 476, number of events= 290 \n\n       coef exp(coef) se(coef) robust se     z Pr(>|z|)   \nbip1 0.4951    1.6406   0.2485    0.2017 2.454  0.01412 * \nbip2 0.6395    1.8956   0.2593    0.2420 2.642  0.00823 **\nbip3 0.5342    1.7060   0.2853    0.2694 1.983  0.04741 * \nbip4 0.8793    2.4093   0.3085    0.2832 3.106  0.00190 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbip1     1.641     0.6095     1.105     2.436\nbip2     1.896     0.5275     1.180     3.046\nbip3     1.706     0.5862     1.006     2.893\nbip4     2.409     0.4151     1.383     4.197\n\nConcordance= 0.543  (se = 0.021 )\nLikelihood ratio test= 19.5  on 4 df,   p=6e-04\nWald test            = 16.37  on 4 df,   p=0.003\nScore (logrank) test = 22.58  on 4 df,   p=2e-04,   Robust = 12.85  p=0.01\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\nfit4 <- coxph(Surv(time, dc %in% c(1)) ~ bip + cluster(id) + strata(stratum), \n              data = affectivewlw, \n              ties = \"breslow\")\nsummary(fit4)\n\n\nCall:\ncoxph(formula = Surv(time, dc %in% c(1)) ~ bip + strata(stratum), \n    data = affectivewlw, ties = \"breslow\", cluster = id)\n\n  n= 476, number of events= 290 \n\n      coef exp(coef) se(coef) robust se     z Pr(>|z|)   \nbip 0.6150    1.8496   0.1359    0.2106 2.921  0.00349 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n    exp(coef) exp(-coef) lower .95 upper .95\nbip      1.85     0.5407     1.224     2.794\n\nConcordance= 0.543  (se = 0.021 )\nLikelihood ratio test= 18.46  on 1 df,   p=2e-05\nWald test            = 8.53  on 1 df,   p=0.003\nScore (logrank) test = 21.13  on 1 df,   p=4e-06,   Robust = 7.89  p=0.005\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\n\n\n\n\nCode show/hide\ndata angstwlw; \n    set affective;\n    where episode<5 and (state=0 or status=2 or status=3);\nrun;\nproc sort data=angstwlw; \n    by id; \nrun;\ndata angstwlw4; \n    set angstwlw;\n    by id;\n    time=stop; dc=status; stratum=episode;\n    output; \n    /* if last episode is not #4 then later episodes are either\n         censored (1 or 3) or the 'end in death' (2) */\n    if last.id then do;\n        if episode=3 then do;\n            time=stop;\n        if status=1 or status=3 then dc=0; \n            if status=2 then dc=2;\n            stratum=4;\n            output;\n    end;\n        if episode=2 then do;\n            time=stop; \n            if status=1 or status=3 then dc=0; \n            if status=2  then dc=2;\n            stratum=3;\n            output; \n            time=stop;\n            if status=1 or status=3 then dc=0; \n            if status=2 then dc=2;\n            stratum=4;\n            output; \n        end;\n        if episode=1 then do; \n            time=stop;\n            if status=1 or status=3 then dc=0; \n            if status=2 then dc=2;\n            stratum=2;\n            output; \n            time=stop; if status=1 or status=3 then dc=0; \n            if status=2  then dc=2;\n            stratum=3;\n            output; \n            time=stop;\n            if status=1 or status=3 then dc=0; \n            if status=2 then dc=2;\n            stratum=4;\n            output; \n        end;\n    end;\nrun;\n/* to use in R */\nproc export data=angstwlw4\n    outfile=\"data/affectivewlw.csv\"\n    dbms=csv replace;\nrun;\ndata angstwlw4; set angstwlw4;\n    bip1=bip*(stratum=1); bip2=bip*(stratum=2);\n    bip3=bip*(stratum=3); bip4=bip*(stratum=4);\nrun;\n\n/* composite end point */ \nproc phreg data=angstwlw4 covs(aggregate);\n    model time*dc(0 3)=bip1 bip2 bip3 bip4;\n    strata stratum;\n    id id;\n    bip: test bip1=bip2=bip3=bip4;\nrun;\n/* Joint model */\nproc phreg data=angstwlw4 covs(aggregate);\n    model time*dc(0 3)=bip;\n    strata stratum;\n    id id;\nrun;\n\n/* Cause-spec. hazards for 1.,2.,3.,4. event */\nproc phreg data=angstwlw4 covs(aggregate);\n    model time*dc(0 2 3)=bip1 bip2 bip3 bip4;\n    strata stratum;\n    id id;\n    bip: test bip1=bip2=bip3=bip4;\nrun;\n/* Joint model */\nproc phreg data=angstwlw4 covs(aggregate);\n    model time*dc(0 2 3)=bip;\n    strata stratum;\n    id id;\nrun;\n\n\n\n\n\n\n\nFigure 4.23\n\nRSAS\n\n\n\n\nCode show/hide\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n# Last observations\ncens <- affective %>% group_by(id) %>% slice(c(n()))\n# Censoring dist, KM\ncensdist <- survfit(Surv(stop, status == 3) ~ 1, \n                    data = cens)\n# Make data ready for plotting\npdata <- data.frame(time = censdist$time,\n                    surv = censdist$surv)\nfig4.23 <- ggplot(aes(x = time / 12, y = surv), data = pdata) +\n  geom_step(size = 1) +\n  xlab(\"Time since first admission (years)\") +\n  ylab('Probability of no censoring') +\n  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)),\n                     limits = c(0, 30),\n                     breaks = seq(0, 30, 5)) +\n  scale_y_continuous(expand = expansion(mult = c(0.005, 0.005)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general\nfig4.23\n\n\n\n\n\n\n\n\n\nCode show/hide\ndata cens; \n    set affective;\n    by id;\n    if last.id;\nrun;\nproc phreg data=cens atrisk noprint;\n    model stop*status(2)=;\n    baseline out=angstcens survival=kmc / method=pl;\nrun;\ndata angstcens; \n    set angstcens; \n    years=stop/12; \nrun;\nproc gplot data=angstcens;\n    plot kmc*years/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 30 by 5 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none\n    label=(a=90 'Probability of no censoring');\n    symbol1  v=none i=stepjl c=black;\nrun;\nquit;\n\n\n\n\n\n\n\nIn-text: Cox for censoring\n\nRSAS\n\n\n\n\nCode show/hide\ncoxph(Surv(stop,status==3)~bip,data=cens)\n\n\nCall:\ncoxph(formula = Surv(stop, status == 3) ~ bip, data = cens)\n\n       coef exp(coef) se(coef)      z     p\nbip -0.4844    0.6161   0.3738 -1.296 0.195\n\nLikelihood ratio test=1.8  on 1 df, p=0.18\nn= 119, number of events= 41 \n\n\n\n\n\n\nCode show/hide\nproc phreg data=cens;\n    model stop*status(2)=bip/rl;\nrun;"
  },
  {
    "objectID": "Ch4.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "href": "Ch4.html#leader-cardiovascular-trial-in-type-2-diabetes",
    "title": "4  Intuition for marginal models",
    "section": "LEADER cardiovascular trial in type 2 diabetes",
    "text": "LEADER cardiovascular trial in type 2 diabetes\n\n\n\n\nRead data\nAssume that the LEADER data set is loaded in data set leader_mi.\n\n\nFigure 4.20\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(\n    legend.position = \"bottom\",\n    text = element_text(size = 20),\n    axis.text.x = element_text(size = 20),\n    axis.text.y = element_text(size = 20)\n  )\n\nghosh_lin_nonpar_mcf <- function(endpointdat) {\n  # Fit NAa\n  NAa_fit <- survfit(\n    Surv(start, stop, status == 1) ~ treat,\n    data = endpointdat,\n    id = id,\n    ctype = 1\n  )\n  \n  # Fit KM\n  KM_fit <- survfit(\n    Surv(start, stop, status == 2) ~ treat,\n    data = endpointdat,\n    id = id,\n    ctype = 1\n  )\n  \n  # Adjust hat(mu)\n  mu_adj <-\n    c(cumsum(KM_fit$surv[1:KM_fit$strata[[1]]] * c(0, diff(NAa_fit$cumhaz[1:NAa_fit$strata[[1]]]))),\n      cumsum(KM_fit$surv[(KM_fit$strata[[1]] + 1):(KM_fit$strata[[1]] + KM_fit$strata[[2]])] *\n               c(0, diff(NAa_fit$cumhaz[(NAa_fit$strata[[1]] + 1):(NAa_fit$strata[[1]] + NAa_fit$strata[[2]])]))))\n  \n  dat_adj <- data.frame(\n    mu = mu_adj,\n    time = NAa_fit$time,\n    treat = c(\n      rep(\"Liraglutide\", NAa_fit$strata[[1]]),\n      rep(\"Placebo\", NAa_fit$strata[[2]])\n    ),\n    type = rep(\n      \"Mortality treated as a competing risk (CL)\",\n      length(NAa_fit$time)\n    )\n  )\n  \n  dat_unadj <- data.frame(\n    mu = NAa_fit$cumhaz,\n    time = NAa_fit$time,\n    treat = c(\n      rep(\"Liraglutide\", NAa_fit$strata[[1]]),\n      rep(\"Placebo\", NAa_fit$strata[[2]])\n    ),\n    type = rep(\"Mortality treated as censoring (NA)\", length(NAa_fit$time))\n  )\n  \n  dat_adj$both <- with(dat_adj, paste(type, treat, sep = \", \"))\n  dat_unadj$both <- with(dat_unadj, paste(type, treat, sep = \", \"))\n  \n  pdat <- rbind(dat_adj, dat_unadj)\n  \n    ggplot(aes(x = time  * 1 / (365.25 / 12), y = mu), data = pdat) +\n    geom_step(aes(linetype = both), linewidth = 1.05) +\n    xlab(\"Time since randomization (months)\") +\n    ylab(\"Expected number of events per subject\") +\n    scale_color_discrete(\"Treatment\") +\n    scale_linetype_manual(\"\", values = c(\"dotdash\", \"dotted\", \"solid\", \"dashed\")) +\n    theme_general +\n    theme(\n      legend.position = \"bottom\",\n      legend.margin = margin(t = -25),\n      legend.direction = \"vertical\",\n      legend.box = \"horizontal\",\n      text = element_text(size = 20),\n      legend.text = element_text(size = 18),\n      legend.key.width = unit(3, \"cm\")\n    ) +\n    scale_x_continuous(\n      expand = expansion(mult = c(0.005, 0.05)),\n      limits = c(0, 65),\n      breaks = seq(0, 65, by = 12)\n    ) +\n    scale_y_continuous(\n      expand = expansion(mult = c(0.005, 0.05)),\n      limits = c(0, 0.13),\n      breaks = seq(0, 0.13, by = 0.02)\n    )\n  \n}\n\nfig4.20 <- ghosh_lin_nonpar_mcf(endpointdat = leader_mi)\nfig4.20\n\n\n\n\n\n\n\n\n\nCode show/hide\n/* Using \"fine-gray model\" in PHREG gives an alternative solution to \n  the estimator for CMF using the Breslow type estimator for \n  the baseline mean function (see p. 199 in book). The estimator is not\n    exactly the same as Cook-Lawless because of a different procedures \n    for ties of terminating events and censorings. If no ties \n    (or no censorings) it equals Cook & Lawless */\n\n* NELSON-AALEN; \nproc phreg data=leader_mi noprint;\n    model stop*status(0 2)=/entry=start;\n    id id;\n    strata treat;\n  baseline out=na_data cumhaz=naa;\nrun;\ndata na_est;\n    set na_data; \n    type = \"Nelson-Aalen\";\n    cumevent = naa; \n    treat_type = trim(treat) || \", \"  || type; \nrun; \n\n* COOK & LAWLESS (GHOSH & LIN);\nproc phreg data=leader_mi noprint;\n  model (start, stop)*status(0)=/eventcode=1; \n  strata treat;\n  baseline out=gl_data cif=cuminc;\nrun;\ndata gl_est;\n    set gl_data; \n    type = \"Ghosh & Lin\";\n    cumevent = -log(1-cuminc); \n    treat_type = trim(treat) || \", \" || type; \nrun; \ndata comb; \n    set na_est gl_est; \n    time = stop/(365.25/12);\n    drop naa cuminc;\nrun;\nproc sgplot data=comb;\n    step x=time y=cumevent/group=treat_type justify=left;\n    xaxis grid values=(0 to 60 by 12);\n    yaxis grid values=(0 to 0.12 by 0.02);\n    label time=\"Time since randomisation (months)\";\n    label cumevent=\"Expected number events per subject\"; \nrun; \n\n\n/*** Calc Cook & Lawless or (Ghosh & Lin (GL)) estimator for CMF by hand ***/\n/* First create KM data for death */\nproc phreg data=leader_mi noprint;\n  model stop*status(0 1)= / entry=start; /* status=2=death */\n  strata treat;\n  baseline out=kmdata survival=km / method=pl ;\nrun;\n/* Second create NAa data */\nproc phreg data=leader_mi noprint;\n  model stop*status(0 2)= / entry=start; /* status=1=event */\n  strata treat;\n  baseline out=nadata cumhaz=na;\nrun;\n/* Use NA data to calculate dA(u), i.e., increments in NAa */\ndata na;\n  set nadata;\n  dAu=na-lag(na);\n  if stop=0 then dAu=0;\n  keep treat stop dAu na;\nrun;\n/* merge NAa and KM data */\ndata merged;\n  merge na kmdata;\n  by treat stop;\nrun;\n/* multiply S(u-) and dA(u) */\ndata fill;\n   set merged;\n   retain _km;\n   if not missing(km) then _km=km;\n   else km=_km;\n   /* S(u-) */\n   S_uminus=lag(km);\n   if stop=0 then S_uminus=1;\n\n   if dAu=. then dAu=0;\n   GLfactor=S_uminus*dAu;\n   keep treat stop na dAu S_uminus GLfactor;\nrun;\ndata GLdata;\n  set fill;\n  by treat;\n  if first.treat then GL=0;\n  else GL+GLfactor;\n    time = stop/(365.25/12);\nrun;\nproc sgplot data=GLdata;\n  step x=time y=na / group=treat;\n  step x=time y=GL / group=treat;\n    xaxis grid values=(0 to 60 by 12);\n    yaxis grid values=(0 to 0.12 by 0.02);\n    label time=\"Time since randomisation (months)\";\n    label na=\"Expected number events per subject\"; \nrun;\n\n\n\n\n\n\n\nIn-text: LWYY and Ghosh-Lin models\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(survival)\nfit1 <- coxph(Surv(start, stop, status == 1) ~ treat + cluster(id), \n              data = leader_mi, ties = \"breslow\")\nsummary(fit1)\n\n\nCall:\ncoxph(formula = Surv(start, stop, status == 1) ~ treat, data = leader_mi, \n    ties = \"breslow\", cluster = id)\n\n  n= 10120, number of events= 780 \n\n          coef exp(coef) se(coef) robust se      z Pr(>|z|)  \ntreat -0.16418   0.84859  0.07184   0.08810 -1.864   0.0624 .\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\ntreat    0.8486      1.178     0.714     1.009\n\nConcordance= 0.524  (se = 0.011 )\nLikelihood ratio test= 5.24  on 1 df,   p=0.02\nWald test            = 3.47  on 1 df,   p=0.06\nScore (logrank) test = 5.23  on 1 df,   p=0.02,   Robust = 3.47  p=0.06\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n# Ghosh-Lin model - Mortality treated as competing risk\nlibrary(mets)\nfit2 <- recreg(Event(start, stop, status) ~ treat + cluster(id),\n               data = leader_mi, cause = 1, cens.code = 0, death.code = 2)\nsummary(fit2)\n\n\n\n     n events\n 10120    780\n\n 9340 clusters\ncoeffients:\n       Estimate      S.E.   dU^-1/2 P-value\ntreat -0.158754  0.087861  0.071839  0.0708\n\nexp(coeffients):\n      Estimate    2.5%  97.5%\ntreat  0.85321 0.71823 1.0135\n\n\n\n\n\n\nCode show/hide\ntitle 'LWYY model';\nproc phreg data=leader_mi covs(aggregate);\n  class treat(ref=\"0\");\n  model (start, stop)*status(0 2) = treat / rl; \n  id id;\nrun;\n\ntitle 'Ghosh-Lin model';\nproc phreg data=leader_mi covs(aggregate);\n  class treat(ref=\"0\");\n  model (start, stop)*status(0) = treat / rl\n        eventcode=1 convergelike=1E-9; \n  id id;\nrun;"
  },
  {
    "objectID": "Ch4.html#bone-marrow-transplantation-in-acute-leukemia",
    "href": "Ch4.html#bone-marrow-transplantation-in-acute-leukemia",
    "title": "4  Intuition for marginal models",
    "section": "Bone marrow transplantation in acute leukemia",
    "text": "Bone marrow transplantation in acute leukemia\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nbmt <- read.csv(\"data/bmt.csv\")\nbmt$intxsurv<- bmt$timedeath\nbmt$dead <- bmt$death\nbmt$intxrel <- ifelse(bmt$rel == 1, bmt$timerel, bmt$timedeath)\nbmt$trm     <- ifelse(bmt$rel == 0 & bmt$death == 1, 1, 0)\nbmt$tgvhd   <- ifelse(bmt$gvhd == 1, bmt$timegvhd, bmt$intxrel)\nbmt$tanc500 <- ifelse(bmt$anc500 == 1, bmt$timeanc500, bmt$intxrel)\nbmt$state0  <- bmt$rel + 2*bmt$trm\n\n\n\n\n\n\nCode show/hide\nproc import out=bmt\n    datafile=\"data/bmt.csv\" \n    dbms=csv replace;\nrun;\ndata bmt; \n  set bmt;\n    intxsurv=timedeath;\n    dead=death;\n    if rel=1 then intxrel=timerel;\n    if rel=0 then intxrel=timedeath;\n    trm=0;\n    if rel=0 and death=1 then trm=1;\n    state0=rel+2*trm;\n    if gvhd=1 then tgvhd=timegvhd;\n    if gvhd=0 then tgvhd=intxrel;\nrun;\n\n\n\n\n\n\n\nFigure 4.15\n\nRSAS\n\n\n\n\nCode show/hide\nlibrary(ggplot2)\n# General theme\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\nlibrary(survival)\n# Relapse-free survival \nfit1 <- survfit(Surv(intxrel, state0 != 0) ~ 1, data = bmt)\n\n# relapse\nrequire(mets)\nfit2 <- cif(Event(intxrel, state0) ~ 1, data = bmt, cause = 1)\n\n# death in remission\nfit3 <- cif(Event(intxrel, state0) ~ 1, data = bmt, cause = 2)\n\n# overall survival\nfit4 <- survfit(Surv(intxsurv, dead == 1) ~ 1, data = bmt)\n\n# We need the same time for all probabilities\nrequire(dplyr)\nrequire(tidyr)\nm1 <- stepfun(x = fit1$time, y = c(1, fit1$surv)) \nm2 <- stepfun(x = fit2$times, y = c(0, fit2$mu))\nm3 <- stepfun(x = fit3$times, y = c(0, fit3$mu))\nm4 <- stepfun(x = fit4$time, y = c(0, 1-fit4$surv))\n\nunitimes <- sort(unique(c(fit1$time, fit2$times, fit3$times, fit4$time)))\nm <- data.frame(time = unitimes, \n                q0 = m1(unitimes),\n                c1 = m2(unitimes), \n                c2 = m3(unitimes), \n                c23 = m4(unitimes))\n\nm$q2 <-m$c2\nm$q3 <- m$c23 - m$c2\nm$q1 <- m$c1 - m$q3\nm$sum <- with(m, q0+q1+q2+q3)\nm$prev <- with(m, q1 / (q0 + q1))\n\n# Prepare data for plotting\nplotdata <- with(m, \n                 data.frame(time = c(time, time), \n                            prob = c(prev, q1),\n                            type = c(rep(\"Prevalence of relapse\", length(time)), \n                                     rep(\"Probability of being alive with relapse\",\n                                         length(time)))))\n\n# Create Figure\nfig4.15 <- ggplot(aes(x = time, y = prob, linetype = type), data = plotdata) + \n  geom_step(linewidth = 1) + \n  scale_linetype_discrete(\"Type\") + \n  xlab(\"Time since bone marrow transplantation (months)\") + \n  ylab(\"Probability\") + \n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), \n                     limits = c(0, 156), breaks = seq(0, 156, by = 12)) + \n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), \n                     limits = c(0, 0.05), \n                     breaks = seq(0, 0.05, 0.01)) +\n  theme_general + \n  theme(legend.box = \"vertical\",\n        text = element_text(size=21), \n        legend.key.size = unit(1, 'cm'))\n\nfig4.15\n\n\n\n\n\n\n\n\n\nCode show/hide\nproc phreg data=bmt noprint; /* Relapse-free surv */\n    model intxrel*state0(0)=;\n    baseline out=surv survival=km;\nrun;\n\nproc phreg data=bmt noprint; /* Relapse */\n    model intxrel*state0(0)=/eventcode=1;\n    baseline out=cif1 cif=cif1;\nrun;\n\nproc phreg data=bmt noprint; /* Death in remission */\n    model intxrel*state0(0)=/eventcode=2;\n    baseline out=cif2 cif=cif2;\nrun;\n\nproc phreg data=bmt noprint; /* Overall surv. */\n    model intxsurv*dead(0)=/eventcode=1;\n    baseline out=dead cif=cif23;\nrun;\n\n/* We need the same time variable for all probabilities */\ndata dead; set dead; time=intxsurv; run;\ndata surv; set surv; time=intxrel; run;\ndata cif1; set cif1; time=intxrel; run;\ndata cif2; set cif2; time=intxrel; run;\ndata all; merge surv cif1 cif2 dead; by time; run;\n\ndata allrev; \n    set all;\n    by time;\n    retain last1 last2 last3 last4;\n    if km=. then rfs=last1; if km ne . then rfs=km; \n    if cif1=. then c1=last2; if cif1 ne . then c1=cif1;\n    if cif2=. then c2=last3; if cif2 ne . then c2=cif2;\n    if cif23=. then c23=last4; if cif23 ne . then c23=cif23;\n    output;\n    last1=rfs; last2=c1; last3=c2; last4=c23;\nrun;\ndata allrev; \nset allrev;\n    q0=rfs; q2=c2; q3=c23-c2; q1=c1-q3; sum=q0+q1+q2+q3; prev=q1/(q0+q1); tment=0;\nrun;\nproc gplot data=allrev;\n    plot prev*time q1*time/overlay haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 150 by 10 minor=none label=('Months');\n    axis2 order=0 to 0.05 by 0.01 minor=none label=(a=90 'Relapse prev. and prob.');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nIn-text p. 133: Expected time lost\n\n\n\n\n\n\nImportant\n\n\n\nMissing for R - but should be possible with mstate or survival?\n\n\n\nR-NASAS\n\n\n\n\n\n\n\nCode show/hide\n/* Bootstrap */\ndata bootbmt;\n    do sampnum = 1 to 1000; /* nboot=1000*/\n    do i = 1 to 2009; /*nobs=2009*/\n    x=round(ranuni(0)*2009); /*nobs=2009*/\n    set bmt\n    point=x;\n    output;\n    end;\n    end;\n    stop;\nrun;\n\n%macro areastepby(data,byvar,beh,grp,tid,y,tau);\n    data select;\n        set &data;\n        where &beh=&grp;\n    run;\n    data select;\n        set select;\n        by &byvar;\n        retain mu oldt oldy;\n        if first.&byvar then do oldt=0; oldy=1; mu=0;  end;\n        if &tid>&tau then do;\n        &tid=&tau; &y=oldy; end;\n        if not first.&byvar then mu+oldy*(&tid-oldt);\n        if last.&byvar then do;\n        if &tid<&tau then mu+(&tau-&tid)*&y; end;\n        oldy=&y; oldt=&tid;\n    run;\n    data last;\n        set select;\n        by  &byvar;\n        if last.&byvar;\n    run;\n%mend areastepby;\n\nproc phreg data=bootbmt noprint; /* Relapse-free surv */\nby sampnum;\nmodel intxrel*state0(0)=;\nbaseline out=surv survival=km;\nrun;\n\nproc phreg data=bootbmt noprint; /* Relapse */\nby sampnum;\nmodel intxrel*state0(0)=/eventcode=1;\nbaseline out=cif1 cif=cif1;\nrun;\n\nproc phreg data=bootbmt noprint; /* Death in remission */\nby sampnum;\nmodel intxrel*state0(0)=/eventcode=2;\nbaseline out=cif2 cif=cif2;\nrun;\n\nproc phreg data=bootbmt noprint; /* Overall surv. */\nby sampnum;\nmodel intxsurv*dead(0)=/eventcode=1;\nbaseline out=dead cif=cif23;\nrun;\n\ndata dead; set dead; time=intxsurv; drop intxsurv;  run;  \ndata surv; set surv; time=intxrel; drop intxrel; run;\ndata cif1; set cif1; time=intxrel; drop intxrel; run;\ndata cif2; set cif2; time=intxrel; drop intxrel; run;\ndata all; merge surv cif1 cif2 dead ; by sampnum time; run;\n\ndata allrev; set all;\nby sampnum time; \nretain last1 last2 last3 last4;\nif km=. then rfs=last1; if km ne . then rfs=km; \nif cif1=. then c1=last2; if cif1 ne . then c1=cif1;\nif cif2=. then c2=last3; if cif2 ne . then c2=cif2;\nif cif23=. then c23=last4; if cif23 ne . then c23=cif23;\noutput;\nlast1=rfs; last2=c1; last3=c2; last4=c23;\nrun;\n\ndata allrev; set allrev;\nq0=rfs; q2=c2; q3=c23-c2; q1=c1-q3; sum=q0+q1+q2+q3; prev=q1/(q0+q1); tment=0;\nrun;\n\n%areastepby(allrev,sampnum,tment,0,time,q0,120);\nproc means data=last mean stddev;\nvar mu;\nrun;\n\n/* macro need to be changed for cuminc (start in 0) */\n\n%macro areastepby0(data,byvar,beh,grp,tid,y,tau);\n    data select;\n        set &data;\n        where &beh=&grp;\n    run;\n    data select;\n        set select;\n        by &byvar;\n        retain mu oldt oldy;\n        if first.&byvar then do oldt=0; oldy=0; mu=0;  end;\n        if &tid>&tau then do;\n        &tid=&tau; &y=oldy; end;\n        if not first.&byvar then mu+oldy*(&tid-oldt);\n        if last.&byvar then do;\n        if &tid<&tau then mu+(&tau-&tid)*&y; end;\n        oldy=&y; oldt=&tid;\n    run;\n    data last;\n        set select;\n        by  &byvar;\n        if last.&byvar;\n    run;\n%mend areastepby;\n\n%areastepby0(allrev,sampnum,tment,0,time,q1,120);\nproc means data=last mean stddev;\nvar mu;\nrun;\n%areastepby0(allrev,sampnum,tment,0,time,c23,120);\nproc means data=last mean stddev;\nvar mu;\nrun;\n%areastepby0(allrev,sampnum,tment,0,time,q2,120);\nproc means data=last mean stddev;\nvar mu;\nrun;\n%areastepby0(allrev,sampnum,tment,0,time,q3,120);\nproc means data=last mean stddev;\nvar mu;\nrun;\n\n\n\n\n\n\n\nTable 4.8\n\nRSAS\n\n\n\n\nCode show/hide\nbmt$age10<-bmt$age/10\nsummary(coxph(Surv(intxrel, rel == 1) ~ bmonly + all + age, data = bmt, \n      ties = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(intxrel, rel == 1) ~ bmonly + all + age, \n    data = bmt, ties = \"breslow\")\n\n  n= 2009, number of events= 259 \n\n            coef exp(coef)  se(coef)      z Pr(>|z|)    \nbmonly -0.107627  0.897962  0.134487 -0.800    0.424    \nall     0.548871  1.731297  0.129307  4.245 2.19e-05 ***\nage    -0.004487  0.995523  0.004440 -1.011    0.312    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nbmonly    0.8980     1.1136    0.6899     1.169\nall       1.7313     0.5776    1.3437     2.231\nage       0.9955     1.0045    0.9869     1.004\n\nConcordance= 0.576  (se = 0.018 )\nLikelihood ratio test= 20.61  on 3 df,   p=1e-04\nWald test            = 21.57  on 3 df,   p=8e-05\nScore (logrank) test = 22.12  on 3 df,   p=6e-05\n\n\nCode show/hide\nsummary(coxph(Surv(intxrel, rel == 1) ~ bmonly + all + age + cluster(team), \n      data = bmt, \n      ties = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(intxrel, rel == 1) ~ bmonly + all + age, \n    data = bmt, ties = \"breslow\", cluster = team)\n\n  n= 2009, number of events= 259 \n\n            coef exp(coef)  se(coef) robust se      z Pr(>|z|)   \nbmonly -0.107627  0.897962  0.134487  0.137880 -0.781   0.4350   \nall     0.548871  1.731297  0.129307  0.173916  3.156   0.0016 **\nage    -0.004487  0.995523  0.004440  0.007486 -0.599   0.5489   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nbmonly    0.8980     1.1136    0.6853     1.177\nall       1.7313     0.5776    1.2312     2.434\nage       0.9955     1.0045    0.9810     1.010\n\nConcordance= 0.576  (se = 0.022 )\nLikelihood ratio test= 20.61  on 3 df,   p=1e-04\nWald test            = 16.34  on 3 df,   p=0.001\nScore (logrank) test = 22.12  on 3 df,   p=6e-05,   Robust = 13.19  p=0.004\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n# Relapse-free survival\nsummary(coxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age, data = bmt, \n      ties = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(intxrel, state0 != 0) ~ bmonly + all + age, \n    data = bmt, ties = \"breslow\")\n\n  n= 2009, number of events= 764 \n\n            coef exp(coef)  se(coef)      z Pr(>|z|)    \nbmonly -0.161079  0.851225  0.077445 -2.080   0.0375 *  \nall     0.454636  1.575599  0.077733  5.849 4.95e-09 ***\nage     0.016917  1.017061  0.002588  6.537 6.28e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nbmonly    0.8512     1.1748    0.7313    0.9908\nall       1.5756     0.6347    1.3529    1.8349\nage       1.0171     0.9832    1.0119    1.0222\n\nConcordance= 0.588  (se = 0.011 )\nLikelihood ratio test= 81.95  on 3 df,   p=<2e-16\nWald test            = 81.52  on 3 df,   p=<2e-16\nScore (logrank) test = 82.07  on 3 df,   p=<2e-16\n\n\nCode show/hide\nsummary(coxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age + cluster(team), \n      data = bmt, \n      ties = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(intxrel, state0 != 0) ~ bmonly + all + age, \n    data = bmt, ties = \"breslow\", cluster = team)\n\n  n= 2009, number of events= 764 \n\n            coef exp(coef)  se(coef) robust se      z Pr(>|z|)    \nbmonly -0.161079  0.851225  0.077445  0.077240 -2.085    0.037 *  \nall     0.454636  1.575599  0.077733  0.078077  5.823 5.78e-09 ***\nage     0.016917  1.017061  0.002588  0.003328  5.083 3.71e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nbmonly    0.8512     1.1748    0.7316    0.9904\nall       1.5756     0.6347    1.3520    1.8361\nage       1.0171     0.9832    1.0104    1.0237\n\nConcordance= 0.588  (se = 0.013 )\nLikelihood ratio test= 81.95  on 3 df,   p=<2e-16\nWald test            = 52.58  on 3 df,   p=2e-11\nScore (logrank) test = 82.07  on 3 df,   p=<2e-16,   Robust = 47.68  p=2e-10\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n# overall survival\nsummary(coxph(Surv(intxsurv, dead != 0) ~ bmonly + all + age, data = bmt, \n      ties = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(intxsurv, dead != 0) ~ bmonly + all + age, \n    data = bmt, ties = \"breslow\")\n\n  n= 2009, number of events= 737 \n\n            coef exp(coef)  se(coef)      z Pr(>|z|)    \nbmonly -0.160104  0.852055  0.079035 -2.026   0.0428 *  \nall     0.405480  1.500022  0.079556  5.097 3.45e-07 ***\nage     0.017286  1.017437  0.002636  6.558 5.45e-11 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nbmonly    0.8521     1.1736    0.7298    0.9948\nall       1.5000     0.6667    1.2835    1.7531\nage       1.0174     0.9829    1.0122    1.0227\n\nConcordance= 0.59  (se = 0.011 )\nLikelihood ratio test= 76.65  on 3 df,   p=<2e-16\nWald test            = 76.05  on 3 df,   p=<2e-16\nScore (logrank) test = 76.57  on 3 df,   p=<2e-16\n\n\nCode show/hide\nsummary(coxph(Surv(intxsurv, dead != 0) ~ bmonly + all + age + cluster(team), \n      data = bmt, \n      ties = \"breslow\"))\n\n\nCall:\ncoxph(formula = Surv(intxsurv, dead != 0) ~ bmonly + all + age, \n    data = bmt, ties = \"breslow\", cluster = team)\n\n  n= 2009, number of events= 737 \n\n            coef exp(coef)  se(coef) robust se      z Pr(>|z|)    \nbmonly -0.160104  0.852055  0.079035  0.080788 -1.982   0.0475 *  \nall     0.405480  1.500022  0.079556  0.077594  5.226 1.74e-07 ***\nage     0.017286  1.017437  0.002636  0.003339  5.177 2.26e-07 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n       exp(coef) exp(-coef) lower .95 upper .95\nbmonly    0.8521     1.1736    0.7273    0.9982\nall       1.5000     0.6667    1.2884    1.7464\nage       1.0174     0.9829    1.0108    1.0241\n\nConcordance= 0.59  (se = 0.013 )\nLikelihood ratio test= 76.65  on 3 df,   p=<2e-16\nWald test            = 48.78  on 3 df,   p=1e-10\nScore (logrank) test = 76.57  on 3 df,   p=<2e-16,   Robust = 45.26  p=8e-10\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\n\n\n\n\nCode show/hide\n/* Relapse, relapse-free and overall survival\n   without and with adjustment for center */\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*rel(0)=bmonly all age;\nrun;\nproc phreg data=bmt covs(aggregate);\n    class bmonly(ref=\"0\") all(ref=\"0\") team;\n    model intxrel*rel(0)=bmonly all age;\n    id team;\nrun;\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*state0(0)=bmonly all age;\nrun;\nproc phreg data=bmt covs(aggregate);\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxrel*state0(0)=bmonly all age;\n    id team;\nrun;\nproc phreg data=bmt;\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxsurv*dead(0)=bmonly all age;\nrun;\nproc phreg data=bmt covs(aggregate);\n    class bmonly(ref=\"0\") all(ref=\"0\");\n    model intxsurv*dead(0)=bmonly all age;\n    id team;\nrun;\n\n\n\n\n\n\n\nTable 4.11\n\n\n\n\n\n\nImportant\n\n\n\nStill missing to make double data set for R - do we not have this somewhere else?\n\n\n\nRSAS\n\n\n\n\nCode show/hide\n# Relapse-free survival \ncoxph(Surv(intxrel, state0 > 0) ~ bmonly + all + age10, data=bmt, ties=\"breslow\")\n\n\nCall:\ncoxph(formula = Surv(intxrel, state0 > 0) ~ bmonly + all + age10, \n    data = bmt, ties = \"breslow\")\n\n           coef exp(coef) se(coef)      z        p\nbmonly -0.16108   0.85122  0.07745 -2.080   0.0375\nall     0.45464   1.57560  0.07773  5.849 4.95e-09\nage10   0.16917   1.18432  0.02588  6.537 6.28e-11\n\nLikelihood ratio test=81.95  on 3 df, p=< 2.2e-16\nn= 2009, number of events= 764 \n\n\nCode show/hide\n# Overall survival\ncoxph(Surv(intxsurv, dead != 0) ~ bmonly + all + age10, data=bmt, ties=\"breslow\")\n\n\nCall:\ncoxph(formula = Surv(intxsurv, dead != 0) ~ bmonly + all + age10, \n    data = bmt, ties = \"breslow\")\n\n           coef exp(coef) se(coef)      z        p\nbmonly -0.16010   0.85206  0.07904 -2.026   0.0428\nall     0.40548   1.50002  0.07956  5.097 3.45e-07\nage10   0.17286   1.18871  0.02636  6.558 5.45e-11\n\nLikelihood ratio test=76.65  on 3 df, p=< 2.2e-16\nn= 2009, number of events= 737 \n\n\nCode show/hide\nbmt1 <- bmt\nbmt1$gvhdny <- bmt$gvhd\nbmt1$nytgvhd <- ifelse(bmt1$gvhdny == 1, bmt1$tgvhd, bmt1$intxsurv)\nbmt1$gvhdny <- ifelse(bmt1$dead == 1, 1, bmt1$gvhdny)\n\n# gvhd free survival\ncoxph(Surv(nytgvhd, gvhdny != 0) ~ bmonly + all + age10, data=bmt1, ties=\"breslow\")\n\n\nCall:\ncoxph(formula = Surv(nytgvhd, gvhdny != 0) ~ bmonly + all + age10, \n    data = bmt1, ties = \"breslow\")\n\n           coef exp(coef) se(coef)      z        p\nbmonly -0.26024   0.77086  0.05930 -4.388 1.14e-05\nall     0.29235   1.33958  0.06005  4.869 1.12e-06\nage10   0.11699   1.12410  0.01936  6.043 1.51e-09\n\nLikelihood ratio test=97.36  on 3 df, p=< 2.2e-16\nn= 2009, number of events= 1324 \n\n\n\n\n\n\nCode show/hide\ndata double02; set bmt; \n    /* joint analysis of relapse-free and overall survival */\n    version=1; dc=state0>0; time=intxrel; gsource0=bmonly; gsource2=0;\n    disease0=all; disease2=0; age0=age; age2=0; output;\n    version=2; dc=dead; time=intxsurv; gsource2=bmonly; gsource0=0;\n    disease2=all; disease0=0; age2=age; age0=0; output;\nrun;\nproc phreg data=double02 covs(aggregate);\n    /* NB bmonly and all are now binary quantitative */\n    model time*dc(0)=gsource0 gsource2 disease0 disease2 age0 age2 / corrb;\n    strata version;\n    id id;\n    gs:  test gsource0=gsource2;\n    dis: test disease0=disease2;\n    a:   test age0=age2;\nrun;\nproc phreg data=double02 covs(aggregate);\n    model time*dc(0)=bmonly disease0 disease2 age;\n    strata version;\n    id id;\n    dis: test disease0=disease2;\nrun;\ndata bmt; set bmt;\n    gvhdny=gvhd; \n    if gvhdny=1 then nytgvhd=tgvhd;\n    if gvhdny=0 then do; nytgvhd=intxsurv; if dead=1 then gvhdny=1; end; \n    /* NB her tæller både GvHD og død uden GvHD med */\nrun;\ndata triple02G; set bmt; \n    /* joint analysis of relapse-free, GvHD-free and overall survival */\n    version=1; dc=state0>0; time=intxrel; gsource0=bmonly; \n    gsource2=0; gsourceG=0;\n    disease0=all; disease2=0; diseaseG=0; age0=age; age2=0; ageG=0; output;\n    version=2; dc=dead; time=intxsurv; gsource2=bmonly; \n    gsource0=0; gsourceG=0;\n    disease2=all; disease0=0; diseaseG=0; age2=age; age0=0; ageG=0; output;\n    version=3; dc=gvhdny; time=nytgvhd; gsourceG=bmonly; gsource0=0; gsource2=0;\n    diseaseG=all; disease0=0; disease2=0; ageG=age; age0=0; age2=0; output;\nrun;\nproc phreg data=triple02G covs(aggregate) covout outest=params3;\n    /* bmonly and all binary quatitative*/\n    model time*dc(0)=gsource0 gsource2 gsourceG disease0 disease2 diseaseG\n    age0 age2 ageG;\n    strata version;\n    id id;\nrun;"
  },
  {
    "objectID": "Ch4.html#exercises",
    "href": "Ch4.html#exercises",
    "title": "4  Intuition for marginal models",
    "section": "Exercises",
    "text": "Exercises\nThe SAS solutions are available as single files for download:\n\nExercises 4.1 - 4.7 and 4.10 (The Copenhagen Holter study)\nExercise 4.8 (Guinea-Bissau childhood vaccination study)\nExercise 4.9 (Recurrent episodes in affective disorders)\n\n\nExercise 4.1\nConsider the data from the Copenhagen Holter study and estimate the probabilities of stroke-free survival for subjects with or without ESVEA using the Kaplan-Meier estimator.\n\nRSAS\n\n\nThe data should be loaded as chs_data\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(survminer) #Plots of survival curves\nlibrary(survRM2) #RMST \nlibrary(mstate) #probtrans, ELOS\n\n\nFinally, we will convert the time variables to years and add a time variable and status indicator for the composite end-point stroke-free survival.\n\n\nCode show/hide\nchs_data <- chs_data %>% mutate(timeafib = timeafib/365.25,\n                                timestroke = timestroke/365.25,\n                                timedeath = timedeath/365.25,\n                                timestrokeordeath = ifelse(stroke == 1, timestroke, timedeath),\n                                strokeordeath = ifelse(stroke ==1, 1, death))\n\n\nTo estimate the probability of stroke-free survival for subjects with or without ESVEA using the Kaplan-Meier estimator we use the survfit function from the survival package.\n\n\nCode show/hide\n# Kaplan-Meier estimate of the survival functions\nkm41 <- survfit(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea, data = chs_data)\n\nkmdata41 <- data.frame(time = km41$time,\n                        surv = km41$surv, \n                        esvea = c(rep(names(km41$strata)[1], km41$strata[1]),\n                               rep(names(km41$strata)[2], km41$strata[2])))\n\n\nThen, we can plot the Kaplan-Meier estimates of the survival probabilities against time.\n\n\nCode show/hide\n# Plotting the Kaplan-Meier estimate\n(fig41 <- ggplot(data = kmdata41) + geom_step(aes(x = time, y = surv, linetype = esvea), size = 1) + \n          scale_linetype_discrete(\"ESVEA\", labels = c(\"0\", \"1\")) + \n          ylim(c(0,1)) +\n          xlab(\"Time since randomization (years)\") + \n          ylab(\"Probability of stroke-free survival\"))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* We must first load the data;\nproc import out = chs_data\n    datafile = 'data/cphholter.csv'\n    dbms= csv replace;\n    getnames=yes;\nrun;\n\n* We will convert the time variables (timeafib, timestroke, and timedeath) from days to years;\n* Furthermore, we add variables for the composite end-point of stroke or death without stroke;\ndata chs_data;\n    set chs_data;\n    timeafib = timeafib/365.25;\n    timestroke = timestroke/365.25;\n    timedeath = timedeath/365.25;\n    timestrokeordeath = timedeath;\n    if stroke = 1 then timestrokeordeath = timestroke;\n    strokeordeath = death;\n    if stroke = 1 then strokeordeath = 1;\nrun;\n\n* We estimate the Kaplan-Meier survival function for subjects with or without ESVEA with the phreg procedure where 'esvea' is added\n  in the strata statement. The result is saved as 'survdat'.;\n\ntitle \"4.1: Stroke-free survival probabilities estimated with the Kaplan-Meier estimator\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=;\n    strata esvea;\n    baseline out=survdat survival=km;\nrun;\n\n* Then the estimates are plotted using the gplot procedure;\n\nproc gplot data=survdat;\nplot km*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 1 by 0.1 label=(a=90 'Survival probability');\n    symbol1 i=stepjl c=red;\n    symbol2 i=stepjl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\nExercise 4.2\nConsider the Cox model for stroke-free survival in the Copenhagen Holter study including the covariates ESVEA, sex, age, and systolic blood pressure (Exercise 2.4).\n\n1.\nEstimate the survival functions for a female subject aged 65 years and with systolic blood pressure equal to 150 mmHg – either with or without ESVEA.\n\nRSAS\n\n\nThe Cox model including ESVEA, sex, age, and systolic blood pressure is fitted using the coxph function from the survival package as first done in exercise 2.4.1.\n\n\nCode show/hide\n# Cox model for the composite end-point stroke or death with covariates ESVEA, sex, age, and systolic blood pressure\ncox241 <- coxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + sex + age + sbp , data = chs_data, method = \"breslow\")\nsummary(cox241)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea + \n    sex + age + sbp, data = chs_data, method = \"breslow\")\n\n  n= 675, number of events= 285 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.318284  1.374767 0.152587 2.086   0.0370 *  \nsex   0.577585  1.781731 0.126946 4.550 5.37e-06 ***\nage   0.076658  1.079673 0.009362 8.189 2.64e-16 ***\nsbp   0.005152  1.005165 0.002438 2.113   0.0346 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.375     0.7274     1.019     1.854\nsex       1.782     0.5613     1.389     2.285\nage       1.080     0.9262     1.060     1.100\nsbp       1.005     0.9949     1.000     1.010\n\nConcordance= 0.672  (se = 0.016 )\nLikelihood ratio test= 99.45  on 4 df,   p=<2e-16\nWald test            = 104.1  on 4 df,   p=<2e-16\nScore (logrank) test = 110  on 4 df,   p=<2e-16\n\n\nWe will now estimate the survival functions for a 65-year-old female (sex = 0) with a systolic blood pressure of 150mmHg with or without ESVEA. The values of the covariates are stored in the data frame covar. The survival function is then found using the survfit function with the formula argument given by the Cox model and the newdata argument given by the data frame covar.\n\n\nCode show/hide\n# Defining the covariates\ncovar <- data.frame(esvea = c(0,1), sex = 0, age = 65, sbp = 150)\n\n# Estimate of the survival function given the covariate values\nsurv421 <- survfit(cox241, newdata = covar)\n\n\nFinally, the survival functions are plotted\n\n\nCode show/hide\n# Plotting the predicted survival probabilities.\n(plot421 <- ggplot() + geom_step(aes(x = surv421$time, y = surv421$surv[,1], color = \"ESVEA=0\")) +\n  geom_step(aes(x = surv421$time, y = surv421$surv[,2], color = \"ESVEA=1\")) +\n  theme(legend.title=element_blank()) +\n  ylab(\"Probability\") + xlab(\"Time since randomization (years)\") + \n  ggtitle(\"Stroke-free survival for a 65-year-old woman with a sbp of 150mmHg\")  + ylim(c(0,1)))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* To estimate the stroke-free survival functions for a 65-year old woman with a systolic blood pressure of 150mmHg with or without\n  ESVEA we will first create a data frame 'cov' with the desired values of the covariate.;\n\ndata cov;\n    esvea = 0; sex = 0; age = 65; sbp = 150; output;\n    esvea = 1; sex = 0; age = 65; sbp = 150; output;\nrun;\n\n* Then, a Cox model including ESVEA, sex, age, and systolic blood pressure is fitted with the phreg procedure and the stroke-free\n  survival functions for subjects with values according to 'cov' are saved as 'survdata'.;\n\ntitle \"4.2: Stroke-free survival for a 65-year old woman with sbp = 150mmHg\";\nproc phreg data=chs_data;\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp;\n    baseline out=survdata survival=surv covariates = cov;\nrun;\n\n* Finally, the survival functions are plotted using the gplot procedure;\n\nproc gplot data=survdata;\n    plot surv*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 1 by 0.1 label=(a=90 'Stroke-free survival probability');\n    symbol1  i=stepjl c=blue;\n    symbol2  i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\n2.\nEstimate the survival functions for patients with or without ESVEA using the g-formula.\n\nRSAS\n\n\nTo estimate the survival functions using the g-formula, two predictions are made for each subject, i: one setting ESVEA \\((Z_1)\\) to 0, and one setting ESVEA to 1, while keeping the observed values of sex, age, and systolic blood pressure \\((Z_2, Z_3, Z_4)\\). The g-formula estimate is then\n\\[\n\\hat{S}_j(t) = \\frac{1}{n}\\sum_{i}\\hat{S}(t|Z_1 = j, Z_{2i}, Z_{3i}, Z_{4i}), j = 0,1\n\\] Thus, we will make two new data frames corresponding to the two settings, i.e. ESVEA = 0 (chs_covar0) or ESVEA = 1 (chs_covar1) and all other covariates equal to the observed values. Then, the two predictions of the survival functions for each subject are found using the survfit function, and the average of these predictions with or without ESVEA are taken to obtaian the g-formula estimate.\n\n\nCode show/hide\n# Creating data sets with or without ESVEA while keeping the observed values of sex, age, and sbp for all subjects\nchs_covar0 <- data.frame(esvea = 0, sex = chs_data$sex, age = chs_data$age, sbp = chs_data$sbp)\nchs_covar1 <- data.frame(esvea = 1, sex = chs_data$sex, age = chs_data$age, sbp = chs_data$sbp)\n                           \n# Predicting the survival functions for all rows in chs_covar0 and chs_covar1\npred0_422 <- survfit(cox241, newdata = chs_covar0)\npred1_422 <- survfit(cox241, newdata = chs_covar1)\n\n# Taking the average prediction at each transition time\nsurv0_422 <- rowMeans(pred0_422$surv, na.rm = TRUE)\nsurv1_422 <- rowMeans(pred1_422$surv, na.rm = TRUE)\n\n\nThe survival functions estimated using the g-formula are then plotted against time.\n\n\nCode show/hide\n# Plotting the predicted survival probabilities (g-formula).\n(plot422 <- ggplot() + geom_step(aes(x = pred0_422$time, y = surv0_422, color = \"ESVEA=0\")) +\n  geom_step(aes(x =pred1_422$time, y = surv1_422, color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Probability\") + xlab(\"Time since randomization (years)\") + \n  ggtitle(\"Survival function for stroke-free survival (g-formula)\")) + ylim(c(0,1))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* A Cox model including ESVEA, sex, age, and systolic blood pressure is fitted and 'diradj group = esvea' is added to obtain the\n  predicted survival functions for patients with or without ESVEA using the g-formula. The data is saved as 'gsurv'.;\n\ntitle \"4.2: Cox model for the outcome stroke-free survival including ESVEA, sex, age, and systolic blood pressure\";\nproc phreg data=chs_data;\n    class esvea (ref = '0');\n    model timestrokeordeath*strokeordeath(0)=esvea sex age sbp;\n    baseline out=gsurv survival=surv / diradj group=esvea;\nrun;\n\n* The survival functions are then plotted using the gplot procedure;\n\ntitle \"4.2: Stroke-free survival probabilities estimated using the G-formula\";\nproc gplot data=gsurv;\n    plot surv*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 minor=none label=('Years');\n    axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Estimated survival function (g-formula)');\n    symbol1  v=none i=stepjl c=blue;\n    symbol2  v=none i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\n\nExercise 4.3\nConsider the data from the Copenhagen Holter study and fit a linear model for the 3-year restricted mean time to the composite end-point stroke or death including ESVEA, sex, age, and systolic blood pressure.\n\nRSAS\n\n\nWe will use the rmst2 function from the survRM2 package to fit a linear model for the 3-year restricted mean time to the composite end-point stroke or death including ESVEA, sex, age, and systolic blood pressure. We must include the arguments time, status, arm, tau and covariates which in this case are timestrokeordeath, strokeordeath, esvea, 3 and sex,age, and systolic blood pressure respectively.\n\n\nCode show/hide\n# 3-year restricted mean time to the composite end-point stroke or death\n\n# Attention must be restricted to subjects with complete covariate data (sbp).\n\nnewchs <- subset(chs_data,!is.na(sbp))\n\nrmst <- rmst2(time = newchs$timestrokeordeath, status = newchs$strokeordeath, arm = newchs$esvea, tau = 3,  covariates = newchs[, c(8,9,17)] )\nrmst$RMST.difference.adjusted\n\n\n                   coef     se(coef)          z          p     lower .95\nintercept  3.3551746975 0.2078355430 16.1434115 0.00000000  2.9478245185\narm       -0.0273741987 0.0527081358 -0.5193543 0.60351367 -0.1306802466\nsex       -0.0540324232 0.0352191476 -1.5341775 0.12498600 -0.1230606841\nage       -0.0073221791 0.0028486997 -2.5703583 0.01015934 -0.0129055280\nsbp        0.0005144224 0.0006748332  0.7622955 0.44588365 -0.0008082265\n             upper .95\nintercept  3.762524877\narm        0.075931849\nsex        0.014995838\nage       -0.001738830\nsbp        0.001837071\n\n\nThus, we obtain the following model for the 3-year restricted mean time to the composite end-point stroke or death\n\\[\\varepsilon(3|Z) = 3.3552 -0.0274\\cdot Z_1 -0.054\\cdot Z_2 -0.0073\\cdot Z_3 + 0.0005\\cdot Z_4,\\]\nwhere \\((Z_1,Z_2,Z_3,Z_4)\\) are ESVEA, sex, age, and systolic blood pressure.\nWe will finally estimate the 3-year resticted mean time to the composite end-point stroke or death for subjects with or without ESVEA non-parametrically using the area under the Kaplan-Meier curve. We use the object from Exercise 4.1.\n\n\nCode show/hide\nprint(km41,rmean=3)\n\n\nCall: survfit(formula = Surv(timestrokeordeath, strokeordeath) ~ esvea, \n    data = chs_data)\n\n          n events rmean* se(rmean) median 0.95LCL 0.95UCL\nesvea=0 579    230   2.93    0.0151     NA      NA      NA\nesvea=1  99     57   2.87    0.0487     11    8.93      NA\n    * restricted mean with upper limit =  3 \n\n\n\n\n\n\nCode show/hide\n* We will estimate the 3-year restricted mean time survival to the composite end-point strokke or death including ESVEA, sex, age, \n  and systolic blood pressure using the rmstreg procedure. We specify 'tau = 3' in the rmstreg statement to obtain a 3 year time \n  limit and 'link = linear' in the model statement to get a linear model. NB: requires SAS STAT 15.1;\n\ntitle \"4.3\";\nproc rmstreg data=chs_data tau=3;\n   model timestrokeordeath*strokeordeath(0)=esvea sex age sbp / link=linear;\nrun;\n\n* Thus, we obtain the following model for the 3-year restricted mean time to the composite end-point stroke or death\n  epsilon(3|Z) = 3.3552 - 0.0274*Z1 - 0.0540*Z2 - 0.0073*Z3 + 0.0005*Z4, where (Z1,Z2,Z3,Z4) are ESVEA, age, sex, and systolic blood \n  pressure;\n\n* We will also present the non-parametric estimates. We restrict the data set at tau=3.  NB: requires SAS STAT 15.1;\n\nproc lifetest data=chs_data rmst(tau=3);\ntime timestrokeordeath*strokeordeath(0);\nstrata esvea;\nrun;\n\n\n\n\n\n\n\nExercise 4.4\nConsider the Cox models for the cause-specific hazards for the outcomes stroke and death without stroke in the Copenhagen Holter study including ESVEA, sex, age, and systolic blood pressure (Exercise 2.7). Estimate (using plug-in) the cumulative incidences for both end-points for a female subject aged 65 years and with systolic blood pressure equal to 150 mmHg – either with or without ESVEA.\n\nRSAS\n\n\nThe cumulative incidence functions for cause \\(h\\) for a subject with covariates \\(Z\\) is calculated using the formula \\(F_{h}(t|Z) = \\int_0^t S(u|Z)\\alpha_{h}(u|Z)du\\), where \\(S(u|Z) = \\prod\\limits_{j} \\exp(-\\int_0^u \\alpha_j(x|Z) dx)\\).\nWe will first fit Cox models for the cause-specific outcomes. For the outcome stroke we will use timestrokeordeath as time variable and stroke as status indicator in the Surv object. For the outcome death without stroke we will also use timestrokeordeath as time variable, but we must create a new status indicator, which will be named death_wo_stroke.\n\n\nCode show/hide\n# Cox model with stroke as outcome\ncox44_stroke <- coxph(formula = Surv(timestrokeordeath, stroke) ~ esvea + sex + age + sbp , data = chs_data)\nsummary(cox44_stroke)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, stroke) ~ esvea + sex + \n    age + sbp, data = chs_data)\n\n  n= 675, number of events= 72 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.702407  2.018606 0.269968 2.602  0.00927 ** \nsex   0.491881  1.635389 0.248634 1.978  0.04789 *  \nage   0.078980  1.082183 0.019054 4.145  3.4e-05 ***\nsbp   0.011340  1.011404 0.004651 2.438  0.01477 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     2.019     0.4954     1.189     3.426\nsex       1.635     0.6115     1.005     2.662\nage       1.082     0.9241     1.043     1.123\nsbp       1.011     0.9887     1.002     1.021\n\nConcordance= 0.728  (se = 0.028 )\nLikelihood ratio test= 41.22  on 4 df,   p=2e-08\nWald test            = 43.26  on 4 df,   p=9e-09\nScore (logrank) test = 47.2  on 4 df,   p=1e-09\n\n\nCode show/hide\n# Status indicator for death without stroke\nchs_data$death_wo_stroke <- ifelse(chs_data$stroke == 1, 0, chs_data$death)\n\n# Cox model with death without stroke as outcome\ncox44_death <- coxph(formula = Surv(timestrokeordeath, death_wo_stroke) ~ esvea + sex + age + sbp , data = chs_data)\nsummary(cox44_death)\n\n\nCall:\ncoxph(formula = Surv(timestrokeordeath, death_wo_stroke) ~ esvea + \n    sex + age + sbp, data = chs_data)\n\n  n= 675, number of events= 213 \n   (3 observations deleted due to missingness)\n\n          coef exp(coef) se(coef)     z Pr(>|z|)    \nesvea 0.160110  1.173640 0.186795 0.857    0.391    \nsex   0.605186  1.831592 0.147665 4.098 4.16e-05 ***\nage   0.076075  1.079043 0.010758 7.071 1.54e-12 ***\nsbp   0.002955  1.002960 0.002867 1.031    0.303    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.174     0.8521    0.8138     1.693\nsex       1.832     0.5460    1.3713     2.446\nage       1.079     0.9267    1.0565     1.102\nsbp       1.003     0.9970    0.9973     1.009\n\nConcordance= 0.657  (se = 0.019 )\nLikelihood ratio test= 64.38  on 4 df,   p=3e-13\nWald test            = 67.44  on 4 df,   p=8e-14\nScore (logrank) test = 70.93  on 4 df,   p=1e-14\n\n\nThen, the hazard, \\(\\alpha_h(t|Z)\\) and \\(\\exp(-\\int_0^ta_{h}(t|Z))\\) are extracted for a 65-year-old female with systolic blood pressure of 150mmHg with or without ESVEA for each cause-specific Cox model using the survfit function.\n\n\nCode show/hide\n# Survfit for the cause-specific hazard stroke given covariates Z\nsurvfit_stroke44 <- survfit(cox44_stroke, newdata = covar)\n# Estimate of exp(-A_02(t|Z))\nS0_stroke44 <- survfit_stroke44$surv[,1]\nS1_stroke44 <- survfit_stroke44$surv[,2]\n#Estimate of the hazard for stroke, alpha_02(t|Z)\nhaz0_stroke44 <- c(0, diff(survfit_stroke44$cumhaz[,1]))\nhaz1_stroke44 <- c(0, diff(survfit_stroke44$cumhaz[,2]))\n\n# Survfit for the cause specific hazard death without stroke given covariates Z\nsurvfit_death44 <- survfit(cox44_death, newdata = covar)\n# Estimate of exp(-A_03(t|Z))\nS0_death44 <- survfit_death44$surv[,1]\nS1_death44 <- survfit_death44$surv[,2]\n# Estimate of the hazard for death without stroke, alpha_03(t|Z)\nhaz0_death44 <- c(0, diff(survfit_death44$cumhaz[,1]))\nhaz1_death44 <- c(0, diff(survfit_death44$cumhaz[,2]))\n\n\n\n\nCode show/hide\n# Estimate of cumulative incidence functions for stroke\ncif0_stroke44 <- cumsum(S0_stroke44*S0_death44*haz0_stroke44)\ncif1_stroke44 <- cumsum(S1_stroke44*S1_death44*haz1_stroke44)\n\n#Plotting the cumulative incidence function with stroke as outcome for a 65-year-old female with sbp of 150mmHg\n(plot44_stroke <- ggplot() + geom_step(aes(x = survfit_stroke44$time, y = cif0_stroke44, color = \"ESVEA=0\")) +\n  geom_step(aes(x =survfit_stroke44$time, y = cif1_stroke44, color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Cumulative incidence\") + xlab(\"Time since randomization (years)\") + ggtitle(\"Cox: CIF for stroke for a 65-year-old female with sbp 150mmHg\"))\n\n\n\n\n\nLikewise, we can estimate and plot the cumulative incidence functions for the outcome death without stroke.\n\n\nCode show/hide\n# Estimate of cumulative incidence functions for death without stroke\ncif0_death44 <- cumsum(S0_stroke44*S0_death44*haz0_death44)\ncif1_death44 <- cumsum(S1_stroke44*S1_death44*haz1_death44)\n\n#Plotting the cumulative incidence function with stroke as outcome for a 65-year-old female with sbp of 150mmHg\n(plot44_death <- ggplot() + geom_step(aes(x = survfit_death44$time, y = cif0_death44, color = \"ESVEA=0\")) +\n  geom_step(aes(x =survfit_death44$time, y = cif1_death44, color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Cumulative incidence\") + xlab(\"Time since randomization (years)\") + \n  ggtitle(\"Cox: CIF for death for a 65-year-old female with sbp 150mmHg\"))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* We must first create a variable for the competing risks which we will call 'event'. 0 is censored, 1 is stroke, and 2 is death \n  without stroke;\n\ndata chs_data;\n    set chs_data;\n    death_wo_stroke = death;\n    if stroke = 1 then death_wo_stroke = 0;\n    event = 0;\n    if stroke = 1 then event = 1;\n    if death_wo_stroke = 1 then event = 2;\nrun;\n\n* Then we will fit a Cox model returning the predicted cumulative incidence functions with the specified covariates. \n  This is done by adding the argument eventcode(cox) to the model statement and adding the 'cif' argument in the baseline \n  statement.  NB: requires SAS STAT 15.1;\n\nproc phreg data = chs_data noprint; \n    model timestrokeordeath*event(0) =esvea sex age sbp / eventcode(cox) = 1;\n    baseline covariates = cov out=cif44_stroke cif = cif;\nrun;\n\n* Finally, the cumulative incidence functions are plotted using the gplot procedure;\n\ntitle '4.4: CIF for the outcome stroke (based on Cox model)';\nproc gplot data=cif44_stroke;\n    plot cif*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 0.2 by 0.02 label=(a=90 'CIF for stroke');\n    symbol1  i=stepjl c=blue;\n    symbol2  i=stepjl c=red;\nrun;\n\n* Then, we repeat the procedure for the outcome death without stroke;\n\nproc phreg data = chs_data noprint; \n    model timestrokeordeath*event(0) =esvea sex age sbp / eventcode(cox) = 2;\n    baseline covariates = cov out=cif44_death cif = cif;\nrun;\n\n* We can now plot the cumulative incidence functions gpt death without stroke using the gplot procedure;\n\ntitle '4.4: CIF for the outcome death without stroke (based on Cox model)';\nproc gplot data=cif44_death;\n    plot cif*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 0.3 by 0.03 label=(a=90 'CIF for death w/o stroke');\n    symbol1  i=stepjl c=blue;\n    symbol2  i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\nExercise 4.5\n\n1.\nRepeat the previous question using instead Fine-Gray models.\n\nRSAS\n\n\nWe will fit the Fine-Gray models using the finegray function from the survival package. We must make a new status indicator with one level for each possible outcome, which we will call fg_event. The value 0 must indicate stroke-free survival and we let 1 indicate stroke and 2 indicate death without stroke.\n\n\nCode show/hide\n#Creating event variable, 0 = censored, 1 = stroke, 2 = death w/o stroke\nfg_event <- with(chs_data, ifelse(death_wo_stroke == 0, stroke, death_wo_stroke*2))\n\n\nThe finegray function takes a formula argument with a Surv object on the left of ‘~’ and ‘.’ on the right. The cause of interest is specified by the etype argument.\nAfterwards the model is fitted using the coxph function with the data frame created by the finegray function. The formula argument should have Surv(fgstart,fgstop,fgstatus) on the left side of ‘~’ and as usual the covariates of interest (ESVEA, age, sex, and sbp) on the right. The argument weigth = fgwt must also be included.\n\n\nCode show/hide\n#Fitting Fine-Gray model for stroke\nfgdata_stroke <- finegray(Surv(timestrokeordeath, factor(fg_event)) ~ ., etype = 1, data =chs_data)\nfg45_stroke <- coxph(Surv(fgstart, fgstop, fgstatus) ~ esvea + sex + age + sbp, weight = fgwt, data = fgdata_stroke)\nsummary(fg45_stroke)\n\n\nCall:\ncoxph(formula = Surv(fgstart, fgstop, fgstatus) ~ esvea + sex + \n    age + sbp, data = fgdata_stroke, weights = fgwt)\n\n  n= 888, number of events= 72 \n   (4 observations deleted due to missingness)\n\n          coef exp(coef) se(coef) robust se     z Pr(>|z|)    \nesvea 0.593921  1.811075 0.271675  0.275526 2.156 0.031116 *  \nsex   0.379189  1.461099 0.248427  0.243020 1.560 0.118684    \nage   0.063347  1.065397 0.019072  0.018469 3.430 0.000604 ***\nsbp   0.010629  1.010686 0.004608  0.004196 2.533 0.011305 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea     1.811     0.5522    1.0554     3.108\nsex       1.461     0.6844    0.9074     2.353\nage       1.065     0.9386    1.0275     1.105\nsbp       1.011     0.9894    1.0024     1.019\n\nConcordance= 0.699  (se = 0.029 )\nLikelihood ratio test= 30.7  on 4 df,   p=4e-06\nWald test            = 37.72  on 4 df,   p=1e-07\nScore (logrank) test = 34.45  on 4 df,   p=6e-07,   Robust = 24.82  p=5e-05\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\n\n\nCode show/hide\n#Fitting Fine-Gray for death without stroke\nfgdata_death <- finegray(Surv(timestrokeordeath, factor(fg_event)) ~ ., etype = 2, data =chs_data)\nfg45_death <- coxph(Surv(fgstart, fgstop, fgstatus) ~ esvea + sex + age + sbp, weight = fgwt, data = fgdata_death)\nsummary(fg45_death)\n\n\nCall:\ncoxph(formula = Surv(fgstart, fgstop, fgstatus) ~ esvea + sex + \n    age + sbp, data = fgdata_death, weights = fgwt)\n\n  n= 1172, number of events= 213 \n   (10 observations deleted due to missingness)\n\n           coef exp(coef)  se(coef) robust se      z Pr(>|z|)    \nesvea -0.006269  0.993751  0.188059  0.193559 -0.032 0.974164    \nsex    0.530219  1.699304  0.148362  0.146047  3.630 0.000283 ***\nage    0.066495  1.068756  0.010812  0.010673  6.230 4.65e-10 ***\nsbp    0.001601  1.001602  0.002927  0.002917  0.549 0.583197    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea    0.9938     1.0063    0.6800     1.452\nsex      1.6993     0.5885    1.2763     2.262\nage      1.0688     0.9357    1.0466     1.091\nsbp      1.0016     0.9984    0.9959     1.007\n\nConcordance= 0.636  (se = 0.019 )\nLikelihood ratio test= 46.38  on 4 df,   p=2e-09\nWald test            = 50.97  on 4 df,   p=2e-10\nScore (logrank) test = 49.87  on 4 df,   p=4e-10,   Robust = 41  p=3e-08\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nAs described in Section 4.2.2, the Fine-Gray model has a simple expression for the cumulative incidence function for cause \\(h\\) since\n\\[\n\\log(-\\log(1-F_h(t|Z))) = \\log(\\tilde{A}_{0h}(t)) + LP_h \\\\\n\\iff F_h(t|Z) = 1-\\exp(-\\tilde{A}_{0h}(t)\\exp(LP_h))\n\\]\nThus, we can use the survfit function to obtain the estimate for \\(\\exp(-\\tilde{A}_{0h}(t)\\exp(\\beta Z))\\), given \\(Z_1 = 0,1\\) and \\((Z_2,Z_3,Z_4) = (0,65,150)\\) for the outcome stroke.\n\n\nCode show/hide\n# Cumulative incidence functions for the outcome stroke given covariates Z\ncif_stroke451 <- 1- survfit(fg45_stroke, newdata = covar)$surv\n\n\nThe Fine-Gray estimate of the cumulative incidence function for stroke can then be plotted.\n\n\nCode show/hide\n# Plotting the predicted cumulative incidence functions.\n(plot451_stroke <- ggplot() + geom_step(aes(x = survfit(fg45_stroke, newdata = covar)$time, y = cif_stroke451[,1], color = \"ESVEA=0\")) +\n  geom_step(aes(x =survfit(fg45_stroke, newdata = covar)$time, y = cif_stroke451[,2], color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Cumulative incidence\") + xlab(\"Time since randomization (years)\") + \n  ggtitle(\"Fine-Gray: CIF for stroke for a 65-year-old woman with sbp 150 mmHg\"))\n\n\n\n\n\nWe repeat the procedure above for the outcome death without stroke\n\n\nCode show/hide\n# Cumulative incidence functions for the outcome death without stroke given covariates Z\ncif_death451 <- 1- survfit(fg45_death, newdata = covar)$surv\n\n# Plotting the predicted cumulative incidence functions.\n(plot451_death <- ggplot() + geom_step(aes(x = survfit(fg45_death, newdata = covar)$time, y = cif_death451[,1], color = \"ESVEA=0\")) +\n  geom_step(aes(x =survfit(fg45_death, newdata = covar)$time, y = cif_death451[,2], color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Cumulative incidence\") + xlab(\"Time since randomization (years)\") \n  + ggtitle(\"Fine-Gray: CIF for death w/o stroke for a 65-year-old woman with sbp 150 mmHg\"))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* To obtain the CIF for the outcomes stroke and death without stroke using the Fine-Gray model, 'eventcode' is added instead of\n  'eventcode(cox)' in the model statement of the phreg procedure;\n\n* We will first estimate the CIF for the outcome stroke;\n\nproc phreg data = chs_data; \n    model timestrokeordeath*event(0) =esvea sex age sbp / eventcode = 1;\n    baseline covariates = cov out=cif451_stroke cif = cif;\nrun;\n\ntitle '4.5.1: CIF for the outcome stroke (based on Fine-Gray model)';\nproc gplot data=cif451_stroke;\n    plot cif*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 0.125 by 0.0125 label=(a=90 'CIF for stroke');\n    symbol1  i=stepjl c=blue;\n    symbol2  i=stepjl c=red;\nrun;\n\n* Then we will estimate the CIF for the outcome death without stroke;\n\nproc phreg data = chs_data; \n    model timestrokeordeath*event(0) =esvea sex age sbp / eventcode = 2;\n    baseline covariates = cov out=cif451_death cif = cif;\nrun;\n\ntitle '4.5.1: CIF for the outcome stroke (based on Fine-Gray model)';\nproc gplot data=cif451_death;\n    plot cif*timestrokeordeath=esvea/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 0.25 by 0.025 label=(a=90 'CIF for death w/o stroke');\n    symbol1  i=stepjl c=blue;\n    symbol2  i=stepjl c=red;\nrun;\nquit;\n\n\n\n\n\n\n\n2.\nEstimate the cumulative incidence functions for patients with or without ESVEA using the g-formula.\n\nRSAS\n\n\nTo obtain an estimate of the cumulative incidence functions with or without ESVEA using the g-formula we will exploit the simple expression of the CIF in the Fine-Gray model and simply use survfit and the data frames chs_covar0 and chs_covar1 from exercise 4.2.2 to make two predictions of \\(1 -\\exp(-\\tilde{A}_{0h}(t)\\exp(LP_h))\\) for each subject, one with ESVEA and one without ESVEA. Then, the g-formula estimate is the average of the predictions with or without ESVEA.\nWe will find the g-formula estimate of the cumulative incidence functions for the outcome stroke.\n\n\nCode show/hide\n# Calculating the CIFs for stroke for all subjects with ESVEA = 0 or ESVEA = 1\ncifs0_stroke452 <- 1- survfit(fg45_stroke, newdata = chs_covar0)$surv\ncifs1_stroke452 <- 1- survfit(fg45_stroke, newdata = chs_covar1)$surv\n\n# Taking the average of the CIFs\ncif0_stroke452 <- rowMeans(cifs0_stroke452)\ncif1_stroke452 <- rowMeans(cifs1_stroke452)\n\n# Plotting the predicted cumulative incidence functions for death without stroke.\n(plot452_stroke <- ggplot() + geom_step(aes(x = survfit(fg45_stroke, newdata = covar)$time, y = cif0_stroke452, color = \"ESVEA=0\")) +\n  geom_step(aes(x =survfit(fg45_stroke, newdata = covar)$time, y = cif1_stroke452, color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Cumulative incidence\") + xlab(\"Time since randomization (years)\") + \n  ggtitle(\"Fine-Gray: CIF for stroke (g-formula)\"))\n\n\n\n\n\nThen, we repeat the procedure for the outcome death without stroke.\n\n\nCode show/hide\n# Calculating the CIFs for death without stroke for all subjects with ESVEA = 0 or ESVEA = 1\ncifs0_death452 <- 1- survfit(fg45_death, newdata = chs_covar0)$surv\ncifs1_death452 <- 1- survfit(fg45_death, newdata = chs_covar1)$surv\n\n# Taking the average of the CIFs\ncif0_death452 <- rowMeans(cifs0_death452)\ncif1_death452 <- rowMeans(cifs1_death452)\n\n# Plotting the predicted cumulative incidence functions for death without stroke.\n(plot452_death <- ggplot() + geom_step(aes(x = survfit(fg45_death, newdata = covar)$time, y = cif0_death452, color = \"ESVEA=0\")) +\n  geom_step(aes(x =survfit(fg45_death, newdata = covar)$time, y = cif1_death452, color = \"ESVEA=1\")) +  theme(legend.title=element_blank()) +\n  ylab(\"Cumulative incidence\") + xlab(\"Time since randomization (years)\") \n  + ggtitle(\"Fine-Gray: CIF for death w/o stroke (g-formula)\"))\n\n\n\n\n\nWe will finally compare the estimates obtained using the g-formula with the non-parametric estimates obtained using the Aalen-Johansen estimator. The latter are obtained using survfit.\n\n\nCode show/hide\naj <- survfit(Surv(timestrokeordeath,factor(fg_event),type='mstate')~esvea,data=chs_data,influence = TRUE)\nplot(aj,col=c(1,2,1,2))\nlegend(\"topleft\",legend=c(\"esvea=0\", \"esvea=1\"),col=1:2,lty=c(1,1))\n\n\n\n\n\n\n\n\n\nCode show/hide\n* We will then make a macro function taking the cause of interest (stroke or death without stroke) and value of ESVEA as arguments;\n\n%macro cif452(cause, esvea);\n* Creating modified covariates. Observed values for sex, age, and sbp, while ESVEA is either 0 or 1 for all subjects;\ndata covar_temp;\n    set chs_data;\n    esvea = &esvea;\n    keep id esvea sex age sbp;\nrun;\n* Fine-Gray model returning the predicted cumulative incidence functions for the modified covariates for all patients;\nproc phreg data = chs_data noprint; \n    model timestrokeordeath*event(0) =esvea sex age sbp / eventcode = &cause;\n    baseline covariates = covar_temp out=ciftest cif = cif;\nrun;\n* Splitting the data set ciftest and returning one data set per patient containing the predicted cumulative incidence function;\n%do i = 1 %to 678;\n    data cif&i;\n        set ciftest;\n        if id = &i;\n        cif&i = cif;\n        keep id timestrokeordeath cif&i;  \n    run;    \n%end;\n* Calculating the average of the cumulative incidence functions;\ndata res&esvea;\n    set cif1-cif678 ;\n    merge cif1-cif678;\n    by timestrokeordeath;\n    ESVEA&esvea = mean(of cif1-cif678);\n    keep timestrokeordeath ESVEA&esvea;\nrun;\n%mend;\n\n*We call the function for the outcome stroke and ESVEA = 0,1;\n\n%cif452(1,1);\n%cif452(1,0);\n\n* Then we create a data set containing the cumulative incidence function for both ESVEA = 0 and ESVEA = 1 and plot the result.;\n\ndata stroke452;\n    set res0 res1;\n    merge res0 res1;\n    by timestrokeordeath;\nrun;\n\nproc sgplot data=stroke452;\ntitle1'4.5.2 - Cumulative incidence function for stroke predicted with Fine-Gray models using the g-formula';\n   step y=ESVEA0 x=timestrokeordeath;\n   step y=ESVEA1 x=timestrokeordeath;\n   xaxis label= \"Time (Years since randomization)\";\n   yaxis label= \"Cumulative incidence\";\nrun;\n\n* We repeat for the outcome death without stroke. First we call our macro function;\n\n%cif452(2,1);\n%cif452(2,0);\n\n*Then the data is collected in one data set and afterwards we plot the result;\n\ndata death452;\n    set res0 res1;\n    merge res0 res1;\n    by timestrokeordeath;\nrun;\n\nproc sgplot data=death452;\ntitle1'4.5.2 - Cumulative incidence function for death predicted with Fine-Gray models using the g-formula';\n   step y=ESVEA0 x=timestrokeordeath;\n   step y=ESVEA1 x=timestrokeordeath;\n   xaxis label= \"Time (Years since randomization)\";\n   yaxis label= \"Cumulative incidence\";\nrun;\n\n\n/* For comparison, we also estimate the cumulative incidences non-parametrically. */\n\nproc lifetest data=chs_data plots=(cif);\ntime timestrokeordeath*event(0)/eventcode=1;\nstrata esvea;\nrun;\n\n\nproc lifetest data=chs_data plots=(cif);\ntime timestrokeordeath*event(0)/eventcode=2;\nstrata esvea;\nrun;\n\n\n\n\n\n\n\n\nExercise 4.6\nConsider the data from the Copenhagen Holter study and fit linear models for the expected time lost (numbers of years) before 3 years due to either stroke or death without stroke including ESVEA, sex, age, and systolic blood pressure.\n\nRSAS-NA\n\n\nThere are currently no packages in R where a function estimating linear models for the time lost due to cause-specific outcomes are implemented.\nHowever, Conner and Trinquart (2021) have made their code available online. Thus, the following code chunk which implements such a function is adapted from their code on github\n\n\nCode show/hide\nrmtl.ipcw <- function(times, event, eoi=1, tau, cov=NULL, strata=FALSE, group=NULL){\n  \n  if(is.null(group) & strata==TRUE){stop('Please specify a factor variable to statify weights.')}\n  if(is.null(cov)){print('Warning: Fitting intercept-only model.')}\n  \n  # Round event times to avoid issues with survival() package rounding differently\n  y <- round(times,4)\n  id <- 1:length(y)\n  \n  # Recode so delta1 reflects event of interest, delta2 reflects all competing events. Assumes 0=censoring.\n  delta1 <- ifelse(event==eoi, 1, 0)\n  delta2 <- ifelse(event!=0 & event!=eoi, 1, 0)\n  \n  # Overall quantities\n  x <- cbind(int=rep(1, length(y)), cov)\n  p <- length(x[1,])\n  if(is.null(group)){group <- as.factor(rep(1, length(y)))}\n  \n  # Recode event indicators to reflect status at chosen tau\n  delta1[y>tau] <- 0\n  delta2[y>tau] <- 0\n  \n  y <- pmin(y, tau)\n  y1 <- y*delta1\n  \n  d0 <- 1 - (delta1 + delta2) # censoring indicator\n  d0[y==tau] <- 0  # If follow-up lasts til tau, the event will not count as 'censored' in IPCW weights\n  weights <- NULL\n  \n  ## Calculate IPCW weights (option to stratify by group) ## \n  \n  if(strata==TRUE){\n    for(aa in 1:length(unique(group))){\n      # Subset the group\n      a <- unique(group)[aa]\n      d0.a <- d0[group==a]\n      delta1.a <- delta1[group==a]\n      y.a <- y[group==a]\n      x.a <- x[group==a,]\n      n.a <- length(d0.a)\n      orig.id.a0 <- orig.id.a <- id[group==a]\n      \n      # Order the event times\n      id.a <- order(y.a)\n      y.a <- y.a[id.a]\n      d0.a <- d0.a[id.a]\n      delta1.a <- delta1.a[id.a]\n      x.a <- x.a[id.a,]\n      orig.id.a <- orig.id.a[id.a]\n      \n      # Derive IPCW\n      fit <- survfit(Surv(y.a, d0.a) ~ 1)\n      weights.a <- (1-d0.a)/rep(fit$surv, table(y.a))\n      \n      # Need to assign weights accordig to original ID, not ordered by event time\n      linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a)\n      weights <- rbind(weights, linked.weights.a)\n    }\n  } else {\n    \n    # Order the event times\n    id.a <- order(y)\n    y.a <- y[id.a]\n    d0.a <- d0[id.a]\n    delta1.a <- delta1[id.a]\n    x.a <- x[id.a,]\n    orig.id.a <- id[id.a]\n    \n    # Derive IPCW\n    fit <- survfit(Surv(y.a, d0.a) ~ 1)\n    weights.a <- (1-d0.a)/rep(fit$surv, table(y.a))\n    \n    # Need to assign weights accordig to original ID, not ordered by event time\n    linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a)\n    weights <- rbind(weights, linked.weights.a)\n  }\n  \n  \n  ## Fit linear model ## \n  \n  # Link weights to original data frame\n  #colnames(weights) <- c('id', 'weights')\n  #data <- merge(data0, weights, by='id')\n  #summary(lm(tau-y ~ x-1, weights=weights, data=data))\n  \n  # Or, sort weights and use vectors\n  w <- weights[order(weights[, 1]),2]\n  lm.fit <- lm(delta1*(tau-y) ~ x-1, weights=w)\n  \n  \n  ## Derive SE ##\n  \n  beta0 <- lm.fit$coef\n  error <- tau - y - as.vector(x %*% beta0)\n  score <- x * w * error\n  \n  # Kappa (sandwich variance components) stratified by group\n  kappa <- NULL\n  \n  for(aa in 1:length(unique(group))){\n    \n    # Subset the group\n    a <- unique(group)[aa]\n    d0.a <- d0[group==a]\n    delta1.a <- delta1[group==a]\n    y.a <- y[group==a]\n    x.a <- x[group==a,]\n    n.a <- length(d0.a)\n    orig.id.a0 <- orig.id.a <- id[group==a]\n    score.a <- score[group==a,]\n    \n    # Kappa calculations for sandwich variance\n    kappa.a <- matrix(0, n.a, p)\n    \n    for(i in 1:n.a){\n      kappa1 <- score.a[i,]\n    \n      kappa2 <- apply(score.a[y.a>=y.a[i],,drop=F], 2, sum)*(d0.a[i])/sum(y.a>=y.a[i])\n    \n      kappa3 <- rep(0, p)\n    \n      for(k in 1:n.a){\n        if(y.a[k]<=y.a[i]){\n          kappa3 <- kappa3+apply(score.a[y.a>=y.a[k],,drop=F], 2, sum)*(d0.a[k])/(sum(y.a>=y.a[k]))^2\n        }\n      }\n  \n      kappa.a[i,] <- kappa1+kappa2-kappa3\n    }\n    kappa <- rbind(kappa, kappa.a)\n  }\n  \n  # Transpose the kappas rbinded from each group gives pxp matrix\n  gamma <- t(kappa) %*% kappa\n  \n  A <- t(x) %*% x\n  varbeta <- solve(A) %*% gamma %*% solve(A)\n  se <- sqrt(diag(varbeta))\n  \n  \n  #--- Return results ---\n  \n  res <- cbind(beta=lm.fit$coef, se=se, cil=lm.fit$coef-(1.96*se), ciu=lm.fit$coef+(1.96*se), \n               z=lm.fit$coef/se, p=2*(1-pnorm(abs(lm.fit$coef/se))))\n  #rownames(res) <- c(\"Intercept\", colnames(x[,-1])): REMOVED!\n  \n  allres <- list(res=res, varbeta=varbeta)\n  print(round(res, 3))\n  invisible(allres)\nreturn(res[,1]) # ADDED\n}  \n\n\nThe argument times is the time of event or censoring for all subjects. The argument event is the type of transition happening at the time times for all subjects. The arguments eio and tau are the event of interest and the threshold \\(\\tau\\). The argument cov gives the covariates to be included in the model.\nWe will first extract the values of our covariates of interest and store them as covar46.\n\n\nCode show/hide\n# Extracting the values of the covariates ESVEA, sex, age, and sbp\ncovar46 <- cbind(newchs$esvea, newchs$sex, newchs$age, newchs$sbp)\ncolnames(covar46) <- c(\"esvea\", \"sex\", \"age\", \"sbp\")\n\n\nThen, we will fit a linear model for the time lost due to stroke using the function rmtl.ipcw. The arguments times, event, eoi, tau and cov are set to chs_data$timestrokeordeath, fg_event, 1, 3 and **covar46, respectively.\n\n\nCode show/hide\n# Fitting a linear model for the time lost due to stroke before 3 ýears\n\nnewchs$death_wo_stroke <- ifelse(newchs$stroke == 1, 0, newchs$death)\nnewchs$fg_event <- ifelse(newchs$death_wo_stroke == 0, newchs$stroke, newchs$death_wo_stroke*2)\n\n(rmtl_stroke <- rmtl.ipcw(times = newchs$timestrokeordeath,event = newchs$fg_event, eoi = 1, tau = 3, cov = covar46))\n\n\n         beta    se    cil   ciu      z     p\nxint   -0.277 0.211 -0.691 0.137 -1.313 0.189\nxesvea  0.005 0.053 -0.099 0.110  0.095 0.924\nxsex    0.024 0.036 -0.046 0.094  0.666 0.506\nxage    0.004 0.003 -0.001 0.010  1.532 0.126\nxsbp    0.000 0.001 -0.001 0.001 -0.004 0.997\n\n\n         xint        xesvea          xsex          xage          xsbp \n-2.774303e-01  5.072473e-03  2.377510e-02  4.439468e-03 -3.000091e-06 \n\n\nThus, we obtain the following model for the time lost before 3 years due to stroke\n\\[\\varepsilon(3|Z) = -0.277 + 0.005 \\cdot Z_1  + 0.024 \\cdot Z_2  + 0.004 \\cdot Z_3 - 3 \\cdot 10^{-6} \\cdot Z_4,\\]\nwhere \\((Z_1,Z_2,Z_3,Z_4)\\) are ESVEA, sex, age, and systolic blood pressure.\nWe will fit a linear model to the time lost due to death without stroke by changing the value of the eio argument to 2.\n\n\nCode show/hide\n# Fitting a linear model for the time lost due to death without stroke before 3 years\n(rmtl_death <- rmtl.ipcw(newchs$timestrokeordeath,newchs$fg_event, eoi = 2, tau = 3, covar46))\n\n\n         beta    se    cil   ciu      z     p\nxint   -0.078 0.210 -0.489 0.333 -0.371 0.711\nxesvea  0.022 0.053 -0.081 0.126  0.422 0.673\nxsex    0.030 0.036 -0.039 0.100  0.852 0.394\nxage    0.003 0.003 -0.003 0.009  1.001 0.317\nxsbp   -0.001 0.001 -0.002 0.001 -0.752 0.452\n\n\n         xint        xesvea          xsex          xage          xsbp \n-0.0777484888  0.0223008572  0.0302582070  0.0028827687 -0.0005114223 \n\n\nThus, we obtain the following model for the time lost before 3 years due to death without stroke\n\\[\\varepsilon(3|Z) = -0.078 + 0.022 \\cdot Z_1  + 0.03 \\cdot Z_2  + 0.003 \\cdot Z_3 - 0.001 \\cdot Z_4,\\] where \\((Z_1,Z_2,Z_3,Z_4)\\) are ESVEA, sex, age, and systolic blood pressure.\nWe will finally estimate the cause-specific time lost for subjects with or without ESVEA non-parametrically as the area under the Aalen-Johansen estimates. We use the aj object from the previous exercise (where the option influence=TRUE provides SD estimates).\n\n\nCode show/hide\nprint(aj,rmean=3)\n\n\nCall: survfit(formula = Surv(timestrokeordeath, factor(fg_event), type = \"mstate\") ~ \n    esvea, data = chs_data, influence = TRUE)\n\n                n nevent      rmean  se(rmean)*\nesvea=0, (s0) 579      0 2.93362840 0.015098727\nesvea=1, (s0)  99      0 2.86719350 0.048735634\nesvea=0, 1    579     52 0.01954915 0.007978075\nesvea=1, 1     99     21 0.05767462 0.029900214\nesvea=0, 2    579    178 0.04682245 0.012941548\nesvea=1, 2     99     36 0.07513188 0.039606548\n   *restricted mean time in state (max time = 3 )\n\n\n\n\nThere is currently not an implementation of a procedure for linear models of the number of years lost due to a specific cause in SAS.\n\n\n\n\n\nExercise 4.7\nConsider an illness-death model for the Copenhagen Holter study with states ‘0: Alive without AF or stroke’, ‘1: Alive with AF and no stroke’, ‘2: Dead or stroke’, see Figures 1.3 and 1.7.\n\n1.\nEstimate the prevalence of AF.\n\nRSAS\n\n\nThe prevalence of AF at time \\(t\\) can be estimated as the conditional probability of having AF at time \\(t\\) given alive at time \\(t\\), i.e. \\(\\frac{Q_1(t)}{Q_0(t) + Q_1(t)}\\). Here, \\(Q_0\\) and \\(Q_1\\) can be estimated the mstate package. We must first define a transition matrix, tmat for the ilness-death model and turn the data into long format using the msprep function as we did in exercise 1.2. Then, we extract the hazards for each transition using the msfit function. Finally, \\(Q_0\\) and \\(Q_1\\) are estimated with the probtrans function where the prediction time predt is set to 0.\n\n\nCode show/hide\n# Transition matrix for the three-state illness-death model.\ntmat <- trans.illdeath()\n\n# Putting the data on long format, i.e. 1 row per possible transition\nchs_data <- chs_data %>% mutate(timestroke = ifelse(stroke == 1, timestroke, timedeath),\n                                timeafib = ifelse(afib == 1, timeafib, timestroke))\nlong_format <- msprep(time = c(NA, \"timeafib\", \"timestrokeordeath\"), status = c(NA,\"afib\",\"strokeordeath\"), data = chs_data, trans = tmat)\n\n# Fitting a model for each of the three transitions, 0 -> 1, 0 -> 2 and 1 -> 2.\ncox471 <- coxph(Surv(Tstart, Tstop, status) ~ strata(trans), data = long_format, method = \"breslow\")\n\n# Extracting the hazards for each transition\nmsfit <- msfit(cox471, trans = tmat)\n\n# Calculating the state occupation probabilities; pstate1 is $Q_0$, pstate2 is $Q_1$, and pstate3 is $Q_2$.\nprobtrans <- probtrans(msfit, predt = 0)\nAaJ471 <- probtrans[[1]]\n\n# Calculating the prevalence of AF\nAaJ471$prevalence <- AaJ471$pstate2 / (AaJ471$pstate1 + AaJ471$pstate2)\n\n# Plotting the prevalence of AF against time\n(fig471 <- ggplot(aes(x = time, y = prevalence), data = AaJ471) +\n          geom_step())\n\n\n\n\n\n\n\n\n\nCode show/hide\n* The prevalence of AF is given by Q_1 / (Q_0 + Q_1). Thus, we must first obtain estimates of Q_0 and Q_1.\n\n* We will first fill in the empty spots of timeafib and replace paths where AF happens after stroke;\n* We will also add an censoring variable for leaving state 0 called 'outof0'.;\n\ntitle '4.7.1';\ndata chs_data;\n    set chs_data;\n    if afib = 1 and timeafib > timestrokeordeath then afib = 0;\n    if afib = 0 then timeafib = timestrokeordeath;\n    outof0 = 0;\n    if afib = 1 or strokeordeath = 1 then outof0 = 1;\nrun;\n\n\n* Then, we will fit a model for being in state 0 by using 'timeafib' as our time variable and 'outof0' as our censoring variable;\n\nproc phreg data=chs_data; /* Q0(t) */\n    model timeafib*outof0(0)=;\n    baseline out=q0 survival=km0;\nrun;\n\n* We will also fit a model for being in state 0 or state 1 by using 'timestrokeordeath' as our timevariable and 'strokeordeath' \n  as our censoring variable.;\n\nproc phreg data=chs_data; /* Q0(t) + Q1(t) */\n    model timestrokeordeath*strokeordeath(0)=;\n    baseline out=q0andq1 survival = km01;\nrun;\n\n\n* We will now estimate the probability of being in state 1 as the difference between the two models specified above. We must \n  first merge the data frames 'q0' and 'q0andq1' by the joint 'time' variable and fill the empty cells for the survival \n  probabilities with the last observed value. Then, 'q1' and the prevalence 'prev' is added to the dataframe 'allrev'.;\n\ndata q0; set q0; time=timeafib; run;\ndata q0andq1; set q0andq1; time=timestrokeordeath; run;\ndata all; merge q0 q0andq1; by time; run;\n\ndata allrev; \nset all;\n    by time;\n    retain last1 last2;\n    if km0=. then q0=last1; if km0 ne . then q0=km0; *AF-free survival, Q0; \n    if km01=. then q01=last2; if km01 ne . then q01=km01; *Q0 + Q1;\n    q1 = q01 - q0;\n    prev = q1/q01;\n    output;\n    last1=q0; last2=q01; \nrun;\n\n*Finally, we plot the result;\n\nproc gplot data=allrev;\n    title'4.7.1: Prevalence of AF';\n    plot prev*time / haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 5 minor=none label=('Years');\n    axis2 order=0 to 0.12 by 0.02 minor=none label=(a=90 'Prevalence of AF');\n    symbol  v=none i=stepjl c=blue;\nrun;\n\n\n\n\n\n\n\n2.\nEstimate the expected lengths of stay in states 0 or 1 up to 3 years.\n\nRSAS\n\n\nThe expected lengths of stay in states 0 or 1 up till 3 years can be estimated using the ELOS function from the mstate package which take a probtrans object and threshold tau as input.\n\n\nCode show/hide\n# Estimating the expected length of stay in each state from state 0 before 3 years\n(ELOS472 <- ELOS(probtrans, tau = 3))\n\n\n           in1         in2        in3\nfrom1 2.915131 0.008797062 0.07607227\nfrom2 0.000000 3.000000000 0.00000000\nfrom3 0.000000 0.000000000 3.00000000\n\n\nThus, the expected length of stay up till 3 years is \\(2.9151\\) in state 0 and \\(0.0088\\) in state 1.\n\n\n\n\nCode show/hide\n* To estimate the expected length of stay in state 0 and state 1 up till 3 years we will integrate the functions for being in state \n  0 or 1 from 0 t0 3 years. \n\n* We must first add the time point for 3 years to the data set 'allrev'.;\n\ndata end_point; time = 3; run;\ndata allrev; merge allrev end_point; by time; run;\n\n* Then we will calculate the product of the length of each time period and the value of q0 or q1 and then sum these products to \n  obtain estimates of the expected length of state in state 0 or 1.;\n\ndata allrev;\n    set allrev;\n    retain elos0 elos1;\n    dq0 = dif(time)*lag(q0);\n    dq1 = dif(time)*lag(q1);\n    elos0 + dq0;\n    elos1 + dq1;\nrun;\n\n* Finally, we will print the result;\n\ntitle'4.7.2';\nproc print data = allrev;\n    var time elos0 elos1;\n    where time = 3;\nrun;\n\n\n\n\n\n\n\n3.\nEvaluate the SD of the expected lengths of stay using the bootstrap.\n\nRSAS\n\n\nWe will use bootstrapping to estimate the SD of the expected lengths of stay in states 0 and 1. This can be done using the msboot function from the mstate package.\nWe must first create a function which, given a data set data, calculates the statistics of interest, in this case the expected lengths of stay in state 0 and 1. Then, the msboot function takes this function as well as the data in long format, the desired number of bootstrap replications B and the name of the id variable in the data frame as arguments.\n\n\nCode show/hide\n# Setting a seed for reproducibility\nset.seed(1234)\n\n# Function of data returning the value of the statistic to be bootstrapped\nboot_fct473 <- function(data){\n  cox <- coxph(Surv(Tstart, Tstop, status) ~ strata(trans), data = data, method = \"breslow\")\n  msfit <-  msfit(cox, trans = tmat)\n  pt <- probtrans(msfit, predt = 0, direction = \"forward\", method = \"aalen\")\n  elos <- ELOS(pt, 3)\n  return(elos[1,1:2])}\n\n# Bootstrapping with B = 200\nelos_boot473 <- msboot(theta = boot_fct473, data = long_format, B = 200, id = \"id\")\n\n\nFinally, the mean and standard deviation of the statistics based on the bootstrap samples can be calculated\n\n\nCode show/hide\n# Mean and SD obtained using bootstrapping for expected length of stay in state 0 and 1\n(c(mean(elos_boot473[1,]), sqrt(var(elos_boot473[1,]))))\n\n\n[1] 2.91297302 0.01642631\n\n\nCode show/hide\n(c(mean(elos_boot473[2,]), sqrt(var(elos_boot473[2,]))))\n\n\n[1] 0.009175036 0.004859470\n\n\nWe obtain an estimate for the standard deviation of 0.0160782 for the expected length in state 0 and 0.004976452 for the expected length in state 1 using a bootstrap with 200 replications.\n\n\n\n\nCode show/hide\n* We will first make our bootstrap data frames. We will make 200 bootstrap samples and each bootstrap sample contains 678 rows which\n  are sampled with replacement from our originqal data.;\n\ntitle'4.7.3';\ndata boot_chs;\n    do sampnum = 1 to 200; /* nboot=200*/\n    do i = 1 to 678; /*nobs=678*/\n    x=round(ranuni(0)*678); /*nobs=678*/\n    set chs_data\n    point=x;\n    output;\n    end;\n    end;\n    stop;\nrun;\n\n* Then we will estimate the expected length of stay in state 0 before 3 years based on each of the 200 bootstrap samples;\n\n* We will first estimate the probability of being in state 0 and the probability of being in either state 0 or state 1.;\n\nproc phreg data=boot_chs noprint; /* Q0(t) */\n    by sampnum;\n    model timeafib*outof0(0)=;\n    baseline out=q0_boot survival=km0;\nrun;\n\nproc phreg data=boot_chs noprint; /* Q0(t) + Q1(t) */\n    by sampnum;\n    model timestrokeordeath*strokeordeath(0)=;\n    baseline out=q0andq1_boot survival = km01;\nrun;\n\n* Then, we will merge the two datasets by time and add the time point for 3 years to all bootstrap samples.;\n\ndata q0_boot; set q0_boot; time=timeafib; run;\ndata q0andq1_boot; set q0andq1_boot; time=timestrokeordeath; run;\n\ndata end_point; do sampnum = 1 to 200; time = 3; output; end; run;\ndata all_boot; merge q0_boot q0andq1_boot end_point; by sampnum time; run;\n\n\n* Then, we will estimate q1 as the difference between the probability of being in either state 0 or state 1 and the \n  probability of being in state 0.;\n\ndata allrev_boot; \nset all_boot;\n    by sampnum time;\n    retain last1 last2;\n    if km0=. then q0=last1; if km0 ne . then q0=km0; *AF-free survival, Q0; \n    if km01=. then q01=last2; if km01 ne . then q01=km01; *Q0 + Q1;\n    q1 = q01 - q0;\n    output;\n    last1=q0; last2=q01; \nrun;\n\n* The expected length of stay in state 0 or 1 is then estimated as the sum of the products of the length of the time intervals \n  and the value of q0 or q1;\n\ndata allrev_boot;\n    set allrev_boot;\n    if time > 3 then delete;\n    retain elos0 elos1;\n    dq0 = dif(time)*lag(q0);\n    dq1 = dif(time)*lag(q1);\n    if time = 0 then do; elos0 = 0; elos1 = 0; dq0 = .; dq1 = .; end;\n    elos0 + dq0;\n    elos1 + dq1;\nrun;\n\n* We will only keep the result for the value of the expected lengths of stay up at 3 years in the data frame 'elos_est';\n\ndata elos_est;\n    set allrev_boot;\n    keep time elos0 elos1;\n    where time = 3;\nrun;\n\n* Finally, the mean and standard deviation is calculated;\n\nproc means data=elos_est stddev mean;\n    var elos0 elos1;\nrun;\n\n\n\n\n\n\n\n\nExercise 4.8\nConsider the data on mortality in relation to childhood vaccinations in Guinea-Bissau, Example 1.1.2.\n\n1.\nFit a marginal hazard model for the mortality rate, adjusting for cluster ‘(village)’ and including binary variables for BCG and DTP vaccination and adjusting for age at recruitment (i.e., using time since recruitment as time-variable).\n\nRSAS\n\n\nThe data should be loaded as bissau_data\n\n\nCode show/hide\nbissau_data <- read.csv(\"data/bissau.csv\")\nbissau_data$agem<-bissau_data$age/30.4\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\n\n\nWe use the coxph function to fit the marginal hazard model for the mortality rate adjusting for cluster and the variables BCG, DTP and age. We adjust for cluster by adding cluster(cluster) in the formula argument.\n\n\nCode show/hide\n# Fitting a marginal hazard model\nfit481 <- coxph(Surv(fuptime,dead)~ bcg + dtp + agem + cluster(cluster), data=bissau_data)\nsummary(fit481)\n\n\nCall:\ncoxph(formula = Surv(fuptime, dead) ~ bcg + dtp + agem, data = bissau_data, \n    cluster = cluster)\n\n  n= 5274, number of events= 222 \n\n         coef exp(coef) se(coef) robust se      z Pr(>|z|)   \nbcg  -0.40978   0.66380  0.16685   0.15011 -2.730  0.00634 **\ndtp   0.07331   1.07606  0.10366   0.09033  0.812  0.41706   \nagem  0.04006   1.04088  0.04337   0.04236  0.946  0.34422   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n     exp(coef) exp(-coef) lower .95 upper .95\nbcg     0.6638     1.5065    0.4946    0.8909\ndtp     1.0761     0.9293    0.9015    1.2845\nagem    1.0409     0.9607    0.9580    1.1310\n\nConcordance= 0.549  (se = 0.017 )\nLikelihood ratio test= 6.7  on 3 df,   p=0.08\nWald test            = 8.68  on 3 df,   p=0.03\nScore (logrank) test = 6.69  on 3 df,   p=0.08,   Robust = 7.5  p=0.06\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nWe obtain a coefficient of -0.41 for BCG, 0.073 for DTP and 0.04 for age.\n\n\n\n\nCode show/hide\n* We first load the data;\n\nproc import out=bissau_data\n  datafile='data/bissau.csv' \n    dbms=csv replace;\n    getnames=yes;\nrun;\n\n* To make our results comparable to table 2.12 we must first convert the age variable from days to months.;\n\ndata bissau_data;\n    set bissau_data;\n    agem = age/30.4;\nrun;\n\n/* We fit a marginal hazard model for the mortality rate adjusting for cluster and the variables BCG, DTP and age using the 'phreg'  procedure where we include 'covs(aggregate)' in the phreg statement to obtain robust SD estimates and 'cluster' in the id statement */\n\ntitle '4.8.1';\nproc phreg data=bissau_data covs(aggregate);\n    class cluster;\n    model fuptime*dead(0)= bcg dtp agem;\n    id cluster;\nrun;\n\n\n\n\n\n\n\n2.\nCompare the results with those from the gamma frailty model (Exercise 3.12).\nThe estimates of the coefficients are almost identical with the ones obtained with the gamma frailty model. The standard deviations of the marginal hazards model are, however, a little bit smaller than the standard errors from the gamma frailty model.\n\n\n\nExercise 4.9\nConsider the data on recurrent episodes in affective disorder, Example 1.1.5.\n\nRSAS\n\n\nThe data should be loaded as affective_data\n\n\nCode show/hide\naffective_data <- read.csv(\"data/affective.csv\")\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(mets)\n\n\n\n\n\n\nCode show/hide\nproc import out=affective_data\n    datafile='data/affective.csv' \n    dbms=csv replace;\n    getnames=yes;\nrun;\n\n\n\n\n\n\n1.\nEstimate the mean number of episodes, \\(\\mu(t)\\), in \\([0; t]\\) for unipolar and bipolar patients, taking the mortality into account.\n\nRSAS\n\n\nWe will estimate the mean number of episodes, \\(\\mu(t)\\), in \\([0; t]\\) for unipolar and bipolar patients, taking the mortality into account by\n\\[\\hat{\\mu}(t) = \\sum_{x \\leq t} \\hat{S}(x-)\\frac{dN(x)}{Y(x)}\\] We must first make a data set corresponding to the setting with cycles depicted in Figure 1.5, i.e., the interval in hospital is included in the time between events.\n\n\nCode show/hide\n# Creating data corresponding to set up depicted in Figure 1.5\ndata491 <- affective_data %>% group_by(id) %>% \n                mutate(prev1 = lag(start, n = 1, default = 0),  # moves start one line down\n                       prev2 = lag(stop, n = 1, default = 0), # moves stop one line down\n                       prev = ifelse(state == 1, prev2, prev1)) %>% # picks the displaced value of stop if hospitalized, otherwise the displaced value of start.\n                filter(state == 0 | status %in% c(2,3))\n\n\nWe can estimate \\(\\hat{S}(t)\\) with the survfit function from the survival package where we use the data set data491 and death (status = 2) as the event variable.\n\n\nCode show/hide\n#S(t)\nkmfit491 <- survfit(Surv(prev, stop, status == 2) ~ strata(bip) + cluster(id), data = data491)\n  \n#S(t) for unipolar patients\nS0 <- dplyr::lag(kmfit491$surv[1:(kmfit491$strata[1])], default = 1)\n\n#S(t) for bipolar patients\nS1 <- dplyr::lag(kmfit491$surv[(kmfit491$strata[1]+1):(kmfit491$strata[1] + kmfit491$strata[2])], default = 1)\n\n\nWe can also calculate \\(\\frac{dN(x)}{Y(x)}\\) using the survfit function where we have admission to hospital (status = 1) as event variable.\n\n\nCode show/hide\n#A(t)\nnaafit491 <- survfit(Surv(prev, stop, status == 1) ~ strata(bip) + cluster(id), data = data491)\n\n#dA(t) for unipolar patients\ndA0 <- diff(naafit491$cumhaz[1:naafit491$strata[1]])\n\n#dA(t) for bipolar patients\ndA1 <- diff(naafit491$cumhaz[(kmfit491$strata[1]+1):(kmfit491$strata[1] + kmfit491$strata[2])])\n\n\nThen we can calculate the estimate of m(t) for both patient groups and plot the result\n\n\nCode show/hide\n#m(t) for unipolar patients\nmu0 <- cumsum(S0 * c(0, dA0))\n\n#m(t) for bipolar patients\nmu1 <- cumsum(S1 * c(0, dA1))\n\n# Collecting the data\nplotdata491 <- data.frame(time = kmfit491$time/12, \n                       mu = c(mu0, mu1), \n                       disorder = c(rep(\"Unipolar\", length(mu0)), \n                               rep(\"Bipolar\", length(mu1))))\n\n# Plotting the result\nfig491 <- ggplot(data = plotdata491) + geom_step(aes(x = time, y = mu, color = disorder)) + \n  xlab(\"Time since first admission (years)\") + \n  ylab(\"Expected number of episodes\") + \n  theme_bw()\nfig491\n\n\n\n\n\nThe expected number of episodes is larger for bipolar patients at all times compared to unipolar patients.\n\n\n\n\nCode show/hide\n* We can estimate the mean number of episodes in [0,t] for unipolar and bipolar patients, taking the mortality into account \n  by equation (4.13).\n\n* We make a data set correpsonding to the setting with cycles depicted in figure 1.5, i.e. the interval in hospital is \n  included in the time between events.;\n\ntitle '4.9.1';\ndata data491; \n    set affective_data;\n    by id;\n    retain prev;\n    if first.id then prev=0; \n    output; \n    if state=1 then prev=start; if state=0 then prev=stop;\nrun;\n\ndata data491;\n    set data491;\n    if state = 0 or status = 2 or status = 3;\nrun;\n\n* Thus the entry and exit time are now 'prev' and 'stop';\n\n* We can estimate S(X-) using the phreg procedure. Since the event of interest is death (status = 2) we include 'status(0 1 3)' as \n  censoring variables in the model statement. The result is saved as 'kmdata491';\n\nproc phreg data=data491;\n    class bip;\n    model (prev,stop)*status(0 1 3)=;\n    id id;\n    strata bip;\n    baseline out=kmdata491 survival=km;\nrun;\n\n* Likewise, we can estimate dN(X)/Y(X) using the phreg procedure with censoring variables 'status(0 2 3)' in the model statement. The \n  result is saved as 'naadata491';\n\nproc phreg data=data491;\n    class bip;\n    model (prev,stop)*status(0 2 3)=;\n    id id;\n    strata bip;\n    baseline out=naadata491 cumhaz=naa;\nrun;\n\n* We then create a data set for the unipolar patients and one for the bipolar patients containing the estimates of S(X-) and\n  dN(X)/Y(X);\n\ndata naa_uni;\n    set naadata491;\n    if bip = 0;\nrun;\n\ndata km_uni; \n    set kmdata491;\n    if bip = 0;\nrun;\n\ndata uni;\n    merge naa_uni km_uni;\n    by stop;\nrun;\n\ndata naa_bip;\n    set naadata491;\n    if bip = 1;\nrun;\n\ndata km_bip;\n    set kmdata491;\n    if bip = 1;\nrun;\n\ndata bip;\n    merge naa_bip km_bip;\n    by stop;\nrun;\n\n* We then fill the empty cells in the data set with the previous value of S(X-) and dN(X)/Y(X);\n\n\ndata uni;\n    set uni;\n    retain _km _naa;\n    if km ne . then _km = km;\n    if naa ne . then _naa = naa;\n    years = stop/12;\nrun;\n\ndata bip;\n    set bip;\n    retain _km _naa;\n    if km ne . then _km = km;\n    if naa ne . then _naa = naa;\n    years = stop/12;\nrun;\n\n* Finally, we estimate m(t) for unipolar and bipolar patients respectively;\n\ndata uni; \n    set uni;\n    dA = dif(_naa); \n    if years = 0 then dA = 0;\n    dmu = _km*dA;\n    retain mu;\n    mu + dmu;\n    bip = 0;\n    keep years _naa mu bip;\nrun;\n\n\ndata bip; \n    set bip;\n    dA = dif(_naa); \n    if years = 0 then dA = 0;\n    dmu = _km*dA;\n    retain mu;\n    mu + dmu;\n    bip = 1;\n    keep years _naa mu bip;\nrun;\n\n* We merge the data sets for unipolar and bipolar patients and plot the data using the gplot procedure;\n\ndata plotdata491;\n    set uni bip;\nrun;\n\ntitle '4.9.1';\nproc gplot data=plotdata491;\n    plot mu*years=bip/ haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 30 by 5 minor=none label=('Years');\n    axis2 order=0 to 10 by 2 minor=none label=(a=90 'Expected number of episodes');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\nquit;\n  \n* The expected number of episodes is larger for bipolar patients at all times compared to unipolar patients.;\n\n* Less transparently, but in a way a lot easier, we can 'cheat' proc phreg to do the computations by\n  fitting an empty Fine-Gray model and transform the cumulative sub-distribution hazard!;\n\nproc phreg data=data491;\n    model stop*status(0 3)=/entry=prev eventcode=1;\n    strata bip;\n    baseline out=mcfdata1 cif=naa1;\nrun;\n\ndata mcfdata1; set mcfdata1;\n    cmf=-log(1-naa1);\n    years=stop/12;\nrun;\n\nproc gplot data=mcfdata1;\nplot cmf*years=bip/haxis=axis1 vaxis=axis2;\naxis1 order=0 to 30 by 5 minor=none label=('Years');\naxis2 order=0 to 8 by 0.5 minor=none label=(a=90 'Expected number of episodes');\nsymbol1  v=none i=stepjl c=red;\nsymbol2  v=none i=stepjl c=blue;\nrun;\nquit;\n\n\n\n\n\n\n\n2.\nEstimate, incorrectly, the same mean curves by treating death as censoring and compare with the correct curves from the first question, thereby, re-constructing the cover figure from this book (unipolar patients).\n\nRSAS\n\n\nWe will estimate the mean number of episodes in \\([0,t]\\) for unipolar and bipolar patients neglecting mortality with the Nelson-Aalen estimator\n\\[\\hat{m}(t) = \\sum_{x \\leq t} \\frac{dN(x)}{Y(x)},\\] where \\(x\\) is event time.\nThis is exactly the Nelson-Aalen estimate obtained in naafit491 in the previous exercise. We will save this data as plotdata492\n\n\nCode show/hide\n# Collecting the data for plotting\nplotdata492 <- data.frame(time = naafit491$time/12, \n                       mu = naafit491$cumhaz, \n                       disorder = c(rep(\"Unipolar\", naafit491$strata[[1]]), \n                               rep(\"Bipolar\", naafit491$strata[[2]])))\n\n\nWe will now plot the curves for the two estimates of the mean number of episodes for unipolar patients\n\n\nCode show/hide\n# Plotting the estimate of the expected number of episodes for patients with unipolar disorder\nfig492_uni <- ggplot()  + geom_step(data = subset(plotdata492, disorder == \"Unipolar\"), aes(x = time, y = mu, color = \"Not accounting for mortality\")) + geom_step(data = subset(plotdata491, disorder == \"Unipolar\"), aes(x = time, y = mu, color = \"Accounting for mortality\")) +  ylab(\"Expected number of episodes\") +\n  xlab(\"Time since first admission (years)\") +\n  theme(legend.title=element_blank()) + ggtitle(\"Unipolar disorder\")\nfig492_uni\n\n\n\n\n\nWe repeat for the bipolar patients\n\n\nCode show/hide\nfig492_bip <- ggplot() + geom_step(data = subset(plotdata491, disorder == \"Bipolar\"), aes(x = time, y = mu, color = \"Accounting for mortality\")) + geom_step(data = subset(plotdata492, disorder == \"Bipolar\"), aes(x = time, y = mu, color = \"Not accounting for mortality\")) +   ylab(\"Expected number of episodes\") +\n  xlab(\"Time since first admission (years)\") +\n  theme(legend.title=element_blank()) + ggtitle(\"Bipolar disorder\")\nfig492_bip\n\n\n\n\n\nFor both unipolar and bipolar patients we get larger estimates of the mean number of episodes when we do not account for mortality.\n\n\n\n\nCode show/hide\n* We can estimate the expected number of episodes neglecting mortality by equation (4.11). This is \n  in fact the Nelson-Aalen estimate we saved in the data set 'naadata491';\n\n* We use the gplot procedure to plot the two estimates of the expected number of episodes;\n\nlegend1 label = ('Accounting for mortality') value = ('Yes' 'No');\n\ntitle '4.9.2 - unipolar';\nproc gplot data=uni;\n    plot mu*years _naa*years/ overlay haxis=axis1 vaxis=axis2 legend =legend1;\n    axis1 order=0 to 30 by 5 minor=none label=('Years');\n    axis2 order=0 to 6 by 2 minor=none label=(a=90 'Expected number of episodes');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\nquit;\n\ntitle '4.9.2 - bipolar';\nproc gplot data=bip;\n    plot mu*years _naa*years/ overlay haxis=axis1 vaxis=axis2 legend =legend1;\n    axis1 order=0 to 30 by 5 minor=none label=('Years');\n    axis2 order=0 to 10 by 2 minor=none label=(a=90 'Expected number of episodes');\n    symbol1  v=none i=stepjl c=red;\n    symbol2  v=none i=stepjl c=blue;\nrun;\nquit;\n\n* For both unipolar and bipolar patients we get larger estimates of the mean number of episodes when we do not account for mortality.;\n\n\n\n\n\n\n\n\nExercise 4.10\nConsider the data from the Copenhagen Holter study.\n\n1.\nEstimate the distribution, \\(G(t)\\) of censoring.\n\nRSAS\n\n\nWe will estimate the censoring distribution \\(G(t)\\) with the Kaplan-Meier estimator where censoring is the event and death acts as censoring.\n\n\nCode show/hide\nkm4101 <- survfit(Surv(timedeath, 1 - death) ~ 1, data = chs_data)\n\n\n# Plotting the Kaplan-Meier estimate\n(fig41 <- ggplot() + geom_step(aes(x = km4101$time, y = km4101$surv), size = 1)  + \n          ylim(c(0,1)) +\n          xlab(\"Time (years)\") + \n          ylab(\"Probability of censoring\")) \n\n\n\n\n\n\n\n\n\nCode show/hide\n*We will estimate the censoring distribution G(t) with the Kaplan-Meier estimator where 'censoring' is the event and 'death' acts \n as censoring.;\n\n\ntitle \"4.10.1\";\nproc phreg data=chs_data;\n    model timedeath*death(1)=;\n    baseline out=survdat survival=km;\nrun;\n\n* Then the estimates are plotted using the gplot procedure;\n\nproc gplot data=survdat;\nplot km*timedeath/haxis=axis1 vaxis=axis2;\n    axis1 order=0 to 16 by 2 label=('Years');\n    axis2 order=0 to 1 by 0.1 label=(a=90 'Censoring probability');\nrun;\nquit;\n\n\n\n\n\n\n\n2.\nExamine to what extent this distribution depends on the variables ESVEA, sex, age, and systolic blood pressure.\n\nRSAS\n\n\nTo examine to what extent the censoring distribution depends on the variables ESVEA, sex, age, and systolic blood pressure, we will fit a Cox model including these covariates and where censoring is the event and death acts as censoring.\n\n\nCode show/hide\ncox4102 <- coxph(Surv(timedeath, 1- death) ~ esvea + sex + age + sbp, data = chs_data, ties = \"breslow\")\nsummary(cox4102)\n\n\nCall:\ncoxph(formula = Surv(timedeath, 1 - death) ~ esvea + sex + age + \n    sbp, data = chs_data, ties = \"breslow\")\n\n  n= 675, number of events= 416 \n   (3 observations deleted due to missingness)\n\n           coef exp(coef)  se(coef)      z Pr(>|z|)   \nesvea  0.439265  1.551567  0.164580  2.669  0.00761 **\nsex   -0.285701  0.751487  0.120830 -2.364  0.01805 * \nage   -0.019642  0.980550  0.009230 -2.128  0.03334 * \nsbp   -0.001516  0.998485  0.002169 -0.699  0.48466   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n      exp(coef) exp(-coef) lower .95 upper .95\nesvea    1.5516     0.6445    1.1238    2.1422\nsex      0.7515     1.3307    0.5930    0.9523\nage      0.9806     1.0198    0.9630    0.9985\nsbp      0.9985     1.0015    0.9942    1.0027\n\nConcordance= 0.562  (se = 0.017 )\nLikelihood ratio test= 11.54  on 4 df,   p=0.02\nWald test            = 11.75  on 4 df,   p=0.02\nScore (logrank) test = 11.8  on 4 df,   p=0.02\n\n\nThe \\(p\\)-values indicate that censoring depends on ESVEA, sex, and age but not on systolic blood pressure.\n\n\n\n\nCode show/hide\n*To examine to what extent the censoring distribution depends on the variables ESVEA, sex, age, and systolic blood pressure we will\n fit a Cox model including these covariates and where 'censoring' is the event and 'death' acts as censoring.;\n\ntitle \"4.10.2\";\nproc phreg data=chs_data;\n    model timedeath*death(1)=esvea sex age sbp;\nrun;\n\n*The p-values indicate that censoring depends strongly on ESVEA, sex, and age but not on systolic blood pressure.;"
  },
  {
    "objectID": "Ch5.html#pbc3-trial-in-liver-cirrhosis",
    "href": "Ch5.html#pbc3-trial-in-liver-cirrhosis",
    "title": "5  Marginal models",
    "section": "PBC3 trial in liver cirrhosis",
    "text": "PBC3 trial in liver cirrhosis\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\npbc3 <- read.csv(\"data/pbc3.csv\")\npbc3$log2bili <- with(pbc3, log2(bili))\n\n\n\n\n\n\nCode show/hide\nproc import out=pbc3\n    datafile=\"data/pbc3.csv\"\n    dbms=csv replace;\nrun;\ndata pbc3; \n    set pbc3;\n    log2bili=log2(bili);\nrun;\n\n\n\n\n\n\n\nTable 5.6\n\nRSAS-NA\n\n\n\n\nCode show/hide\nlibrary(mets)\npbcny <- subset(pbc3, !is.na(alb))\n# COLUMN 1: t0 = 2\ndirbin2tment <- binreg(Event(days, status) ~ tment,\n                       data = pbc3, cause = 2, time = 2 * 365.25, cens.code = 0)\nsummary(dirbin2tment)\n\n\n\n   n events\n 349     33\n\n 349 clusters\ncoeffients:\n             Estimate   Std.Err      2.5%     97.5% P-value\n(Intercept) -2.209708  0.264482 -2.728083 -1.691333   0.000\ntment        0.093432  0.370632 -0.632994  0.819858   0.801\n\nexp(coeffients):\n            Estimate     2.5%  97.5%\n(Intercept) 0.109733 0.065344 0.1843\ntment       1.097936 0.530999 2.2702\n\n\nCode show/hide\ndirbin2 <- binreg(Event(days, status) ~ tment + I(alb - 40) + I(log2(bili) - 4.6), \n                  data = pbcny, cause = 2, time = 2 * 365.25, cens.code = 0)\nsummary(dirbin2)\n\n\n\n   n events\n 343     33\n\n 343 clusters\ncoeffients:\n                     Estimate   Std.Err      2.5%     97.5% P-value\n(Intercept)         -2.931782  0.353853 -3.625322 -2.238242  0.0000\ntment               -0.462652  0.438797 -1.322677  0.397374  0.2917\nI(alb - 40)         -0.147338  0.036961 -0.219780 -0.074897  0.0001\nI(log2(bili) - 4.6)  0.639318  0.151149  0.343071  0.935564  0.0000\n\nexp(coeffients):\n                    Estimate     2.5%  97.5%\n(Intercept)         0.053302 0.026641 0.1066\ntment               0.629612 0.266421 1.4879\nI(alb - 40)         0.863002 0.802695 0.9278\nI(log2(bili) - 4.6) 1.895187 1.409269 2.5487\n\n\nCode show/hide\nlibrary(timereg)\n# COLUMN 2: t1,t2,t3 = 1,2,3\ntimereg3 <- comp.risk(\n  Event(days, status) ~ const(tment),\n  data = pbc3, cause = 2, times = c(1,2,3) * 365.25,\n  model = \"logistic\", resample.iid = 1, n.sim = 100, monotone = 1)\n\nsummary(timereg3)$coef\n\n\nCompeting risks Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          8.96                   0\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                         0.505                           0\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                          94.3                           0\n\nParametric terms : \n               Coef.    SE Robust SE       z P-val lower2.5% upper97.5%\nconst(tment) -0.0304 0.323     0.323 -0.0941 0.925    -0.663      0.603\n   \n\n\nNULL\n\n\nCode show/hide\ntimereg3 <- comp.risk(\n  Event(days, status) ~ const(tment) + const(I(alb - 40)) +  const(I(log2(bili) - 4.6)),\n  data = pbcny, cause = 2, times = c(1,2,3) * 365.25,\n  model = \"logistic\", resample.iid = 1, n.sim = 100, monotone = 1)\n\nsummary(timereg3)$coef\n\n\nCompeting risks Model \n\nTest for nonparametric terms \n\nTest for non-significant effects \n            Supremum-test of significance p-value H_0: B(t)=0\n(Intercept)                          9.49                   0\n\nTest for time invariant effects \n                  Kolmogorov-Smirnov test p-value H_0:constant effect\n(Intercept)                         0.651                           0\n                    Cramer von Mises test p-value H_0:constant effect\n(Intercept)                           156                           0\n\nParametric terms : \n                            Coef.     SE Robust SE     z    P-val lower2.5%\nconst(tment)               -0.520 0.3730    0.3730 -1.39 1.63e-01    -1.250\nconst(I(alb - 40))         -0.125 0.0349    0.0349 -3.58 3.45e-04    -0.193\nconst(I(log2(bili) - 4.6))  0.579 0.1280    0.1280  4.54 5.74e-06     0.328\n                           upper97.5%\nconst(tment)                   0.2110\nconst(I(alb - 40))            -0.0566\nconst(I(log2(bili) - 4.6))     0.8300\n   \n\n\nNULL\n\n\n\n\n\n\n\n\n\n\nFigure 5.12\n\n\nCode show/hide\nlibrary(timereg)\nlibrary(ggplot2) \ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Make Cox model fit\npbc3$followup <- pbc3$days / 365.25\nfit <- cox.aalen(Surv(followup, status != 0) ~ prop(tment) + prop(alb) + prop(bili),\n                 data = pbc3, n.sim = 0,\n                 residuals = 1)\n\n# Cumulative martingale residuals\nset.seed(061166)\ncum_res <- cum.residuals(fit, pbc3, cum.resid=1, max.point.func = 50, n.sim = 1000)\n\ncumresdata_alb <- data.frame(\n  alb = unname(cum_res$proc.cumz[[1]][,1]),\n  cum_mg_res = unname(cum_res$proc.cumz[[1]][,2])\n  )\n\ncumresdata_albsim <- data.frame(\n  alb = rep(unname(cum_res$proc.cumz[[1]][,1]),times = 50),\n  cum_mg_res = c(cum_res$sim.test.proccumz[[1]]),\n  sim = rep(1:50,each = length(unname(cum_res$proc.cumz[[1]][,1])))\n  )\n\nfig5.12 <- ggplot(aes(x = alb, y = cum_mg_res), data = cumresdata_alb) +\n  geom_step(aes(x = alb, y = cum_mg_res, group = sim), \n            color = \"grey\", size = 0.8, data = cumresdata_albsim) +\n  geom_step(size = 1) +\n  xlab(\"Albumin\") +\n  ylab(\"Cumulative martingale residuals\") +\n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig5.12\n\n\n\n\n\nCode show/hide\n# p-value\ncum_res$pval.test[1]\n\n\nprop(alb) \n    0.459 \n\n\n\n\nFigure 5.13\n\n\nCode show/hide\n# Figure bili\ncumresdata_bili <- data.frame(\n  bili = unname(cum_res$proc.cumz[[2]][,1]),\n  cum_mg_res = unname(cum_res$proc.cumz[[2]][,2])\n  )\n\ncumresdata_bilisim <- data.frame(\n  bili= rep(unname(cum_res$proc.cumz[[2]][,1]), times = 50),\n  cum_mg_res = c(cum_res$sim.test.proccumz[[2]]),\n  sim = rep(1:50,each = length(unname(cum_res$proc.cumz[[2]][,1])))\n  )\n\nfig5.13 <- ggplot(aes(x = bili, y = cum_mg_res), data = cumresdata_bili) +\n  geom_step(aes(x = bili, y = cum_mg_res, group = sim),\n            color = \"grey\", size = 0.8, data = cumresdata_bilisim) +\n  geom_step(size = 1) +\n  xlab(\"Bilirubin\") +\n  ylab(\"Cumulative martingale residuals\") + \n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig5.13\n\n\n\n\n\nCode show/hide\n# p-value\ncum_res$pval.test[2]\n\n\nprop(bili) \n         0 \n\n\n\n\nFigure 5.14\n\n\nCode show/hide\n# Make Cox model fit with log2bili\nfit2 <- cox.aalen(\n  Surv(followup, status != 0) ~ prop(tment) + prop(alb) + prop(log2bili),\n  data = pbc3, n.sim = 0, residuals = 1)\n\n# Cumulative martingale residuals\nset.seed(061166)\ncum_res <- cum.residuals(fit2, pbc3, cum.resid=1, max.point.func = 50, n.sim = 1000)\ncumresdata_log2bili <- data.frame(\n  log2bili = unname(cum_res$proc.cumz[[2]][,1]),\n  cum_mg_res = unname(cum_res$proc.cumz[[2]][,2])\n  )\n\ncumresdata_log2bilisim <- data.frame(\n  log2bili = rep(unname(cum_res$proc.cumz[[2]][,1]),times = 50),\n  cum_mg_res = c(cum_res$sim.test.proccumz[[2]]),\n  sim = rep(1:50, each = length(unname(cum_res$proc.cumz[[2]][,1])))\n  )\n\nfig5.14 <- ggplot(aes(x = log2bili, y = cum_mg_res), \n                  data = cumresdata_log2bili) +\n  geom_step(aes(x = log2bili, y = cum_mg_res, group = sim), \n            color = \"grey\", size = 0.8, data = cumresdata_log2bilisim) +\n  geom_step(size = 1) +\n  xlab(expression(\"log\" [2] * \"(bilirubin)\"))+\n  ylab(\"Cumulative martingale residuals\") +\n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig5.14\n\n\n\n\n\nCode show/hide\ncum_res$pval.test[2]\n\n\nprop(log2bili) \n         0.481 \n\n\n\n\nFigure 5.15\n\n\nCode show/hide\n# Compute Schoenfeld residuals (standardized)\nset.seed(130966)\nfit3 <- cox.aalen(\n  Surv(followup, status != 0) ~ prop(tment) + prop(alb) + prop(log2bili),\n  data = pbc3, n.sim = 1000, residuals = 1, weighted.test = 1)\nsummary(fit3)\n\n\nCox-Aalen Model \n\nTest for Aalen terms \nTest not computed, sim=0 \n\nProportional Cox terms :  \n                 Coef.     SE Robust SE D2log(L)^-1     z    P-val lower2.5%\nprop(tment)    -0.5750 0.2250    0.2240      0.2240 -2.57 1.02e-02    -1.020\nprop(alb)      -0.0909 0.0208    0.0211      0.0216 -4.31 1.62e-05    -0.132\nprop(log2bili)  0.6650 0.0728    0.0696      0.0744  9.56 0.00e+00     0.522\n               upper97.5%\nprop(tment)       -0.1340\nprop(alb)         -0.0501\nprop(log2bili)     0.8080\nTest of Proportionality \n               sup|  hat U(t) | p-value H_0 \nprop(tment)                1.33        0.919\nprop(alb)                  2.04        0.418\nprop(log2bili)             1.89        0.568\n\n\nCode show/hide\npar(mfrow = c(1,1))\nplot(fit3, score = T)\n\n\n\n\n\n\n\n\n\n\n\nCode show/hide\ntime <- fit3$residuals$time\nsim <- fit3$sim.test.procProp\nobs <- fit3$test.procProp\n\ndata_tment_obs <- data.frame(time = time,res = obs[,2])\n\ndata_tment_sim <- data.frame(res = do.call(\"rbind\", sim)[,1],\n                             time = rep(time, times = 50), \n                             sim = rep(1:50, each = length(time)))\n\nfig5.15 <- ggplot(aes(x = time, y = res), data = data_tment_obs) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = data_tment_sim) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time since randomization (years)\"))+\n  ylab(\"Standardized score process\") +\n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig5.15\n\n\n\n\n\nCode show/hide\nfit3$pval.Prop[1]\n\n\nprop(tment) \n      0.919 \n\n\n\n\nFigure 5.16\n\n\nCode show/hide\n# Same but for albumin\ndata_alb_obs <- data.frame(time = time, \n                           res = obs[,3])\n\ndata_alb_sim <- data.frame(res = do.call(\"rbind\", sim)[,2],\n                           time = rep(time, times = 50), \n                           sim = rep(1:50, each = length(time)))\n\nfig5.16 <- ggplot(aes(x = time, y = res), data = data_alb_obs) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = data_alb_sim) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time since randomization (years)\"))+\n  ylab(\"Standardized score process\") +\n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig5.16\n\n\n\n\n\nCode show/hide\nfit3$pval.Prop[2]\n\n\nprop(alb) \n    0.418 \n\n\n\n\nFigure 5.17\n\n\nCode show/hide\n# Same but for log2bili\ndata_log2bili_obs <- data.frame(time = time, \n                                res = obs[,4])\n\ndata_log2bili_sim <- data.frame(res = do.call(\"rbind\", sim)[,3],\n                                time = rep(time, times = 50), \n                                sim = rep(1:50, each = length(time)))\n\nfig5.17 <- ggplot(aes(x = time, y = res), data = data_log2bili_obs) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = data_log2bili_sim) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time since randomization (years)\"))+\n  ylab(\"Standardized score process\") +\n  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +\n  theme_general\n\nfig5.17\n\n\n\n\n\nCode show/hide\nfit3$pval.Prop[3]\n\n\nprop(log2bili) \n         0.568"
  },
  {
    "objectID": "Ch5.html#prova-trial-in-liver-cirrhosis",
    "href": "Ch5.html#prova-trial-in-liver-cirrhosis",
    "title": "5  Marginal models",
    "section": "PROVA trial in liver cirrhosis",
    "text": "PROVA trial in liver cirrhosis\nTODO: take some runtime"
  },
  {
    "objectID": "Ch5.html#bone-marrow-transplantation-in-acute-leukemia",
    "href": "Ch5.html#bone-marrow-transplantation-in-acute-leukemia",
    "title": "5  Marginal models",
    "section": "Bone marrow transplantation in acute leukemia",
    "text": "Bone marrow transplantation in acute leukemia\n\nRead data\n\n\nCode show/hide\nbmt <- read.csv(\"data/bmt.csv\")\nbmt$intxsurv<- bmt$timedeath\nbmt$dead <- bmt$death\nbmt$intxrel <- ifelse(bmt$rel == 1, bmt$timerel, bmt$timedeath)\nbmt$trm     <- ifelse(bmt$rel == 0 & bmt$death == 1, 1, 0)\nbmt$tgvhd   <- ifelse(bmt$gvhd == 1, bmt$timegvhd, bmt$intxrel)\nbmt$tanc500 <- ifelse(bmt$anc500 == 1, bmt$timeanc500, bmt$intxrel)\nbmt$state0  <- bmt$rel + 2*bmt$trm\nbmt$dytxanc5 <- bmt$timeanc500 * 30\n\n\n\n\nTable 5.1\n\n\nCode show/hide\n# Make landmark data at 0.5, 1, 1.5, 2, 2.5\nrequire(dplyr)\ndat05 <- bmt\ndat05 <- subset(bmt, intxrel >= 0.5) %>%\n  mutate(time = pmin(intxrel, 6.5),\n         status = ifelse(time < 6.5, state0, 0),\n         landmark = 0.5,\n         entry = 0.5,\n         anc = ifelse(anc500 == 1 & timeanc500 <= 0.5, 1, 0),\n         gvh = ifelse(gvhd == 1 & tgvhd <= 0.5, 1, 0))\n# dat05\n\ndat10 <- bmt\ndat10 <- subset(bmt, intxrel >= 1.0) %>%\n  mutate(time = pmin(intxrel, 7),\n         status = ifelse(time < 7, state0, 0),\n         landmark = 1.0,\n         entry = 1.0,\n         anc = ifelse(anc500 == 1 & timeanc500 <= 1, 1, 0),\n         gvh = ifelse(gvhd == 1 & tgvhd <= 1, 1, 0))\n\ndat15 <- bmt\ndat15 <- subset(bmt, intxrel >= 1.5) %>%\n  mutate(time = pmin(intxrel, 7.5),\n         status = ifelse(time < 7.5, state0, 0),\n         landmark = 1.5,\n         entry = 1.5,\n         anc = ifelse(anc500 == 1 & timeanc500 <= 1.5, 1, 0),\n         gvh = ifelse(gvhd == 1 & tgvhd <= 1.5, 1, 0))\n\ndat20 <- bmt\ndat20 <- subset(bmt, intxrel >= 2.0) %>%\n  mutate(time = pmin(intxrel, 8),\n         status = ifelse(time < 8, state0, 0),\n         landmark = 2,\n         entry = 2,\n         anc = ifelse(anc500 == 1 & timeanc500 <= 2, 1, 0),\n         gvh = ifelse(gvhd == 1 & tgvhd <= 2, 1, 0))\n\ndat25 <- bmt\ndat25 <- subset(bmt, intxrel >= 2.5) %>%\n  mutate(time = pmin(intxrel, 8.5),\n         status = ifelse(time < 8.5, state0, 0),\n         landmark = 2.5,\n         entry = 2.5,\n         anc = ifelse(anc500 == 1 & timeanc500 <= 2.5, 1, 0),\n         gvh = ifelse(gvhd == 1 & tgvhd <= 2.5, 1, 0))\n\n\nlandmark <- rbind(dat05, dat10, dat15, dat20, dat25)\n\n# Table 5.1 output\nrowSums(with(landmark, table(landmark, anc > 0 | gvh > 0))) # at risk\n\n\n 0.5    1  1.5    2  2.5 \n1988 1949 1905 1876 1829 \n\n\nCode show/hide\nwith(landmark, table(landmark, anc)) # anc\n\n\n        anc\nlandmark    0    1\n     0.5 1082  906\n     1     37 1912\n     1.5    6 1899\n     2      2 1874\n     2.5    1 1828\n\n\nCode show/hide\nwith(landmark, table(landmark, gvh)) # gvhd\n\n\n        gvh\nlandmark    0    1\n     0.5 1808  180\n     1   1558  391\n     1.5 1424  481\n     2   1377  499\n     2.5 1334  495\n\n\nCode show/hide\n# Drop observations with stoptime = starttime\nlandmark <- subset(landmark, time > entry)\n\n\n\n\nTable 5.2\n\n\nCode show/hide\n# Add time-varying covariates from previous object\nlandmarkw <- landmark %>%\n  mutate(anc05 = (landmark == 0.5) * anc,\n         gvh05 = (landmark == 0.5) * gvh,\n         anc10 = (landmark == 1.0) * anc,\n         gvh10 = (landmark == 1.0) * gvh,\n         anc15 = (landmark == 1.5) * anc,\n         gvh15 = (landmark == 1.5) * gvh,\n         anc20 = (landmark == 2.0) * anc,\n         gvh20 = (landmark == 2.0) * gvh,\n         anc25 = (landmark == 2.5) * anc,\n         gvh25 = (landmark == 2.5) * gvh\n         )\n\n# with(landmarkw, table(landmark, status))\n\n\nlibrary(survival)\ncox_land <- coxph(Surv(entry, time, status != 0) ~ cluster(id) + strata(landmark) +\n                    anc05 + anc10 + anc15 + anc20 + anc25 +\n                    gvh05 + gvh10 + gvh15 + gvh20 + gvh25 ,\n                  data = landmarkw, method = \"breslow\",  eps = 1e-9)\ncox_land\n\n\nCall:\ncoxph(formula = Surv(entry, time, status != 0) ~ strata(landmark) + \n    anc05 + anc10 + anc15 + anc20 + anc25 + gvh05 + gvh10 + gvh15 + \n    gvh20 + gvh25, data = landmarkw, method = \"breslow\", eps = 1e-09, \n    cluster = id)\n\n          coef exp(coef) se(coef) robust se       z        p\nanc05 -0.33460   0.71563  0.10680   0.10680  -3.133  0.00173\nanc10 -0.60851   0.54416  0.30635   0.31981  -1.903  0.05708\nanc15 -1.68452   0.18553  0.50439   0.61065  -2.759  0.00581\nanc20 -2.96384   0.05162  0.71909   0.40406  -7.335 2.21e-13\nanc25 -3.35202   0.03501  1.01558   0.17840 -18.789  < 2e-16\ngvh05  0.70277   2.01934  0.14751   0.14894   4.718 2.38e-06\ngvh10  0.67945   1.97280  0.11489   0.11523   5.897 3.71e-09\ngvh15  0.86339   2.37119  0.11246   0.11254   7.672 1.69e-14\ngvh20  0.80243   2.23095  0.11514   0.11511   6.971 3.15e-12\ngvh25  0.83065   2.29481  0.12151   0.12129   6.848 7.47e-12\n\nLikelihood ratio test=230.2  on 10 df, p=< 2.2e-16\nn= 9542, number of events= 1643 \n\n\n\n\nFigure 5.1\n\n\nCode show/hide\n# General theme\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\",\n        text = element_text(size = 26),\n        axis.text.x = element_text(size = 26),\n        axis.text.y = element_text(size = 26),\n        legend.text = element_text(size = 26))\n\n# Extract estimated survival probabilities\nsurv <- survfit(cox_land,\n                newdata = data.frame(anc05 = 0, anc10 = 0, anc15 = 0, anc20 = 0, anc25 = 0,\n                                     gvh05 = 0, gvh10 = 0, gvh15 = 0, gvh20 = 0, gvh25 = 0))\n\n# Order data for plotting\npdata <- data.frame(surv = surv$surv,\n                    time = surv$time,\n                    landmark = c(rep(\"0.5\", surv$strata[[1]]),\n                                 rep(\"1.0\", surv$strata[[2]]),\n                                 rep(\"1.5\", surv$strata[[3]]),\n                                 rep(\"2.0\", surv$strata[[4]]),\n                                 rep(\"2.5\", surv$strata[[5]]))\n)\n\n# Add prob 1 in beginning for all\npdata2 <- as.data.frame(pdata %>% group_by(landmark) %>%\n  group_modify(~ add_row(.x, surv = 1, time = 0, .before=0)))\n\n\n# Create Figure (a)\nfig5.1a <- ggplot(aes(x = time, y = surv, linetype = landmark), data = pdata2) +\n  geom_step(size = 1) +\n  scale_linetype_discrete(\"Landmark\") +\n  xlab(\"Time since bone marrow transplantation (months)\") +\n  ylab(\"Conditional survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 9),\n                     breaks = seq(0, 9, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  theme(legend.key.size = unit(1.5, 'cm')) +\n  guides(linetype = guide_legend(nrow = 1, byrow = TRUE))\n\nfig5.1a\n\n\n\n\n\nCode show/hide\n# For anc = gvh = 1\n# Add LP to data\npdata2$lp <- with(pdata2,\n                  ifelse(landmark == '0.5', coef(cox_land)[1] + coef(cox_land)[6],\n                    ifelse(landmark == '1.0', coef(cox_land)[2] + coef(cox_land)[7],\n                      ifelse(landmark == '1.5', coef(cox_land)[3] + coef(cox_land)[8],\n                        ifelse(landmark == '2.0', coef(cox_land)[4] + coef(cox_land)[9],\n                          ifelse(landmark == '2.5', coef(cox_land)[5] + coef(cox_land)[10],\n                    0))))))\n\npdata2_wc <- pdata2\npdata2_wc$survlp <- with(pdata2, surv ^ exp(lp))\n\n\n# Create Figure 5.1 (b)\nfig5.1b <- ggplot(aes(x = time, y = survlp, linetype = landmark), data = pdata2_wc) +\n  geom_step(size = 1) +\n  scale_linetype_discrete(\"Landmark\") +\n  xlab(\"Time since bone marrow transplantation (months)\") +\n  ylab(\"Conditional survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 9),\n                     breaks = seq(0, 9, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  theme(legend.key.size = unit(1.5, 'cm')) +\n  guides(linetype = guide_legend(nrow = 1, byrow = TRUE))\n\nfig5.1b\n\n\n\n\n\n\n\nTable 5.3\n\n\nCode show/hide\n## COLUMN 1 \n# Add extra variables\nlandmarkw2 <- landmark %>%\n  mutate(anctime  = anc * (landmark - 0.5)/2,\n         anctime2 = anc * ((landmark - 0.5)/2)^2,\n         gvhtime  = gvh * (landmark - 0.5)/2,\n         gvhtime2 = gvh * ((landmark - 0.5)/2)^2\n        )\n\n# Fit model\ncox_land2 <- coxph(Surv(entry, time, status != 0) ~ cluster(id) + strata(landmark) +\n                    anc + anctime + anctime2 +\n                    gvh + gvhtime + gvhtime2,\n                  data = landmarkw2,\n                  method = \"breslow\", timefix = FALSE, eps = 1e-9)\nsummary(cox_land2)\n\n\nCall:\ncoxph(formula = Surv(entry, time, status != 0) ~ strata(landmark) + \n    anc + anctime + anctime2 + gvh + gvhtime + gvhtime2, data = landmarkw2, \n    method = \"breslow\", timefix = FALSE, eps = 1e-09, cluster = id)\n\n  n= 9542, number of events= 1643 \n\n            coef exp(coef) se(coef) robust se      z Pr(>|z|)    \nanc      -0.3220    0.7247   0.1061    0.1057 -3.046  0.00232 ** \nanctime  -1.1908    0.3040   1.4081    1.6699 -0.713  0.47581    \nanctime2 -2.2570    0.1047   1.8161    1.7911 -1.260  0.20762    \ngvh       0.6626    1.9398   0.1352    0.1429  4.636 3.55e-06 ***\ngvhtime   0.3913    1.4790   0.5865    0.4304  0.909  0.36323    \ngvhtime2 -0.2264    0.7974   0.5398    0.3421 -0.662  0.50808    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n         exp(coef) exp(-coef) lower .95 upper .95\nanc         0.7247     1.3799  0.589072    0.8915\nanctime     0.3040     3.2896  0.011519    8.0225\nanctime2    0.1047     9.5548  0.003127    3.5025\ngvh         1.9398     0.5155  1.465873    2.5668\ngvhtime     1.4790     0.6762  0.636204    3.4380\ngvhtime2    0.7974     1.2541  0.407813    1.5591\n\nConcordance= 0.581  (se = 0.01 )\nLikelihood ratio test= 228.4  on 6 df,   p=<2e-16\nWald test            = 212.6  on 6 df,   p=<2e-16\nScore (logrank) test = 349.6  on 6 df,   p=<2e-16,   Robust = 56.74  p=2e-10\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\nCode show/hide\n## COLUMN 2\n\n\n# Add extra variables\nlandmarkw3 <- landmarkw2 %>%\n  mutate(strtime = (landmark - 0.5)/2,\n         strtime2 = strtime^2\n  )\n\n# Fit model\ncox_land3 <- coxph(Surv(entry, time, status != 0) ~ cluster(id) +\n                     anc + anctime + anctime2 +\n                     gvh + gvhtime + gvhtime2 +\n                     strtime + strtime2,\n                   data = landmarkw3,\n                   method = \"breslow\")\nsummary(cox_land3)\n\n\nCall:\ncoxph(formula = Surv(entry, time, status != 0) ~ anc + anctime + \n    anctime2 + gvh + gvhtime + gvhtime2 + strtime + strtime2, \n    data = landmarkw3, method = \"breslow\", cluster = id)\n\n  n= 9542, number of events= 1643 \n\n             coef exp(coef) se(coef) robust se      z Pr(>|z|)    \nanc      -0.29798   0.74232  0.09953   0.09402 -3.169  0.00153 ** \nanctime  -1.39312   0.24830  1.38042   1.62961 -0.855  0.39262    \nanctime2 -2.03744   0.13036  1.79663   1.76544 -1.154  0.24847    \ngvh       0.67374   1.96156  0.13323   0.14048  4.796 1.62e-06 ***\ngvhtime   0.33291   1.39502  0.57606   0.41695  0.798  0.42462    \ngvhtime2 -0.17548   0.83906  0.53237   0.33324 -0.527  0.59849    \nstrtime   1.41388   4.11189  1.35613   1.60559  0.881  0.37853    \nstrtime2  1.94032   6.96098  1.78860   1.75102  1.108  0.26781    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n         exp(coef) exp(-coef) lower .95 upper .95\nanc         0.7423     1.3471  0.617386    0.8925\nanctime     0.2483     4.0274  0.010182    6.0548\nanctime2    0.1304     7.6709  0.004096    4.1485\ngvh         1.9616     0.5098  1.489437    2.5833\ngvhtime     1.3950     0.7168  0.616125    3.1586\ngvhtime2    0.8391     1.1918  0.436650    1.6123\nstrtime     4.1119     0.2432  0.176752   95.6575\nstrtime2    6.9610     0.1437  0.225010  215.3469\n\nConcordance= 0.587  (se = 0.012 )\nLikelihood ratio test= 227.9  on 8 df,   p=<2e-16\nWald test            = 233.2  on 8 df,   p=<2e-16\nScore (logrank) test = 348.8  on 8 df,   p=<2e-16,   Robust = 56.74  p=2e-09\n\n  (Note: the likelihood ratio and score tests assume independence of\n     observations within a cluster, the Wald and robust score tests do not).\n\n\n\n\nFigure 5.2\n\n\nCode show/hide\n# Extract estimated survival probabilities\nsurv <- survfit(cox_land2,\n                newdata = data.frame(anc = 0, anctime = 0, anctime2 = 0,\n                                     gvh = 0, gvhtime = 0, gvhtime2 = 0))\n\n# Order data for plotting\npdata <- data.frame(surv = surv$surv,\n                    time = surv$time,\n                    landmark = c(rep(\"0.5\", surv$strata[[1]]),\n                                 rep(\"1.0\", surv$strata[[2]]),\n                                 rep(\"1.5\", surv$strata[[3]]),\n                                 rep(\"2.0\", surv$strata[[4]]),\n                                 rep(\"2.5\", surv$strata[[5]]))\n)\n\n# Add prob 1 in beginning for all\npdata2 <- as.data.frame(pdata %>% group_by(landmark) %>%\n                          group_modify(~ add_row(.x, surv = 1, time = 0, .before=0)))\n\n\n# Create Figure (a)\nfig5.2a <- ggplot(aes(x = time, y = surv, linetype = landmark), data = pdata2) +\n  geom_step(size = 1) +\n  scale_linetype_discrete(\"Landmark\") +\n  xlab(\"Time since bone marrow transplantation (months)\") +\n  ylab(\"Conditional survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 9),\n                     breaks = seq(0, 9, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  theme(legend.key.size = unit(1.5, 'cm')) +\n  guides(linetype = guide_legend(nrow = 1, byrow = TRUE))\n\nfig5.2a\n\n\n\n\n\nCode show/hide\n# For anc = gvh = 1\n# Add LP to data\npdata2$landmarknum <- as.numeric(pdata2$landmark)\npdata2$lp <- with(pdata2,\n                  coef(cox_land2)[1] +\n                    coef(cox_land2)[2] * (landmarknum - 0.5) / 2 +\n                     coef(cox_land2)[3] * ((landmarknum - 0.5) / 2)^2 +\n                      coef(cox_land2)[4] +\n                       coef(cox_land2)[5] * (landmarknum - 0.5) / 2 +\n                        coef(cox_land2)[6] * ((landmarknum - 0.5) / 2)^2\n                        )\n\n\n\npdata2_wc <- pdata2\npdata2_wc$survlp <- with(pdata2, surv ^ exp(lp))\n\n\n# Create Figure (b)\nfig5.2b <- ggplot(aes(x = time, y = survlp, linetype = landmark), data = pdata2_wc) +\n  geom_step(size = 1) +\n  scale_linetype_discrete(\"Landmark\") +\n  xlab(\"Time since bone marrow transplantation (months)\") +\n  ylab(\"Conditional survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 9),\n                     breaks = seq(0, 9, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  theme(legend.key.size = unit(1.5, 'cm')) +\n  guides(linetype = guide_legend(nrow = 1, byrow = TRUE))\n\nfig5.2b\n\n\n\n\n\n\n\nFigure 5.3\n\n\nCode show/hide\n# Extract estimated survival probabilities\nsurv <- survfit(cox_land3,\n                newdata = data.frame(anc = 0, anctime = 0, anctime2 = 0,\n                                     gvh = 0, gvhtime = 0, gvhtime2 = 0 ,\n                                     strtime = 0, strtime2 = 0))\n\n# Order data for plotting\npdata <- data.frame(surv = surv$surv,\n                    time = surv$time)\n\nrequire(dplyr)\nbase305 <- pdata %>% filter(time < 6.5) %>% \n  mutate(landmark = 0.5,\n         km0 = surv, \n         lpt = 0,\n         lpz = coef(cox_land3)[1] + coef(cox_land3)[4],\n         km1 = km0^exp(lpz))\n\n\nbase310 <- pdata %>% filter(time > 1 & time < 7) %>%  \n  mutate(landmark = 1,\n         lpt = coef(cox_land3)[7] * 0.5 / 2 + coef(cox_land3)[8] * (0.5 / 2)^2,\n         km0 = (surv / 0.9784098)^exp(lpt), \n         lpz = coef(cox_land3)[1] + coef(cox_land3)[4] + \n           coef(cox_land3)[2] * 0.5 / 2 + \n           coef(cox_land3)[5] * 0.5 / 2 +\n           coef(cox_land3)[3] * (0.5 / 2)^2 + \n           coef(cox_land3)[6] * (0.5 / 2)^2 ,\n         km1 = km0^exp(lpz))\n\n\nbase315 <- pdata %>% filter(time > 1.5 & time < 7.5) %>%  \n  mutate(landmark = 1.5,\n         lpt = coef(cox_land3)[7] * 1 / 2 + coef(cox_land3)[8] * (1 / 2)^2,\n         km0 = (surv / 0.9554490)^exp(lpt), \n         lpz = coef(cox_land3)[1] + coef(cox_land3)[4] + \n           coef(cox_land3)[2] * 1 / 2 + \n           coef(cox_land3)[5] * 1 / 2 +\n           coef(cox_land3)[3] * (1 / 2)^2 + \n           coef(cox_land3)[6] * (1 / 2)^2 ,\n         km1 = km0^exp(lpz))\n\nbase320 <- pdata %>% filter(time > 2 & time < 8) %>%  \n  mutate(landmark = 2,\n         lpt = coef(cox_land3)[7] * 1.5 / 2 + coef(cox_land3)[8] * (1.5 / 2)^2,\n         km0 = (surv / 0.9395795)^exp(lpt), \n         lpz = coef(cox_land3)[1] + coef(cox_land3)[4] + \n           coef(cox_land3)[2] * 1.5 / 2 + \n           coef(cox_land3)[5] * 1.5 / 2 +\n           coef(cox_land3)[3] * (1.5 / 2)^2 + \n           coef(cox_land3)[6] * (1.5 / 2)^2 ,\n         km1 = km0^exp(lpz))\n\nbase325 <- pdata %>% filter(time > 2.5 & time < 8.5) %>%  \n  mutate(landmark = 2.5,\n         lpt = coef(cox_land3)[7] * 2 / 2 + coef(cox_land3)[8] * (2 / 2)^2,\n         km0 = (surv / 0.9126288)^exp(lpt), \n         lpz = coef(cox_land3)[1] + coef(cox_land3)[4] + \n           coef(cox_land3)[2] * 2 / 2 + \n           coef(cox_land3)[5] * 2 / 2 +\n           coef(cox_land3)[3] * (2 / 2)^2 + \n           coef(cox_land3)[6] * (2 / 2)^2 ,\n         km1 = km0^exp(lpz))\nbase3slut <- as.data.frame(rbind(base305, base310, base315, base320, base325))\n\n\n# Add prob 1 in beginning for all\npdata3 <- as.data.frame(base3slut %>% group_by(landmark) %>%\n                           group_modify(~ add_row(.x, km0 = 1, km1  = 1, time = 0, .before=0)))\n\n# Create Figure (a)\nfig5.3a <- ggplot(aes(x = time, y = km0, linetype = as.factor(landmark)), data = pdata3) +\n  geom_step(size = 1) +\n  scale_linetype_discrete(\"Landmark\",labels=c(\"0.5\",\"1.0\",\"1.5\", \"2.0\",\"2.5\")) +\n  xlab(\"Time since bone marrow transplantation (months)\") +\n  ylab(\"Conditional survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 9),\n                     breaks = seq(0, 9, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n  theme_general +\n  theme(legend.key.size = unit(1.5, 'cm')) + \n  guides(linetype = guide_legend(nrow = 1, byrow = TRUE))\n\nfig5.3a\n\n\n\n\n\nCode show/hide\n# Create Figure 5.3 (right)\nfig5.3b <- ggplot(aes(x = time, y = km1, linetype = as.factor(landmark)), data = pdata3) +\n  geom_step(size = 1) +\n  scale_linetype_discrete(\"Landmark\",labels=c(\"0.5\",\"1.0\",\"1.5\", \"2.0\",\"2.5\")) +\n  xlab(\"Time since bone marrow transplantation (months)\") +\n  ylab(\"Conditional survival probability\") +\n  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 9),\n                     breaks = seq(0, 9, 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),\n                     limits = c(0, 1.0),\n                     breaks = seq(0, 1.0, 0.1)) +\n   theme_general +\n   theme(legend.key.size = unit(1.5, 'cm'))  +\n  guides(linetype = guide_legend(nrow = 1, byrow = TRUE))\n\nfig5.3b"
  },
  {
    "objectID": "Ch5.html#missing-tab-5.5-and-figs-5.10-5.11",
    "href": "Ch5.html#missing-tab-5.5-and-figs-5.10-5.11",
    "title": "5  Marginal models",
    "section": "MISSING: Tab 5.5 and Figs 5.10-5.11",
    "text": "MISSING: Tab 5.5 and Figs 5.10-5.11\nTODO: run HNRV’s adapted chapter5_bmt_Eva.qmd (made frome Eva’s bmt230217.R)"
  },
  {
    "objectID": "Ch5.html#exercises",
    "href": "Ch5.html#exercises",
    "title": "5  Marginal models",
    "section": "Exercises",
    "text": "Exercises\nThe SAS solutions are available as single files for download:\n\nExercises 5.6 - 5.9 (The Copenhagen Holter study)\nExercise 5.10 (Recurrent episodes in affective disorders)\n\n\nExercise 5.1 (*)\nConsider the two-state reversible Markov model, set up the \\(\\mathbf{A}(t)\\) and \\(\\mathbf{P}(s,t)\\) matrices, and express, using the Kolmogorov forward differential equations, the transition probabilities in terms of the transition intensities.\nThe intensity matrix is: \\[{\\bf A}(t)=\\left( \\begin{array}{cc}\n-A_{01}(t)&A_{01}(t)\\\\\nA_{10}(t)&-A_{10}(t)\\\\\n\\end{array} \\right).\n\\] and the transition probability matrix: \\[{\\bf P}(s,t)=\\left( \\begin{array}{cc}\nP_{00}(s,t)&1-P_{00}(s,t)\\\\\n1-P_{11}(s,t)&P_{11}(s,t)\\\\\n\\end{array} \\right)\n\\] or, equivalently \\[{\\bf P}(s,t)=\\left( \\begin{array}{cc}\n1-P_{01}(s,t)&P_{01}(s,t)\\\\\nP_{10}(s,t)&1-P_{10}(s,t)\\\\\n\\end{array} \\right).\n\\] This leads to the Kolmogorov forward differential equations \\[\\frac{\\partial}{\\partial t}P_{01}(s,t)+(\\alpha_{01}(t)+\\alpha_{10}(t))P_{01}(s,t)=\\alpha_{01}(t)\\] and \\[\\frac{\\partial}{\\partial t}P_{10}(s,t)+(\\alpha_{01}(t)+\\alpha_{10}(t))P_{10}(s,t)=\\alpha_{10}(t).\\] These are linear first order differential equations, i.e., of the form \\[f^{\\prime}(t)+g(t)f(t)=h(t)\\] which are known to have the solution \\[f(t)=v(t)\\exp(-G(t))+c\\exp(-G(t))\\] with \\(G^{\\prime}(t)=g(t)\\) and \\(v^{\\prime}(t)=\\exp(G(t))h(t)\\), and the constants \\(c\\) are determined such that \\(P_{01}(s,s)=0\\) and \\(P_{10}(s,s)=0\\). For \\(s=0\\), the solution is \\[P_{01}(0,t)=\\int_0^t\\exp(-\\int_u^t(\\alpha_{01}(x)+\\alpha_{10}(x))dx)\\alpha_{01}(u)du\\] (the constant \\(c=0\\)) and, for a general \\(s\\): \\[P_{01}(s,t)=\\int_s^t\\exp(-\\int_u^t(\\alpha_{01}(x)+\\alpha_{10}(x))dx)\\alpha_{01}(u)du.\\] The expression for \\(P_{10}(s,t)\\) is similar.\n\n\nExercise 5.2 (*)\nConsider the four-state model for the bone marrow transplantation study, set up the \\(\\mathbf{A}(t)\\) and \\(\\mathbf{P}(s,t)\\) matrices, and express, using the Kolmogorov forward differential equations, the transition probabilities in terms of the transition intensities.\nThe intensity matrix is \\[{\\bf A}(t)=\\left( \\begin{array}{cccc}\n-A_{01}(t)-A_{02}(t)-A_{03}(t)&A_{01}(t)&A_{02}(t)&A_{03}(t)\\\\\n0&-A_{12}(t)-A_{13}(t)&A_{12}(t)&A_{13}(t)\\\\\n0&0&-A_{23}(t)&A_{23}(t)\\\\\n0&0&0&0\\\\\n\\end{array} \\right),\n\\] and the transition probability matrix \\[{\\bf P}(s,t)=\\left( \\begin{array}{cccc}\nP_{00}(s,t)&P_{01}(s,t)&P_{02}(s,t)&P_{03}(s,t)\\\\\n0&P_{11}(s,t)&P_{12}(s,t)&P_{13}(s,t)\\\\\n0&0&P_{22}(s,t)&P_{23}(s,t)\\\\\n0&0&0&1\\\\\n\\end{array} \\right),\n\\] with \\(P_{00}=1-P_{01}-P_{02}-P_{03}\\), \\(P_{11}=1-P_{12}-P_{13}\\), and \\(P_{22}=1-P_{23}\\). The Kolmogorov forward equations are \\[\\frac{\\partial}{\\partial t}P_{00}(s,t)=-P_{00}(s,t)(\\alpha_{01}(t)+\\alpha_{02}(t)+\\alpha_{03}(t)),\\] \\[\\frac{\\partial}{\\partial t}P_{01}(s,t)=P_{00}(s,t)\\alpha_{01}(t)-P_{01}(s,t)(\\alpha_{12}(t)+\\alpha_{13}(t)),\\] \\[\\frac{\\partial}{\\partial t}P_{02}(s,t)=P_{00}(s,t)\\alpha_{02}(t)+P_{01}(s,t)\\alpha_{12}(t)-P_{02}(s,t)\\alpha_{23}(t),\\] \\[\\frac{\\partial}{\\partial t}P_{11}(s,t)=-P_{11}(s,t)(\\alpha_{12}(t)+\\alpha_{13}(t)),\\] \\[\\frac{\\partial}{\\partial t}P_{12}(s,t)=P_{11}(s,t)\\alpha_{12}(t)-P_{22}(s,t)\\alpha_{23}(t),\\] \\[\\frac{\\partial}{\\partial t}P_{22}(s,t)=-P_{22}(s,t)\\alpha_{23}(t).\\] For \\(P_{hh}, h=0,1,2,\\) the solutions are the well-known \\[P_{hh}(s,t)=\\exp(-\\int_s^t\\alpha_{h\\cdot}(u)du),\\] where \\(\\alpha_{h\\cdot}(u)\\) is the total transition intensity out of state \\(h\\). For both \\(P_{01}\\) and \\(P_{21}\\), the equation has the same form as that for the Markov illness-death model (Section 5.1.3, except for a misprint there where the r.h.s. of the equation for \\(P_{01}\\) should read \\(P_{00}(s,t)\\alpha_{01}(t)-P_{01}(s,t)\\alpha_{12}(t)\\)) and the solutions are, respectively, \\[P_{01}(s,t)=\\int_s^tP_{00}(s,u)\\alpha_{01}(u)P_{11}(u,t)du, \\quad\nP_{12}(s,t)=\\int_s^tP_{11}(s,u)\\alpha_{12}(u)P_{22}(u,t)du.\\] These results may be verified by direct differentiation or by referring to the fact that the differential equation is linear, as utilized in Exercise 5.1.\nThe equation for \\(P_{02}(s,t)=f(t)\\) is also linear, \\(f^{\\prime}(t)+g(t)f(t)=h(t)\\), with \\(g(t)=\\alpha_{23}(t)\\) and \\(h(t)=P_{00}(s,t)\\alpha_{02}(t)+P_{01}(s,t)\\alpha_{12}(t)\\). As a consequence, the solution (as shown in Section 5.1.5) has two terms \\[P_{02}^{(a)}(s,t)=\\int_s^tP_{00}(s,u)\\alpha_{02}(u)P_{22}(u,t)du\\] corresponding to the probability of a direct \\(0\\rightarrow 2\\) transition, and \\[P_{02}^{(b)}(s,t)=\\int_s^tP_{01}(s,u)\\alpha_{12}(u)P_{22}(u,t)du\\] corresponding to transition via state 1.\n\n\nExercise 5.3 (*)\n\n1.\nConsider the competing risks model and show that the ratio between the cause \\(h\\) sub-distribution hazard and the corresponding cause-specific hazard is \\[\\frac{\\widetilde{\\alpha}_h(t)}{\\alpha_h(t)}=\\frac{S(t)}{1-F_h(t)}.\\]\nLet \\(T_h=\\inf\\{t:V(t)=h\\}\\) be the improper variable denoting time of transition into state \\(h\\). Then \\(P(t\\leq T_h<t+dt)=\\alpha_{0h}(t)P(V(t)=0)dt\\). The cause-specific hazard is the conditional probability of this event given \\(V(t)=0\\), and the conditioning event has probability \\(S(t)=P(V(t)=0)\\). For the sub-distribution hazard the conditioning event is \\(T_h>t\\) with probability \\(1-F_h(t)\\), so, the ratio between the two is \\(S(t)/(1-F_1(t))\\).\n\n\n2.\nShow that, thereby, proportional sub-distribution hazards and proportional cause-specific hazards are incompatible.\nFor a two-sample situation with proportional cause-specific hazards, i.e., \\(\\alpha_{h1}(t)=\\theta\\alpha_{h0}(t)\\), the ratio between the corresponding sub-distribution hazards is, therefore, \\[\\frac{\\widetilde{\\alpha}_{h1}(t)}{\\widetilde{\\alpha}_{h0}(t)}=\\frac{S_1(t)/(1-F_{h1}(t))}{S_0(t)/(1-F_{h0}(t))}\\] \\[=\\frac{\\exp(-A_h(t)(\\theta-1))}{\\theta\\int_0^tS_1(u)\\alpha_h(u)du/\\int_0^tS_0(u)\\alpha_h(u)du}\\] which is constant in \\(t\\) only if \\(\\theta=1\\). A similar argument shows that proportional sub-distribution hazards leads to non-proportional cause-specific hazards.\n\n\n\nExercise 5.4 (*)\nConsider the competing risks model and direct binomial regression for \\(Q_h(t_0)\\), the cause-\\(h\\) cumulative incidence at time \\(t_0\\). The estimating equation (5.18) is \\[\\sum_iD_i(t_0)\\widehat{W}_i(t_0)\\mathbf{A}(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\bigl(N_{hi}(t_0)-Q_h(t_0\\mid \\mathbf{Z}_1)\\bigr)\\] with \\(D_i(t_0)\\) the indicator \\(I(T_i\\wedge t_0\\leq C_i)\\) of observing the state occupied at \\(t_0\\) and \\(\\widehat{W}_i(t_0)=1/\\widehat{G}((t_0\\wedge X_i)-)\\) the estimated inverse probability of no censoring (strictly) before the minimum of \\(t_0\\) and the observation time \\(X_i\\) for subject \\(i\\). The alternative estimating equation (5.32) is \\[\\sum_i\\mathbf{A}(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\bigl(N_{hi}(t_0)D_i(t_0)\\widehat{W}_i(t_0)-Q_h(t_0\\mid \\mathbf{Z}_i)\\bigr).\\] Show that, replacing \\(\\widehat{G}\\) by the true \\(G\\), both estimating equations are unbiased.\nNote that \\(D_i(t_0)/G(t_0\\wedge X_i)=D_i(t_0)/G(t_0\\wedge T_i)\\) and that, hence, \\[E(D_i(t_0)/G(t_0\\wedge X_i)\\mid T_i)=1.\\] Note, further, that the observed indicator \\(N_{hi}(t_0)=I(X_i\\leq t_0, D_i=h)\\) in both sets of equations, \\(\\mathbf{U}=\\mathbf{0}\\), may be replaced by \\(I(T_i\\leq t_0, D_i=h)\\). This is because \\[\\widehat{W}_i(t_0)N_{hi}(t_0)=\\widehat{W}_i(t_0)I(T_i\\leq t_0, D_i=h).\\] With these remarks in place, unbiasedness of both sets of estimating equations follows by writing the expectation as \\[E(\\mathbf{U})=E_T(E(\\mathbf{U}\\mid T)).\\]\n\n\nExercise 5.5 (*)\nDerive the estimating equations for the landmark model (5.11).\nThe pseudo-likelihood contribution from a single landmark is \\[\\sum_{i=1}^n\\int_{s_j}^{t_{hor}(s_j)}Y_i(s_j)\\log\\bigl(\\frac{\\exp(\\mbox{LP}_{s_j,i})}{\\sum_kY_k(t)\\exp(\\mbox{LP}_{s_j,k})}\\bigr)dN_i(t),\\] however, in contrast to model (5.10), the same regression coefficient appears at all landmarks, so, the resulting pseudo-likelihood is obtained by adding over landmarks, \\(j\\) \\[\\sum_{j=1}^L\\sum_{i=1}^n\\int_{s_j}^{t_{hor}(s_j)}Y_i(s_j)\\log\\bigl(\\frac{\\exp(\\mbox{LP}_{s_j,i})}{\\sum_kY_k(t)\\exp(\\mbox{LP}_{s_j,k})}\\bigr)dN_i(t).\\] There is a baseline hazard for each landmark, and estimation is based on events observed between \\(s_j\\) and \\(t_{hor}(s_j)\\), i.e., the Breslow-type estimator \\[\\widehat{A}_{0s_j}(t)=\\int_{s_j}^t\\frac{\\sum_iY_i(s_j)dN_i(u)}{\\sum_iY_i(u)\\exp(\\widehat{\\mbox{LP}}_{s_j,i})}.\\]\n\n\nExercise 5.6\nConsider an illness-death model for the Copenhagen Holter study with states ‘0: Alive without AF or stroke’, ‘1: Alive with AF and no stroke’, ‘2: Dead or stroke’, see Figures 1.3 and 1.7. Examine, using a time-dependent covariate, whether this process may be modeled as being Markovian.\n\nRSAS\n\n\nThe data should be loaded as chs_data\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(mstate) #probtrans, ELOS\nlibrary(mets) #binreg\nlibrary(timereg)\n\n\nFinally, we will convert the time variables to years and add a time variable and status indicator for the composite end-point stroke-free survival.\n\n\nCode show/hide\nchs_data <- chs_data %>% mutate(timeafib = timeafib/365.25,\n                                timestroke = timestroke/365.25,\n                                timedeath = timedeath/365.25,\n                                timestrokeordeath = ifelse(stroke == 1, timestroke, timedeath),\n                                strokeordeath = ifelse(stroke ==1, 1, death))\n\n\nFor an illness-death process to be Markovian, \\(\\alpha_{13}(\\cdot)\\) must only depend on time since start of the study, \\(t\\). We will test the Markov assumption by adding the following time-dependent covariate in a Cox model for \\(\\alpha_{13}(\\cdot)\\),\n\\[ Z_{i1}(t) = I(d_i(t) < \\text{30 days}),\\]\nwhere \\(d_i(t) = t - T_{1i}\\) and \\(T_{1i}\\) is the time of diagnosis of AF for patient \\(i\\).\nWe will first make a subset of the data only containing subjects with AF (and where no stroke occurred before the time of the AF diagnosis). We will add a variable wait to this data frame which is the difference between timeafib and timestrokeordeath.\n\n\nCode show/hide\naf_subset <- chs_data %>% filter(afib == 1 & timeafib & timeafib < timestrokeordeath) %>% mutate(wait = timestrokeordeath - timeafib)\n\n\nThen, we will split each record at 30 days after the diagnosis of AF using the survSplit function from the survival package. We must include a Surv object as the formula argument and specify the name of our time-dependent covariate in the episode argument and the values where we wish to split the data using the cut argument.\nFurthermore, we will add the variables start and end which are the start and end time for each row using time since entry to study as time variable.\n\n\nCode show/hide\n# Creating new data for estimation with piece-wise constant effect of duration in state 1\ndata56 <- survSplit(formula = Surv(wait, strokeordeath) ~ ., data = af_subset, cut = (30-0.00001)/365.25, episode = \"interval\")\n# Resetting start and end points of interval\ndata56$start <- data56$tstart + data56$timeafib\ndata56$end <- data56$wait + data56$timeafib\n\n\nFinally, we fit a model with coxph from the survival package using the data set data56.\n\n\nCode show/hide\ncox56 <- coxph(Surv(start, end, strokeordeath) ~ interval, data= data56, ties = \"breslow\") \nsummary(cox56)\n\n\nCall:\ncoxph(formula = Surv(start, end, strokeordeath) ~ interval, data = data56, \n    ties = \"breslow\")\n\n  n= 129, number of events= 30 \n\n            coef exp(coef) se(coef)      z Pr(>|z|)   \ninterval -2.1313    0.1187   0.6735 -3.164  0.00155 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n         exp(coef) exp(-coef) lower .95 upper .95\ninterval    0.1187      8.426    0.0317    0.4443\n\nConcordance= 0.547  (se = 0.029 )\nLikelihood ratio test= 7.95  on 1 df,   p=0.005\nWald test            = 10.01  on 1 df,   p=0.002\nScore (logrank) test = 13.75  on 1 df,   p=2e-04\n\n\nSince the time-dependent covariate is highly significant (\\(p\\)-value is \\(0.0015\\)), the Markov assumption does seem to be violated.\n\n\nWe first load and prepare the data:\n\n\nCode show/hide\nproc import out = chs_data\n    datafile = 'data/cphholter.csv'\n    dbms= csv replace;\n    getnames=yes;\nrun;\n\n* We will convert the time variables, timeafib, timestroke, and timedeath, from days to years;\n* Furthermore, we add variables for the composite end-point of stroke or death without stroke;\ndata chs_data;\n    set chs_data;\n    timeafib = timeafib/365.25;\n    timestroke = timestroke/365.25;\n    timedeath = timedeath/365.25;\n    timestrokeordeath = timedeath;\n    if stroke = 1 then timestrokeordeath = timestroke;\n    strokeordeath = death;\n    if stroke = 1 then strokeordeath = 1;\nrun;\n\n\nThen code for solution.\n\n\nCode show/hide\n* For the process of an illness-death model to be Markovian alpha13(.) must only depend on time since start of the study, \n  t. We will test the Markov assumption by adding the following time-dependent covariate in a Cox model for alpha13(.),\n  \n   Z_i1(t) = I(d_i(t) > 30 days),\n   \n   where d_i(t) = t - T_1i  and T_1i is the time of diagnosis of AF for patient i.;\n\n* The model is fitted using the 'phreg' procedure. The only covariate in the model is 'wait30' which is designed as described above. \n  To account for delayed entry we must add the argument '/ entry = timeafib' in the model statement.;\n\ntitle \"5.6\";\nproc phreg data = chs_data;\n    model timestrokeordeath*strokeordeath(0)=wait30 / entry = timeafib;\n    wait30 = 0;\n    if ((timestrokeordeath - timeafib) > 30/365.25) then wait30 = 1;\nrun;\n    \n* The time-dependent covariate is highly significant (p-value of 0.0016). Thus, the Markov assumption does seem to be violated, \n  i.e. there seems to be an effect of the duration of AF.;\n\n\n\n\n\n\n\nExercise 5.7\nConsider the four-state model for the Copenhagen Holter study, see Figure 1.7.\n\n1.\nFit separate landmark models at times 3, 6, and 9 years for the mortality rate, including AF, stroke, ESVEA, sex, age, and systolic blood pressure.\n\nRSAS\n\n\nIn order to fit separate land-mark models at times \\(s\\) = 3, 6, and 9 years for the mortality rate, including AF, stroke, ESVEA, sex, age, and systolic blood pressure, we must create a new data set.\nFor each time point, we will make a data set which only contains subjects still under observation at time \\(s\\) = 3, 6 or 9 years. The variables afib and stroke are modified such that they correspond to the indicator functions \\(I(AF \\leq s)\\) and \\(I(\\text{stroke} \\leq s)\\). Furthermore, landmark = s and entry = s are added to the data sets.\n\n\nCode show/hide\n# Creating the landmark data at $s$ = 3, 6, 9 years \nlm571_3 <- chs_data %>% filter(timedeath >= 3) %>% mutate(afib = ifelse(afib == 1 & timeafib <= 3,1,0),\n                                                         stroke = ifelse(stroke == 1 & timestroke <= 3, 1,0),\n                                                         landmark = 3,\n                                                         entry = 3)\nlm571_6 <- chs_data %>% filter(timedeath >= 6) %>% mutate(afib = ifelse(afib == 1 & timeafib <= 6,1,0),\n                                                         stroke = ifelse(stroke == 1 & timestroke <= 6, 1,0),\n                                                         landmark = 6,\n                                                         entry = 6)\nlm571_9 <- chs_data %>% filter(timedeath >= 9) %>% mutate(afib = ifelse(afib == 1 & timeafib <= 9,1,0),\n                                                         stroke = ifelse(stroke == 1 & timestroke <= 9, 1,0),\n                                                         landmark = 9, entry = 9)\n\n\nWe then create a data set called lm571 where the former data sets are merged and covariates corresponding to each time point are added.\n\n\nCode show/hide\n#Merging the data sets and specifying covariates for each time point\nlm571 <- rbind(lm571_3, lm571_6, lm571_9)\n\nlm571 <- lm571 %>% mutate(afib3 = (landmark == 3)*afib,\n                          afib6 = (landmark == 6)*afib,\n                          afib9 = (landmark == 9)*afib,\n                          stroke3 = (landmark == 3)*stroke,\n                          stroke6 = (landmark == 6)*stroke,\n                          stroke9 = (landmark == 9)*stroke,\n                          esvea3 = (landmark == 3)*esvea,\n                          esvea6 = (landmark == 6)*esvea,\n                          esvea9 = (landmark == 9)*esvea,\n                          sex3 = (landmark == 3)*sex,\n                          sex6 = (landmark == 6)*sex,\n                          sex9 = (landmark == 9)*sex,\n                          age3 = (landmark == 3)*age,\n                          age6 = (landmark == 6)*age,\n                          age9 = (landmark == 9)*age,\n                          sbp3 = (landmark == 3)*sbp,\n                          sbp6 = (landmark == 6)*sbp,\n                          sbp9 = (landmark == 9)*sbp)\n\n\nFinally, the models are fitted with the coxph function using the lm571 data set. We must include strata(landmark) in the formula argument to obtain separate models for each time point.\n\n\nCode show/hide\n# Fitting a Cox model using the land-mark data set\ncox571 <- coxph(Surv(entry, timedeath, death) ~ afib3 + stroke3 + esvea3 + sex3 + age3 + sbp3 + \n                                                     afib6 + stroke6 + esvea6 + sex6 + age6 + sbp6 + \n                                                     afib9 + stroke9 + esvea9 + sex9 + age9 + sbp9 + strata(landmark),\n                  data = lm571,\n                  method = \"breslow\")\nsummary(cox571)\n\n\nCall:\ncoxph(formula = Surv(entry, timedeath, death) ~ afib3 + stroke3 + \n    esvea3 + sex3 + age3 + sbp3 + afib6 + stroke6 + esvea6 + \n    sex6 + age6 + sbp6 + afib9 + stroke9 + esvea9 + sex9 + age9 + \n    sbp9 + strata(landmark), data = lm571, method = \"breslow\")\n\n  n= 1797, number of events= 549 \n   (6 observations deleted due to missingness)\n\n            coef exp(coef) se(coef)     z Pr(>|z|)    \nafib3   0.136999  1.146827 0.513704 0.267 0.789709    \nstroke3 0.796183  2.217063 0.368752 2.159 0.030840 *  \nesvea3  0.257979  1.294312 0.168340 1.532 0.125402    \nsex3    0.649505  1.914594 0.141875 4.578 4.69e-06 ***\nage3    0.078952  1.082153 0.010458 7.549 4.38e-14 ***\nsbp3    0.006299  1.006319 0.002700 2.333 0.019648 *  \nafib6   0.433822  1.543144 0.420121 1.033 0.301786    \nstroke6 1.356334  3.881935 0.252350 5.375 7.67e-08 ***\nesvea6  0.067649  1.069989 0.203817 0.332 0.739958    \nsex6    0.573667  1.774763 0.163193 3.515 0.000439 ***\nage6    0.067283  1.069598 0.012099 5.561 2.68e-08 ***\nsbp6    0.006280  1.006300 0.003099 2.026 0.042740 *  \nafib9   0.557615  1.746502 0.334701 1.666 0.095711 .  \nstroke9 1.004845  2.731483 0.268416 3.744 0.000181 ***\nesvea9  0.089436  1.093558 0.241025 0.371 0.710589    \nsex9    0.613813  1.847462 0.190968 3.214 0.001308 ** \nage9    0.070655  1.073211 0.014072 5.021 5.14e-07 ***\nsbp9    0.004288  1.004297 0.003733 1.149 0.250758    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n        exp(coef) exp(-coef) lower .95 upper .95\nafib3       1.147     0.8720    0.4190     3.139\nstroke3     2.217     0.4510    1.0762     4.567\nesvea3      1.294     0.7726    0.9306     1.800\nsex3        1.915     0.5223    1.4498     2.528\nage3        1.082     0.9241    1.0602     1.105\nsbp3        1.006     0.9937    1.0010     1.012\nafib6       1.543     0.6480    0.6773     3.516\nstroke6     3.882     0.2576    2.3673     6.366\nesvea6      1.070     0.9346    0.7176     1.595\nsex6        1.775     0.5635    1.2889     2.444\nage6        1.070     0.9349    1.0445     1.095\nsbp6        1.006     0.9937    1.0002     1.012\nafib9       1.747     0.5726    0.9063     3.366\nstroke9     2.731     0.3661    1.6141     4.622\nesvea9      1.094     0.9144    0.6818     1.754\nsex9        1.847     0.5413    1.2706     2.686\nage9        1.073     0.9318    1.0440     1.103\nsbp9        1.004     0.9957    0.9970     1.012\n\nConcordance= 0.671  (se = 0.012 )\nLikelihood ratio test= 230  on 18 df,   p=<2e-16\nWald test            = 257.9  on 18 df,   p=<2e-16\nScore (logrank) test = 291.9  on 18 df,   p=<2e-16\n\n\n\n\n\n\nCode show/hide\n* We will now fit separate land-mark models at times 3, 6, and 9 years for the mortality rate, including AF, stroke, ESVEA, sex, \n  age, and systolic blood pressure. AF and stroke will enter as the time-dependent covariates I(AF < s) and I(stroke < s) for s = 3, 6,\n  9 years;\n\n* We will first make a new data set called 'landmark' where we record the status of AF and stroke for all subjects at risk at the \n  three landmark times;\n\ndata landmark; set chs_data;\n    if timedeath >=3 then do;\n        landmark=3; entry=3;\n        af = 0; if afib = 1 and timeafib <= 3 then af = 1;\n        str =0; if stroke = 1 and timestroke <=3 then str=1;\n    output; end;\n    if timedeath >=6 then do;\n        landmark=6; entry=6;\n        af = 0; if afib = 1 and timeafib <= 6 then af = 1;\n        str =0; if stroke = 1 and timestroke <=6 then str=1;\n    output; end;\n    if timedeath>=9 then do;\n        landmark=9; entry=9;\n        af = 0; if afib = 1 and timeafib <= 9 then af = 1;\n        str =0; if stroke = 1 and timestroke <=9 then str=1;\n    output; end;\nrun;\n\n* We will fit all three models within one 'phreg' procedure. Therefore, we must use three different names for the \n  covariates at each land-mark time. The names are specified in the data frame 'covar541';\n\ndata cov571;\n    afib3 = 0; afib6 = 0; afib9 = 0;\n    stroke3 = 0; stroke6 = 0; stroke9 = 0;\n    esvea3 = 0; esvea6 = 0; esvea9 = 0;\n    sex3 = 0; sex6 = 0; sex9 = 0;\n    age3 = 0; age6 = 0; age9 = 0;\n    sbp3 = 0; sbp6 = 0; sbp9 = 0;\nrun;\n\n* We must include the argument '/entry = entry' in the model statement and 'landmark' in the strata statement.;\n\ntitle \"5.7.1\";\nproc phreg data=landmark;\n    model timedeath*death(0)= afib3 stroke3 esvea3 sex3 age3 sbp3\n                              afib6 stroke6 esvea6 sex6 age6 sbp6\n                              afib9 stroke9 esvea9 sex9 age9 sbp9 /entry=entry;\n    afib3 = af*(landmark = 3); stroke3 = str*(landmark = 3); esvea3 = esvea*(landmark = 3); \n    sex3 = sex*(landmark = 3); age3 = age*(landmark = 3); sbp3 = sbp*(landmark = 3);\n    afib6 = af*(landmark = 6); stroke6 = str*(landmark = 6);esvea6 = esvea*(landmark = 6); \n    sex6 = sex*(landmark = 6); age6 = age*(landmark = 6); sbp6 = sbp*(landmark = 6);\n    afib9 = af*(landmark = 9); stroke9 = str*(landmark = 9); esvea9 = esvea*(landmark = 9); \n    sex9 = sex*(landmark = 9); age9 = age*(landmark = 9); sbp9 = sbp*(landmark = 9);\n    strata landmark;\nrun;\n\n\n\n\n\n\n\n2.\nFit landmark ‘super models’ where the coefficients vary smoothly among landmarks but with separate baseline hazards at each landmark.\n\nRSAS\n\n\nWe will now fit land-mark ‘super-models’ where the coefficients vary smoothly among land-marks but with separate baseline hazards at each land-mark. We will let \\(m = 2\\) and \\(f_1(s) = \\frac{s - s_1}{s_L - s_1} = \\frac{s - 3}{9-3} = \\frac{s-3}{6}\\) and \\(f_2(s) = f_1(s)^2\\).\nBased on the data set lm571 we create a new data set, lm572, where variables \\(f_1(s)\\) and \\(f_2(s)\\) are added for all covariates.\n\n\nCode show/hide\n# Data frame fir the land-mark 'super-models' with separate baseline hazards at each land-mark\nlm572 <- lm571 %>%\n  mutate(afibtime  = afib * (landmark - 3)/6,\n         afibtime2 = afib * ((landmark - 3)/6)^2,\n         stroketime  = stroke * (landmark - 3)/6,\n         stroketime2 = stroke * ((landmark - 3)/6)^2,\n         esveatime  = esvea * (landmark - 3)/6,\n         esveatime2 = esvea * ((landmark - 3)/6)^2,\n         sextime  = sex * (landmark - 3)/6,\n         sextime2 = sex * ((landmark - 3)/6)^2,\n         agetime  = age * (landmark - 3)/6,\n         agetime2 = age * ((landmark - 3)/6)^2,\n         sbptime  = sbp * (landmark - 3)/6,\n         sbptime2 = sbp * ((landmark - 3)/6)^2,)\n\n\nThen, we fit the model with coxph using the data set lm572. We must include strata(landmark) in the formula argument to obtain separate baseline hazards at each land-mark.\n\n\nCode show/hide\n# Fitting a Cox model using the land-mark data set\ncox572 <- coxph(Surv(entry, timedeath, death) ~  afib + afibtime + afibtime2 + stroke + stroketime + stroketime2 +\n                                                      esvea + esveatime + esveatime2 + sex + sextime + sextime2 +\n                                                      age + agetime + agetime2 + sbp + sbptime + sbptime2 + strata(landmark),\n                  data = lm572,\n                  method = \"breslow\")\nsummary(cox572)\n\n\nCall:\ncoxph(formula = Surv(entry, timedeath, death) ~ afib + afibtime + \n    afibtime2 + stroke + stroketime + stroketime2 + esvea + esveatime + \n    esveatime2 + sex + sextime + sextime2 + age + agetime + agetime2 + \n    sbp + sbptime + sbptime2 + strata(landmark), data = lm572, \n    method = \"breslow\")\n\n  n= 1797, number of events= 549 \n   (6 observations deleted due to missingness)\n\n                 coef exp(coef)  se(coef)      z Pr(>|z|)    \nafib         0.136999  1.146827  0.513704  0.267   0.7897    \nafibtime     0.766675  2.152597  2.304579  0.333   0.7394    \nafibtime2   -0.346060  0.707470  2.080311 -0.166   0.8679    \nstroke       0.796183  2.217063  0.368752  2.159   0.0308 *  \nstroketime   2.031940  7.628872  1.521426  1.336   0.1817    \nstroketime2 -1.823279  0.161495  1.360510 -1.340   0.1802    \nesvea        0.257979  1.294312  0.168340  1.532   0.1254    \nesveatime   -0.592779  0.552789  0.988838 -0.599   0.5489    \nesveatime2   0.424236  1.528422  1.005180  0.422   0.6730    \nsex          0.649505  1.914594  0.141875  4.578 4.69e-06 ***\nsextime     -0.267661  0.765167  0.802333 -0.334   0.7387    \nsextime2     0.231969  1.261080  0.807776  0.287   0.7740    \nage          0.078952  1.082153  0.010458  7.549 4.38e-14 ***\nagetime     -0.038378  0.962349  0.059369 -0.646   0.5180    \nagetime2     0.030081  1.030538  0.059765  0.503   0.6147    \nsbp          0.006299  1.006319  0.002700  2.333   0.0196 *  \nsbptime      0.001936  1.001938  0.015272  0.127   0.8991    \nsbptime2    -0.003948  0.996060  0.015447 -0.256   0.7983    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n            exp(coef) exp(-coef) lower .95 upper .95\nafib           1.1468     0.8720   0.41902     3.139\nafibtime       2.1526     0.4646   0.02351   197.071\nafibtime2      0.7075     1.4135   0.01199    41.732\nstroke         2.2171     0.4510   1.07621     4.567\nstroketime     7.6289     0.1311   0.38674   150.487\nstroketime2    0.1615     6.1921   0.01122     2.324\nesvea          1.2943     0.7726   0.93057     1.800\nesveatime      0.5528     1.8090   0.07959     3.839\nesveatime2     1.5284     0.6543   0.21312    10.961\nsex            1.9146     0.5223   1.44982     2.528\nsextime        0.7652     1.3069   0.15878     3.687\nsextime2       1.2611     0.7930   0.25892     6.142\nage            1.0822     0.9241   1.06020     1.105\nagetime        0.9623     1.0391   0.85664     1.081\nagetime2       1.0305     0.9704   0.91663     1.159\nsbp            1.0063     0.9937   1.00101     1.012\nsbptime        1.0019     0.9981   0.97239     1.032\nsbptime2       0.9961     1.0040   0.96636     1.027\n\nConcordance= 0.671  (se = 0.012 )\nLikelihood ratio test= 230  on 18 df,   p=<2e-16\nWald test            = 257.9  on 18 df,   p=<2e-16\nScore (logrank) test = 291.9  on 18 df,   p=<2e-16\n\n\n\n\n\n\nCode show/hide\n* We will now fit land-mark ‘super-models’ where the coefficients vary smoothly among land-marks but with separate baseline hazards \n  at each land-mark. We will do as suggested in the book, m = 2 and f1(s) = (s - s1)/(sL - s1) = (s - 3)/6 and f2(s) = f1(s)^2.;\n\n* Once again, we specify the names of the covariates in a data step;\n\ndata cov572;\n    afib_ = 0; afibtime = 0; afibtime2 = 0;\n    stroke_ = 0; stroketime = 0; stroketime2 = 0;\n    esvea_ = 0; esveatime = 0; esveatime2 = 0;\n    sex_ = 0; sextime = 0; sextime2 = 0;\n    age_ = 0; agetime = 0; agetime2 = 0;\n    sbp_ = 0; sbptime = 0; sbptime2 = 0;\nrun;\n\n* Then, we fit the models using 'phreg' just as before.;\n\ntitle \"5.7.2\";\nproc phreg data=landmark;\n    model timedeath*death(0)= afib_ afibtime afibtime2\n                              stroke_ stroketime stroketime2\n                              esvea_ esveatime esveatime2\n                              sex_ sextime sextime2\n                              age_ agetime agetime2\n                              sbp_ sbptime sbptime2 / entry=entry;\n    afib_ = af; afibtime = af*(landmark - 3)/6; afibtime2 = af*((landmark-3)/6)**2;\n    stroke_ = str; stroketime = str*(landmark - 3)/6; stroketime2 = str*((landmark-3)/6)**2;\n    esvea_ = esvea; esveatime = esvea*(landmark - 3)/6; esveatime2 = esvea*((landmark-3)/6)**2;\n    sex_ = sex; sextime = sex*(landmark - 3)/6; sextime2 = sex*((landmark-3)/6)**2;\n    age_ = age; agetime = age*(landmark - 3)/6; agetime2 = age*((landmark-3)/6)**2;\n    sbp_ = sbp; sbptime = sbp*(landmark - 3)/6; sbptime2 = sbp*((landmark-3)/6)**2;\n    strata landmark;\nrun;\n\n\n\n\n\n\n\n3.\nFit a landmark ‘super model’ where both the coefficients and the baseline hazards vary smoothly among landmarks.\n\nRSAS\n\n\nFinally, we will fit a land-mark ‘super-model’ where both the coefficients and the baseline hazards vary smoothly among land-marks. We will choose the same smoothing functions for regression coefficients and baseline hazards, i. e. \\(g_1 = f_1\\) and \\(g_2 = f_2\\).\nBased on the data frame lm572 we create a new data frame, lm573, where \\(g_1\\) and \\(g_2\\) are added.\n\n\nCode show/hide\n# Data frame for a land-mark 'super-model' where both the coefficients and the baseline hazards vary smoothly among land-mark\nlm573 <- lm572 %>% mutate(strtime = (landmark - 3)/6,\n                          strtime2 = ((landmark - 3)/6)^2)\n\n\nThen, we fit the model with coxph using the data set lm573.\n\n\nCode show/hide\n# Fitting a Cox model using the land-mark data set\ncox573 <- coxph(Surv(entry, timedeath, death) ~ afib + afibtime + afibtime2 + stroke + stroketime + stroketime2 +\n                                                     esvea + esveatime + esveatime2 + sex + sextime + sextime2 +\n                                                     age + agetime + agetime2 + sbp + sbptime + sbptime2 + strtime + strtime2,\n                  data = lm573,\n                  method = \"breslow\")\nsummary(cox573)\n\n\nCall:\ncoxph(formula = Surv(entry, timedeath, death) ~ afib + afibtime + \n    afibtime2 + stroke + stroketime + stroketime2 + esvea + esveatime + \n    esveatime2 + sex + sextime + sextime2 + age + agetime + agetime2 + \n    sbp + sbptime + sbptime2 + strtime + strtime2, data = lm573, \n    method = \"breslow\")\n\n  n= 1797, number of events= 549 \n   (6 observations deleted due to missingness)\n\n                 coef exp(coef)  se(coef)      z Pr(>|z|)    \nafib         0.136803  1.146602  0.513611  0.266   0.7900    \nafibtime     0.765264  2.149562  2.303814  0.332   0.7398    \nafibtime2   -0.344476  0.708592  2.079599 -0.166   0.8684    \nstroke       0.799017  2.223354  0.368384  2.169   0.0301 *  \nstroketime   2.009340  7.458394  1.515493  1.326   0.1849    \nstroketime2 -1.804159  0.164613  1.354815 -1.332   0.1830    \nesvea        0.258459  1.294934  0.168305  1.536   0.1246    \nesveatime   -0.594780  0.551684  0.988417 -0.602   0.5473    \nesveatime2   0.425482  1.530328  1.004741  0.423   0.6719    \nsex          0.649916  1.915380  0.141829  4.582 4.60e-06 ***\nsextime     -0.270676  0.762864  0.801797 -0.338   0.7357    \nsextime2     0.234638  1.264450  0.807219  0.291   0.7713    \nage          0.079023  1.082229  0.010450  7.562 3.98e-14 ***\nagetime     -0.038900  0.961847  0.059268 -0.656   0.5116    \nagetime2     0.030511  1.030981  0.059668  0.511   0.6091    \nsbp          0.006306  1.006326  0.002699  2.336   0.0195 *  \nsbptime      0.001877  1.001879  0.015267  0.123   0.9021    \nsbptime2    -0.003898  0.996110  0.015442 -0.252   0.8007    \nstrtime      2.344512 10.428185  4.381905  0.535   0.5926    \nstrtime2    -1.523546  0.217938  4.422212 -0.345   0.7305    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n            exp(coef) exp(-coef) lower .95 upper .95\nafib           1.1466    0.87214 4.190e-01     3.138\nafibtime       2.1496    0.46521 2.351e-02   196.499\nafibtime2      0.7086    1.41125 1.203e-02    41.740\nstroke         2.2234    0.44977 1.080e+00     4.577\nstroketime     7.4584    0.13408 3.825e-01   145.424\nstroketime2    0.1646    6.07486 1.157e-02     2.343\nesvea          1.2949    0.77224 9.311e-01     1.801\nesveatime      0.5517    1.81263 7.950e-02     3.829\nesveatime2     1.5303    0.65345 2.136e-01    10.965\nsex            1.9154    0.52209 1.451e+00     2.529\nsextime        0.7629    1.31085 1.585e-01     3.672\nsextime2       1.2645    0.79086 2.599e-01     6.152\nage            1.0822    0.92402 1.060e+00     1.105\nagetime        0.9618    1.03967 8.564e-01     1.080\nagetime2       1.0310    0.96995 9.172e-01     1.159\nsbp            1.0063    0.99371 1.001e+00     1.012\nsbptime        1.0019    0.99812 9.723e-01     1.032\nsbptime2       0.9961    1.00391 9.664e-01     1.027\nstrtime       10.4282    0.09589 1.942e-03 55987.778\nstrtime2       0.2179    4.58847 3.751e-05  1266.270\n\nConcordance= 0.664  (se = 0.012 )\nLikelihood ratio test= 229.9  on 20 df,   p=<2e-16\nWald test            = 258  on 20 df,   p=<2e-16\nScore (logrank) test = 291.8  on 20 df,   p=<2e-16\n\n\n\n\n\n\nCode show/hide\n* Finally, we will fit a land-mark ‘super-model’ where both the coefficients and the baseline hazards vary smoothly among \n  land-marks. We choose m = 2 and g_l = f_l as suggested in the book.;\n\n* We thus add g_1 ('strtime') and  g_2 ('strtime2') to our data frame;\n\ndata cov573;\n    afib_ = 0; afibtime = 0; afibtime2 = 0;\n    stroke_ = 0; stroketime = 0; stroketime2 = 0;\n    esvea_ = 0; esveatime = 0; esveatime2 = 0;\n    sex_ = 0; sextime = 0; sextime2 = 0;\n    age_ = 0; agetime = 0; agetime2 = 0;\n    sbp_ = 0; sbptime = 0; sbptime2 = 0;\n    strtime=0; strtime2=0;\nrun;\n\n*  We once again fit the model using the 'phreg' procedure (but this time we must exclude the strata statement);\n\ntitle \"5.7.3\";\nproc phreg data=landmark;\n    model timedeath*death(0)= afib_ afibtime afibtime2\n                              stroke_ stroketime stroketime2\n                              esvea_ esveatime esveatime2\n                              sex_ sextime sextime2\n                              age_ agetime agetime2\n                              sbp_ sbptime sbptime2 \n                              strtime strtime2 / entry=entry;\n    afib_ = af; afibtime = af*(landmark - 3)/6; afibtime2 = af*((landmark-3)/6)**2;\n    stroke_ = str; stroketime = str*(landmark - 3)/6; stroketime2 = str*((landmark-3)/6)**2;\n    esvea_ = esvea; esveatime = esvea*(landmark - 3)/6; esveatime2 = esvea*((landmark-3)/6)**2;\n    sex_ =sex; sextime = sex*(landmark - 3)/6; sextime2 = sex*((landmark-3)/6)**2;\n    age_ = age; agetime = age*(landmark - 3)/6; agetime2 = age*((landmark-3)/6)**2;\n    sbp_ = sbp; sbptime = sbp*(landmark - 3)/6; sbptime2 = sbp*((landmark-3)/6)**2;\n    strtime=(landmark-3)/6; strtime2=strtime**2;\nrun;\n\n\n\n\n\n\n\n\nExercise 5.8\nConsider a competing risks model for the Copenhagen Holter study with states ‘0: Alive without AF or stroke’, ‘1: Alive with AF and no stroke’, ‘2: Dead or stroke’, see Figures 1.2 and 1.7.\nFit, using direct binomial regression, a model for being in state 1 at time 3 years including the covariates ESVEA, sex, age, and systolic blood pressure.\n\nRSAS-NA\n\n\nWe will fit a direct binomial model for the cumulative incidence function of AF at 3 years including covariates ESVEA, sex, age, and systolic blood pressure using the binreg function from the mets package.\nBased on our original data set we will create a data frame called data58 where the three observations with missing values of systolic blood pressure are removed and, add a variable called event for the competing risks (1 is AF, 2 is stroke or death and 0 is censoring from state 0) and replace the empty cells of timeaf with the values from timestrokeordeath.\n\n\nCode show/hide\n# Adding the variable 'event' and replacing empty cells of timeafib with timestrokeordeath\ndata58 <- chs_data %>% filter(!is.na(sbp))  %>% mutate(event = ifelse(afib == 1, 1, 2*strokeordeath),\n                                                       timeafib = ifelse(afib == 1, timeafib, timestrokeordeath))\n\n\nThe binreg function takes a formula argument where the left side of ‘~’ must be an Event object. The argument cause specifies the cause of interest (i.e. AF in this case), time specifies the time of interest and cens.code specifies the value of censoring.\n\n\nCode show/hide\n# Fitting a direct binomial model\ndirbin58 <- binreg(Event(timeafib, event) ~ esvea + sex + age + sbp, \n                  data = data58, cause = 1, time = 3, cens.code = 0)\nsummary(dirbin58)$coef\n\n\n                 Estimate    Std.Err         2.5%        97.5%      P-value\n(Intercept) -17.126036977 3.30288773 -23.59957798 -10.65249597 2.158170e-07\nesvea         1.923075789 0.88496814   0.18857011   3.65758146 2.977691e-02\nsex           1.452354530 1.10364006  -0.71074025   3.61544931 1.881849e-01\nage           0.139439962 0.06448804   0.01304572   0.26583420 3.059809e-02\nsbp           0.007478889 0.01263125  -0.01727790   0.03223568 5.537875e-01\n\n\nWe get the following model\n\\[-17.126 + 1.9231\\cdot Z_1 + 1.4524 \\cdot Z_2 + 0.1394 \\cdot Z_3 + 0.0075 \\cdot Z_4,\\]\nwhere \\(Z_1\\), \\(Z_2\\), \\(Z_3\\), and \\(Z_4\\) are the ESVEA, sex, age, and systolic blood pressure respectively.\n\n\nThere is currently no implementation of direct binomial regression in SAS.\n\n\n\n\n\nExercise 5.9\nConsider the Cox model for stroke-free survival in the Copenhagen Holter study including the covariates ESVEA, sex, age, and systolic blood pressure (Exercises 2.4 and 3.7).\n\n1.\nInvestigate, using cumulative Schoenfeld residuals, whether the effects of the covariates may be described as time-constant hazard ratios.\n\nRSAS\n\n\nWe will use cumulative Schoenfeld residuals to test whether the assumption of time-constant hazard ratios is reasonable for ESVEA, sex, age, and systolic blood pressure. This is done using the cox.aalen function from the timereg package.\nTo fit a Cox model using the cox.aalen function, all covariates must enter in the formula argument wrapped by prop().\nThe argument n.sim specifies the number of paths to be generated from the approximate asymptotic distribution of the goodness-of-fit process.\nFurthermore, we specify residuals = 1 to get the residuals and weigthed.test = 1 to get a variance weighted version of the process suitable for testing the assumption of a time-constant effects of the covariates.\n\n\nCode show/hide\n# Cox model for stroke-free survival including ESVEA, sex, age and systolic blood pressure\ncox591 <- cox.aalen(Surv(timestrokeordeath, strokeordeath) ~ prop(esvea) + prop(sex) + prop(age) + prop(sbp),\n          data = chs_data, n.sim = 1000, residuals = 1, weighted.test = 1)\nsummary(cox591)\n\n\nCox-Aalen Model \n\nTest for Aalen terms \nTest not computed, sim=0 \n\nProportional Cox terms :  \n              Coef.      SE Robust SE D2log(L)^-1    z    P-val lower2.5%\nprop(esvea) 0.31800 0.15200   0.16200     0.15300 1.97 4.91e-02  0.020100\nprop(sex)   0.57700 0.12400   0.12700     0.12700 4.54 5.72e-06  0.334000\nprop(age)   0.07670 0.00898   0.00950     0.00936 8.07 6.66e-16  0.059100\nprop(sbp)   0.00515 0.00231   0.00251     0.00244 2.05 4.00e-02  0.000622\n            upper97.5%\nprop(esvea)    0.61600\nprop(sex)      0.82000\nprop(age)      0.09430\nprop(sbp)      0.00968\nTest of Proportionality \n            sup|  hat U(t) | p-value H_0 \nprop(esvea)             3.02        0.046\nprop(sex)               1.51        0.850\nprop(age)               2.99        0.079\nprop(sbp)               1.82        0.606\n\n\nFrom the summary we note that the \\(p\\)-values are quite small and borderline significant for ESVEA and age while the \\(p\\)-values for sex and systolic blood pressure are far from significance.\nHowever, we will also make a visual examination of whether the assumption of time-constant hazard ratios seems reasonable. This is done by plotting the observed cumulative Schoenfeld residuals together with 50 paths generated from the approximate asymptotic distribution against time.\nThe 50 random paths generated from the approximated asymptotic distribution are stored as the argument sim.test.procProp while the observed cumulative Schoenfeld residuals are stored as test.procProp.\n\n\nCode show/hide\n# 50 random realizations of the goodness-of-fit process\nsim591 <- cox591$sim.test.procProp\n# Cumulative Schoenfeld residuals\nobs591 <- cox591$test.procProp\n# Time vector\ntime591 <- obs591[,1]\n\n\nThe values for ESVEA are stored in the second column of the obs591 object and first column in each of the lists in the sim591 object.\n\n\nCode show/hide\n# Cumulative Schoenfeld residuals (observed)\nobs_esvea591 <- data.frame(time = time591, \n                             res = obs591[,2])\n\n# Cumulative Schoenfeld residuals (simulated)\nsim_esvea591 <- data.frame(res = do.call(\"rbind\", sim591)[,1],\n                             time = rep(time591, times = 50), \n                             sim = rep(1:50, each = length(time591)))\n\n\n# Cumulative Schoenfeld residuals plotted against time\n(fig591_esvea <- ggplot(aes(x = time, y = res), data = obs_esvea591) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = sim_esvea591) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time\"))+\n  ylab(\"Standardized score process\"))\n\n\n\n\n\nThe effect of ESVEA does not seem to be time-constant, since the curve does not vary randomly around 0. This was also supported by the low \\(p\\)-value from the summary.\nWe repeat the procedure for sex. The values for sex are stored in the third column of the obs591 object and second column in each of the lists in the sim591 object.\n\n\nCode show/hide\n# Cumulative Schoenfeld residuals (observed)\nobs_sex591 <- data.frame(time = time591, \n                             res = obs591[,3])\n\n# Cumulative Schoenfeld residuals (simulated)\nsim_sex591 <- data.frame(res = do.call(\"rbind\", sim591)[,2],\n                             time = rep(time591, times = 50), \n                             sim = rep(1:50, each = length(time591)))\n\n# Cumulative Schoenfeld residuals plotted against time\n(fig591_sex <- ggplot(aes(x = time, y = res), data = obs_sex591) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = sim_sex591) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time\"))+\n  ylab(\"Standardized score process\"))\n\n\n\n\n\nThe assumption of a time-constant hazard ratio of sex seems to be reasonable since the Schoenfeld residuals vary randomly around 0. This was also supported by the high \\(p\\)-value found in the summary.\nWe repeat the procedure for age. The values for age are stored in the fourth column of the obs591 object and third column in each of the lists in the sim591 object.\n\n\nCode show/hide\n# Cumulative Schoenfeld residuals (observed)\nobs_age591 <- data.frame(time = time591, \n                             res = obs591[,4])\n\n# Cumulative Schoenfeld residuals (simulated)\nsim_age591 <- data.frame(res = do.call(\"rbind\", sim591)[,3],\n                             time = rep(time591, times = 50), \n                             sim = rep(1:50, each = length(time591)))\n\n\n# Cumulative Schoenfeld residuals plotted against time\n(fig591_age <- ggplot(aes(x = time, y = res), data = obs_age591) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = sim_age591) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time\"))+\n  ylab(\"Standardized score process\"))\n\n\n\n\n\nThe assumption of a time-constant hazard ratio of age may seem to be violated since the curve of the Schoenfeld residuals does not vary randomly around 0. The \\(p\\)-value from the summary is quite low as well.\nFinally, we repeat the procedure for systolic blood pressure. The values for systolic blood pressure are stored in the fifth column of the obs591 object and fourth column in each of the lists in the sim591 object.\n\n\nCode show/hide\n# Cumulative Schoenfeld residuals (observed)\nobs_sbp591 <- data.frame(time = time591, \n                             res = obs591[,5])\n\n# Cumulative Schoenfeld residuals (simulated)\nsim_sbp591 <- data.frame(res = do.call(\"rbind\", sim591)[,4],\n                             time = rep(time591, times = 50), \n                             sim = rep(1:50, each = length(time591)))\n\n\n# Cumulative Schoenfeld residuals plotted against time\n(fig591_sbp <- ggplot(aes(x = time, y = res), data = obs_sbp591) +\n  geom_step(aes(x = time, y = res, group = sim), \n            color = \"grey\", size = 0.8, data = sim_sbp591) +\n  geom_step(size = 1) +\n  xlab(expression(\"Time\"))+\n  ylab(\"Standardized score process\"))\n\n\n\n\n\nT he assumption of a time-constant hazard ratio of systolic blood pressure does seem reasonable, since the curve varies randomly around 0. This conclusion is also supported by the \\(p\\)-value found in the summary.\n\n\n\n\nCode show/hide\n* We will use cumulative Schoenfeld residuals to test whether the assumption of time-constant hazard ratios of ESVEA, sex, age, and systolic blood pressure is reasonable. This can be done by adding the 'assess' statement followed by 'ph'. \n\nFurthermore, '\\ resample' is added to generate 1000 paths from the approximate asymptotic distribution which is used to calculate a goodness-of-fit test.;\n  \n* For the assumption of time-constant hazard ratio to hold we expect the observed Schoenfeld residuals to vary randomely around 0 \n  and that the p-value is non-significant.;\n\ntitle \"5.9.1\";\nproc phreg data=chs_data;\n   model timestrokeordeath*strokeordeath(0)=esvea sex age sbp;\n   assess ph / resample;\nrun;\n\n* The assumption of time-constant hazard ratios of ESVEA and age may not be reasonable since the p-values are borderline significant\n  and the observed Schoenfeld residuals do not seem to vary randomly around 0.\n\n* In contrast, the effect of sex and systolic blood pressure does seem to fulfill the assumption of time-constant hazard ratios, since the curves of the observed Schoenfeld residuals vary randomely around 0 and the p-values are far from significant.;\n\n\n\n\n\n\n\n2.\nInvestigate, using cumulative martingale residuals, whether the effects of age and systolic blood pressure can be considered linear on the log(hazard) scale.\n\nRSAS\n\n\nTo test whether the assumption of linearity (on the log(hazard) scale) is reasonable for the effect of age and systolic blood pressure we will consider the cumulative martingale residuals.\nThis is done using the cox.aalen and cum.residuals functions from the timereg pacakge.\nOnce again, the covariates should be wrapped by prop() to obtain a Cox model and the argument residuals = 1 must be specified in the cox.aalen function to get the residuals.\nThen, to get the cumulative martingale residuals the output from the model fitted with cox.aalen is given to the cum.residuals function. The argument n.sim specifies the number of paths to be generated from the approximate asymptotic distribution of the goodness-of-fit process and the argument cum.resid = 1 specifies that we want residuals for each of the continuous covariates.\n\n\nCode show/hide\ncox592 <- cox.aalen(Surv(timestrokeordeath, strokeordeath) ~ prop(esvea) + prop(sex) + prop(age) + prop(sbp),\n                  data = chs_data, residuals = 1)\n\nres592 <- cum.residuals(cox592, chs_data, cum.resid=1, n.sim = 1000)\nsummary(res592)\n\n\nTest for cumulative MG-residuals \n\nGrouped cumulative residuals not computed, you must provide\nmodelmatrix to get these (see help) \n\nResidual versus covariates consistent with model \n\n          sup|  hat B(t) | p-value H_0: B(t)=0\nprop(age)            8.186               0.196\nprop(sbp)            6.671               0.789\n\n\nThe \\(p\\)-values given in the summary do not indicate violation of the assumption of linearity of age and systolic blood pressure on the log(hazard) scale.\nHowever, we will also check this assumption by plotting the cumulative martingale residuals together with 50 realizations generated from the approximated asymptotic distribution of the goodness-of-fit process against \\(z\\), where \\(z\\) is either age or systolic blood pressure.\nThe observed cumulative martingale residuals versus all continuous covariates of the model are stored as proc.cumz, while 50 random realizations of the goodness-of-fit process for all continuous covariates are stored as sim.test.proccumz.\n\n\nCode show/hide\n# 50 random realizations of the goodness-of-fit process\nsim592 <- res592$sim.test.proccumz\n# Cumulative martingale residuals\nobs592 <-  res592$proc.cumz\n\n\nThe values for age are stored in the first list of the obs592 and sim592 objects.\n\n\nCode show/hide\nobs_age592 <- data.frame(age = obs592[[1]][,1],\n                          res = obs592[[1]][,2])\n\nsim_age592 <- data.frame(age = rep((obs592[[1]][,1]), times = 50),\n                                     res = c(sim592[[1]]),\n                                     sim = rep(1:50, each = length((obs592[[1]][,1]))))\n\n(fig592_age <- ggplot(aes(x = age, y = res), data = obs_age592) +\n  geom_step(aes(x = age, y = res, group = sim), color = \"grey\", size = 0.8, data = sim_age592) +\n  geom_step(size = 1) +\n  xlab(expression(\"Age\"))+\n  ylab(\"Cumulative martingale residuals\"))\n\n\n\n\n\nThe assumption of linearity of the effect of age seems reasonable since the curve does seem to vary randomly around 0 which was also indicated by the \\(p\\)-value.\nWe repeat the procedure for systolic blood pressure. The values for systolic blood pressure are stored in the second list of the obs592 and sim592 objects.\n\n\nCode show/hide\nobs_sbp592 <- data.frame(sbp = obs592[[2]][,1],\n                         res = obs592[[2]][,2])\n\nsim_sbp592 <- data.frame(sbp = rep(obs592[[2]][,1], times = 50),\n                         res = c(sim592[[2]]),\n                         sim = rep(1:50, each = length(obs592[[2]][,1])))\n\n(fig592_sbp <- ggplot(aes(x = sbp, y = res), data = obs_sbp592) +\n  geom_step(aes(x = sbp, y = res, group = sim), color = \"grey\", size = 0.8, data = sim_sbp592) +\n  geom_step(size = 1) +\n  xlab(expression(\"Systolic blood pressure\"))+\n  ylab(\"Cumulative martingale residuals\"))\n\n\n\n\n\nThe assumption of linearity of the effect of systolic blood pressure seems reasonable, since the curve varies randomly around 0. This aligns with the conclusion based on the \\(p\\)-value.\n\n\n\n\nCode show/hide\n* To test whether the assumption of linearity (on the log(hazard) scale) is reasonable for the effect of age and systolic blood pressure we will consider the cumulative martingale residuals.;\n\n* This can be done by adding the 'assess' statement to the 'phreg' procedure followed by the argument 'var' which specifies the  covariates of interest. '\\ resample' is added to generate 1000 paths from the approximate asymptotic distribution which is used to calculate a goodness-of-fit test.;  \n\n* Once again, we expect non-significant p-values and curves that vary randomly around 0 for the assumption of linearity to hold.;\n\ntitle \"5.9.2\";\nproc phreg data=chs_data;\n   model timestrokeordeath*strokeordeath(0)=esvea sex age sbp;\n   assess var=(age sbp) /  resample;\nrun;\n\n* The assumption of lineraty seems to hold for both age and systolic blood pressure based on the result of both the goodness-of-fit test as well as the graphical assessment.;\n\n\n\n\n\n\n\n\nExercise 5.10\nConsider the data on recurrent episodes in affective disorder, Example 1.1.5. Fit a Mao-Lin regression model (5.31) for the mean of the composite end-point recurrent episode or death, including initial diagnosis as the only covariate and using severity weights equal to 1.\n\nRSAS\n\n\nLoad the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(mets)\n\n\n\n\nCode show/hide\naffective_data <- read.csv(\"data/affective.csv\")\n\n# Creating data corresponding to set up depicted in Figure 1.5\naff <- data.frame(affective_data %>% group_by(id) %>% \n                mutate(prev1 = lag(start, n = 1, default = 0),  # moves start one line down\n                       prev2 = lag(stop, n = 1, default = 0),   # moves stop one line down\n                       prev = ifelse(state == 1, prev2, prev1)) %>% # picks the displaced value of stop if hospitalized, otherwise the displaced value of start.\n                filter(state == 0 | status %in% c(2,3)))\n\nfitML <- recreg(Event(prev, stop, status) ~ factor(bip) + cluster(id),\n               data = aff, cause = c(1,2), cens.code = 3, death.code = 2)\nsummary(fitML)\n\n\n\n   n events\n 661    620\n\n 119 clusters\ncoeffients:\n              Estimate      S.E.   dU^-1/2 P-value\nfactor(bip)0 -0.559957  0.173508  0.090043  0.0012\n\nexp(coeffients):\n             Estimate    2.5%  97.5%\nfactor(bip)0  0.57123 0.40656 0.8026\n\n\nCode show/hide\n# PKA: but changed cens.code=3\n#angst<-read.table('angstGLML.txt',header=TRUE)\n#fitGLa <- recreg(Event(prev, stop, status) ~ factor(bip) + cluster(id), data = angst, cause = 1, cens.code = 3, death.code = 2)\n#summary(fitGLa)\n#fitMLa <- recreg(Event(prev, stop, status) ~ factor(bip) + cluster(id), data = angst, cause = c(1,2), cens.code = 3, death.code = 2)\n#summary(fitMLa)\n\n\n\n\n\n\nCode show/hide\nproc import out=affective_data\n    datafile='data/affective.csv' \n    dbms=csv replace;\n    getnames=yes;\nrun;\n\n* We make a data set correpsonding to the setting with cycles depicted in figure 1.5, i.e. the interval in hospital is \n  included in the time between events.;\n\ntitle '5.10';\ndata data510; \n    set affective_data;\n    by id;\n    retain prev;\n    if first.id then prev=0; \n    output; \n    if state=1 then prev=start; if state=0 then prev=stop;\nrun;\ndata data510;\n    set data510;\n    if state = 0 or status = 2 or status = 3;\n* Thus the entry and exit time are now 'prev' and 'stop';\nrun;\n\n* Death are defined as part of composite and add an extra record with (prev,stop) length 0.5 for\n  death events as to be able to trick phreq to estimate Mao-Lin model:\n  Mi and deaths count as events and death also as competing risk;\ndata angstML;\n    set data510;\n    if status ne 2 then output;\n    if status = 2 then do;\n        status=1; output; \n        prev=stop; stop=stop+0.5; status=2; output;\n    end; \nrun;\n* Mao-Lin model;\nproc phreg data=angstML;\n    class bip(ref='0');\n    model stop*status(0)= bip / entry=prev eventcode=1 rl;\nrun;"
  },
  {
    "objectID": "Ch6.html#pbc3-trial-in-liver-cirrhosis",
    "href": "Ch6.html#pbc3-trial-in-liver-cirrhosis",
    "title": "6  Pseudo-values",
    "section": "PBC3 trial in liver cirrhosis",
    "text": "PBC3 trial in liver cirrhosis\n\nRead data\n\n\nCode show/hide\npbc3 <- read.csv(\"data/pbc3.csv\")\npbc3$fail <- as.numeric(with(pbc3, status > 0))\npbc3$log2bili <- with(pbc3, log2(bili))\n\n\n\n\n\n\n\n\n\n\n\nFigure 6.1\n\n\nCode show/hide\n# General plotting style\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\", \n        text = element_text(size = 20), \n        axis.text.x = element_text(size = 20), \n        axis.text.y = element_text(size = 20)) \n\n# Calculate pseudo-observations of the survival function for subjects\n# The subjects with ptno=415 and ptno=458 are selected\nlibrary(pseudo)\npseudo_allt <- pseudosurv(pbc3$days, pbc3$fail)\n\n# Re-arrange the data into a long data set\nb <- NULL\nfor(it in 1:length(pseudo_allt$time)){\n  b <- rbind(b,cbind(pbc3,\n                     pseudo = pseudo_allt$pseudo[,it],\n                     tpseudo = pseudo_allt$time[it],\n                     id = 1:nrow(pbc3)))\n}\nb <- b[order(b$id),]\npseudo_alltid <- b\n\n# Subset the two subjects \nsubdat <- subset(pseudo_alltid, id %in% c(\"305\", \"325\"))\n\n# Collect data for plot\npseudodata <- data.frame(tpseudo = subdat$tpseudo / 365.25, \n                         pseudo = subdat$pseudo, \n                         id = as.factor(subdat$id))\n\nfig6.1 <- ggplot(aes(x = tpseudo, y = pseudo, linetype = id), \n                 data = pseudodata) + \n  geom_hline(yintercept = c(0, 1), color = \"darkgrey\", size = 1) + \n  geom_step(linewidth = 1) + \n  scale_linetype_manual(\"Patient number\", values = c(\"dashed\", \"dotted\")) + \n  xlab(\"Time since randomization (years)\") + \n  ylab(\"Pseudo-values\") + \n  scale_x_continuous(expand = expansion(mult = c(0.02, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05))) +\n  theme_general +\n  theme(legend.position = \"none\")\n\nfig6.1\n\n\n\n\n\n\n\nFigure 6.2\n\n(a)\n\n\nCode show/hide\ntheme_general_1 <- theme_bw() +\n  theme(legend.position = \"none\", \n        text = element_text(size = 26), \n        axis.text.x = element_text(size = 26), \n        axis.text.y = element_text(size = 26)) \n\n# Select the pseudo-observations at times \ntimes <- c(366, 743, 1105)\n\n# At 1 year\npseudo_t1 <- subset(pseudo_alltid, tpseudo == times[1])\n\n# Collect data for plot\npseudodata <- data.frame(tpseudo = pseudo_t1$tpseudo / 365.25, \n                         days = pseudo_t1$days,\n                         pseudo = pseudo_t1$pseudo, \n                         failtype = as.factor(pseudo_t1$fail))\n\nfig6.2 <- ggplot(aes(x = days  / 365.25, y = pseudo, shape = failtype), \n                 data = pseudodata) + \n  geom_point(size = 6) + \n  scale_shape_manual(\"Fail\", values = c(4, 1)) + \n  xlab(expression(\"X\"[i]*\" (years)\")) + \n  ylab(\"Pseudo-values\") + \n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(-0.9, 1.1)) +\n  theme_general_1\n\nfig6.2\n\n\n\n\n\n\n\n(b)\n\n\nCode show/hide\n# At 2 years\npseudo_t2 <- subset(pseudo_alltid, tpseudo == times[2])\n\n# Collect data for plot\npseudodata <- data.frame(tpseudo = pseudo_t2$tpseudo / 365.25, \n                         days = pseudo_t2$days,\n                         pseudo = pseudo_t2$pseudo, \n                         failtype = as.factor(pseudo_t2$fail))\n\nfig6.2b <- ggplot(aes(x = days / 365.25, y = pseudo, shape = failtype), \n                  data = pseudodata) + \n  geom_point(size = 6) + \n  scale_shape_manual(\"Fail\", values = c(4, 1)) + \n  xlab(expression(\"X\"[i]*\" (years)\")) +  \n  ylab(\"Pseudo-values\") + \n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(-0.9, 1.1)) +\n  theme_general_1\n\nfig6.2b\n\n\n\n\n\n\n\n(c)\n\n\nCode show/hide\n# At 3 years\npseudo_t3 <- subset(pseudo_alltid, tpseudo == times[3])\n\n# Collect data for plot\npseudodata <- data.frame(tpseudo = pseudo_t3$tpseudo / 365.25, \n                         days = pseudo_t3$days,\n                         pseudo = pseudo_t3$pseudo, \n                         failtype = as.factor(pseudo_t3$fail))\n\nfig6.2c <- ggplot(aes(x = days/365.25, y = pseudo, shape = failtype), \n                  data = pseudodata) + \n  geom_point(size = 6) + \n  scale_shape_manual(\"Fail\", values = c(4, 1)) + \n  xlab(expression(\"X\"[i]*\" (years)\")) + \n  ylab(\"Pseudo-values\") + \n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     breaks = seq(0, 6, 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(-0.9, 1.1)) +\n  theme_general_1 +\n  theme(legend.position=\"none\")\n\nfig6.2c\n\n\n\n\n\n\n\n\nFigure 6.3\n\nLeft\n\n\nCode show/hide\n# Collect data for plot\npseudodata <- data.frame(tpseudo = pseudo_t2$tpseudo / 365.25, \n                         days = pseudo_t2$days,\n                         pseudo = pseudo_t2$pseudo, \n                         log2bili =  pseudo_t2$log2bili, \n                         bili = pseudo_t2$bili,\n                         alb = pseudo_t2$alb,\n                         tment = pseudo_t2$tment,\n                         id = pseudo_t2$id,\n                         failtype = as.factor(pseudo_t2$fail))\n\nbili_loess <- loess(pseudo ~ bili, data = pseudodata, span = 0.8, degree = 1)\npseudodata$loesspred <- predict(bili_loess)\n\npseudodata$t_loesspred <- with(\n  pseudodata, ifelse(loesspred > 0 , log(-log(loesspred)), NA)\n  )\n\nfig6.3left <- ggplot(aes(x = bili, y = pseudo), data = pseudodata) + \n  geom_point(size = 4, shape = 4) + \n  geom_line(aes(x = bili, y = loesspred), size = 1) +\n  xlab(\"Bilirubin\") +  \n  ylab(\"Pseudo-values\") + \n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     breaks = seq(-0.4, 1.2, by = 0.2), \n                     limits = c(-0.4, 1.2)) +\n  theme_general\n\nfig6.3left\n\n\n\n\n\n\n\nRight\n\n\nCode show/hide\nfig6.3right <- ggplot(aes(x = bili, y = t_loesspred), data = pseudodata) + \n  geom_line(size = 1) + \n  xlab(\"Bilirubin\") +  \n  ylab(\"log(-log(predicted pseudo-values))\") + \n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05))) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     breaks = seq(-5, 2, by = 1), \n                     limits = c(-5, 2)) +\n  theme_general\n\nfig6.3right\n\n\n\n\n\n\n\n\nFigure 6.4\n\nLeft\n\n\nCode show/hide\n# Loess for log2 bili\nlog2bili_loess <- loess(pseudo ~ log2bili, data = pseudodata, span = 0.8, degree = 1)\npseudodata$log2bili_loesspred <- predict(log2bili_loess)\n\npseudodata$t_log2bili_loesspred <- with(pseudodata,\n                               ifelse(log2bili_loesspred > 0 , log(-log(log2bili_loesspred)), NA))\n\nfig6.4left <- ggplot(aes(x = log2bili, y = pseudo), data = pseudodata) +\n  geom_point(size = 4, shape = 4) +\n  geom_line(aes(x = log2bili, y = log2bili_loesspred), size = 1) +\n  xlab(expression(\"log\" [2] * \"(bilirubin)\")) +\n  ylab(\"Pseudo-values\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), limits = c(1, 9),\n                     breaks = seq(1, 9, by = 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), breaks = seq(-0.4, 1.2, by = 0.2),\n                     limits = c(-0.4, 1.2)) +\n  theme_general\n\nfig6.4left\n\n\n\n\n\n\n\nRight\n\n\nCode show/hide\nfig6.4right <- ggplot(aes(x = log2bili, y = t_log2bili_loesspred), data = pseudodata) +\n  geom_line(size = 1) +\n  xlab(expression(\"log\" [2] * \"(bilirubin)\")) +\n  ylab(\"log(-log(predicted pseudo-values))\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), limits = c(1, 9),\n                     breaks = seq(1, 9, by = 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), breaks = seq(-5, 2, by = 1),\n                     limits = c(-5, 2)) +\n  theme_general\n\nfig6.4right\n\n\n\n\n\n\n\n\nTable 6.1\nTODO: SDs for the three time points model are not as in table in Book\n\n\nCode show/hide\nposumm<-function(pofit,d=6){ \n  round(cbind(\n    Est = pofit$beta, \n    SD = sqrt(diag(pofit$vbeta)), \n    lo.ci = pofit$beta-1.96*sqrt(diag(pofit$vbeta)), \n    up.ci = pofit$beta+1.96*sqrt(diag(pofit$vbeta)), \n    Wald = (pofit$beta/sqrt(diag(pofit$vbeta)))^2, \n    PVal = 2-2*pnorm(abs(pofit$beta/sqrt(diag(pofit$vbeta))))),d) \n}\n\nposummExp<-function(pofit,d=6){\n  round(cbind(\n    est = pofit$beta, \n    SD = sqrt(diag(pofit$vbeta)), \n    exp.est = exp(pofit$beta), \n    exp.lo.ci = exp(pofit$beta-1.96*sqrt(diag(pofit$vbeta))), \n    exp.up.ci = exp(pofit$beta+1.96*sqrt(diag(pofit$vbeta))), \n    PVal = 2-2*pnorm(abs(pofit$beta/sqrt(diag(pofit$vbeta))))),d) \n}\n\n\n# At time year 2\nfit1 <- geese(formula = I(1 - pseudo) ~ tment +alb + log2bili,\n              data = subset(pseudodata, !is.na(alb)),\n              id = id,\n              mean.link = \"cloglog\")\nposummExp(fit1)\n\n\n                  est       SD  exp.est exp.lo.ci exp.up.ci     PVal\n(Intercept) -2.116642 1.326984 0.120435  0.008937  1.622951 0.110695\ntment       -0.705053 0.369341 0.494082  0.239557  1.019035 0.056269\nalb         -0.105069 0.034169 0.900263  0.841946  0.962618 0.002105\nlog2bili     0.835723 0.140429 2.306480  1.751517  3.037282 0.000000\n\n\nCode show/hide\n# At time year c(1, 2, 3)\n# Select the pseudo-observations at times\ntimes <- c(366, 743, 1105)\npseudo_t1 <- subset(pseudo_alltid, tpseudo == times[1])\npseudo_t2 <- subset(pseudo_alltid, tpseudo == times[2])\npseudo_t3 <- subset(pseudo_alltid, tpseudo == times[3])\n\npseudo_t <- rbind(pseudo_t1, pseudo_t2, pseudo_t3)\n\npseudodata_t <- data.frame(tpseudo = pseudo_t$tpseudo / 365.25,\n                         days = pseudo_t$days,\n                         pseudo = pseudo_t$pseudo,\n                         log2bili =  pseudo_t$log2bili,\n                         bili = pseudo_t$bili,\n                         alb = pseudo_t$alb,\n                         tment = pseudo_t$tment,\n                         id = pseudo_t$id,\n                         failtype = as.factor(pseudo_t$fail))\n\n# At time year c(1, 2, 3)\nfit2 <- geese(formula = I(1 - pseudo) ~ tment + alb + log2bili + as.factor(tpseudo) -1,\n              data = subset(pseudodata_t, !is.na(alb)),\n              id = id,\n              mean.link = \"cloglog\",\n              corstr=\"independence\")\nposummExp(fit2)\n\n\n                                         est       SD  exp.est exp.lo.ci\ntment                              -0.598536 0.213046 0.549616  0.362002\nalb                                -0.093907 0.019069 0.910367  0.876970\nlog2bili                            0.684093 0.071818 1.981972  1.721729\nas.factor(tpseudo)1.00205338809035 -2.474620 0.829782 0.084195  0.016556\nas.factor(tpseudo)2.03422313483915 -1.554010 0.810703 0.211399  0.043154\nas.factor(tpseudo)3.02532511978097 -1.123233 0.813730 0.325227  0.065997\n                                   exp.up.ci     PVal\ntment                               0.834464 0.004963\nalb                                 0.945036 0.000001\nlog2bili                            2.281552 0.000000\nas.factor(tpseudo)1.00205338809035  0.428165 0.002861\nas.factor(tpseudo)2.03422313483915  1.035587 0.055255\nas.factor(tpseudo)3.02532511978097  1.602682 0.167479\n\n\n\n\nFigure 6.5\n\n\nCode show/hide\n# At time year c(1, 2, 3) \nfit2 <- geese(formula = I(1 - pseudo) ~ as.factor(tpseudo) + log2bili + alb + tment - 1, \n              data = subset(pseudodata_t, !is.na(alb)), \n              id = id, \n              mean.link = \"cloglog\",\n              variance = \"gaussian\",\n              scale.value = 0, \n              scale.fix = 1)\npseudodata_t$pred <- rep(NA, nrow(pseudodata_t))\n\n# At time 1\npseudodata_t[pseudodata_t$tpseudo == times[1] / 365.25,]$pred <- \n  with(pseudodata_t[pseudodata_t$tpseudo == times[1] / 365.25,],\n        fit2$beta[1] + fit2$beta[4]*log2bili + fit2$beta[5]*alb + fit2$beta[6]*tment)\n\n# At time 2\npseudodata_t[pseudodata_t$tpseudo == times[2] / 365.25,]$pred <- \n  with(pseudodata_t[pseudodata_t$tpseudo == times[2] / 365.25,],\n       fit2$beta[2] + fit2$beta[4]*log2bili + fit2$beta[5]*alb + fit2$beta[6]*tment)\n\n# At time 3\npseudodata_t[pseudodata_t$tpseudo == times[3] / 365.25,]$pred <- \n  with(pseudodata_t[pseudodata_t$tpseudo == times[3] / 365.25,],\n       fit2$beta[3] + fit2$beta[4]*log2bili + fit2$beta[5]*alb + fit2$beta[6]*tment)\n\n# Transform back\npseudodata_t$res <- with(pseudodata_t, pseudo - exp(-exp(pred)))\npseudodata_t$time <- as.factor(pseudodata_t$tpseudo * 365.25)\n\n# Make loess smooth per time\nlog2bili_res_loess_1 <- loess(res ~ log2bili, \n                              data = subset(pseudodata_t, time == 366), span = 0.7, degree = 1)\nlog2bili_res_loess_2 <- loess(res ~ log2bili, \n                              data = subset(pseudodata_t, time == 743), span = 0.7, degree = 1)\nlog2bili_res_loess_3 <- loess(res ~ log2bili, \n                              data = subset(pseudodata_t, time == 1105), span = 0.7, degree = 1)\n\nlog2bili_res_pred_1 <- predict(log2bili_res_loess_1, newdata = subset(pseudodata_t, time == 366))\nlog2bili_res_pred_2 <- predict(log2bili_res_loess_2, newdata = subset(pseudodata_t, time == 743))\nlog2bili_res_pred_3 <- predict(log2bili_res_loess_3, newdata = subset(pseudodata_t, time == 1105))\n\npseudodata_t$log2bili_res_pred <- c(log2bili_res_pred_1, log2bili_res_pred_2, log2bili_res_pred_3)\n\nfig6.5 <- ggplot(aes(x = log2bili, y = res, shape = time), data = pseudodata_t) + \n  geom_line(aes(x = log2bili, y = log2bili_res_pred , linetype = time), size = 1) +\n  geom_point(size = 3) + \n  scale_shape_manual(\"Year\", values = c(4, 2, 0), labels = c(\"1\", \"2\", \"3\")) +\n  scale_linetype_manual(\"Year\", values = c(\"dashed\", \"solid\", \"dotted\"), labels = c(\"1\", \"2\", \"3\")) +\n  xlab(expression(\"log\" [2] * \"(bilirubin)\")) +  \n  ylab(\"Pseudo-residuals\") + \n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), limits = c(1, 9), \n                     breaks = seq(1, 9, by = 1)) + \n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), breaks = seq(-2, 1, by = 1), \n                     limits = c(-2, 1)) +\n  theme_general + \n  theme(legend.box = \"vertical\",\n        text = element_text(size=20), \n        legend.key.size = unit(1.5, 'cm'),\n        legend.text = element_text(size = 20))\n\n\nfig6.5\n\n\n\n\n\n\n\nTable 6.2\n\n\nCode show/hide\n# At time year c(1, 2, 3) using log-link instead\nfit2 <- geese(formula = pseudo ~ as.factor(tpseudo) + bili + alb + tment - 1,\n              data = subset(pseudodata_t, !is.na(alb)),\n              id = id,\n              mean.link = \"log\",\n              variance = \"gaussian\",\n              scale.value = 0,\n              scale.fix = 1, maxit = 50)\nsummary(fit2)\n\n\n\nCall:\ngeese(formula = pseudo ~ as.factor(tpseudo) + bili + alb + tment - \n    1, id = id, data = subset(pseudodata_t, !is.na(alb)), mean.link = \"log\", \n    variance = \"gaussian\", scale.fix = 1, scale.value = 0, maxit = 50)\n\nMean Model:\n Mean Link:                 log \n Variance to Mean Relation: gaussian \n\n Coefficients:\n                                       estimate       san.se      wald\nas.factor(tpseudo)1.00205338809035 -0.340268943 0.1038790249 10.729733\nas.factor(tpseudo)2.03422313483915 -0.412025685 0.1063019966 15.023314\nas.factor(tpseudo)3.02532511978097 -0.507547919 0.1089067608 21.719230\nbili                               -0.004191576 0.0005629232 55.444219\nalb                                 0.009689574 0.0023542035 16.940310\ntment                               0.048389674 0.0227323690  4.531229\n                                              p\nas.factor(tpseudo)1.00205338809035 1.054277e-03\nas.factor(tpseudo)2.03422313483915 1.061912e-04\nas.factor(tpseudo)3.02532511978097 3.156116e-06\nbili                               9.614531e-14\nalb                                3.857371e-05\ntment                              3.328171e-02\n\nScale is fixed.\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   1029   Maximum cluster size: 1 \n\n\nCode show/hide\n## - log scale used as link in Table 6.2 (add \"-\" in front of all estimates)\n# No default \"-log(x)\" link function in R\n\n\n\n\nFigure 6.6\n\nLeft\n\n\nCode show/hide\n# Create Figure 6.6 (a) - done earlier\nfig6.6left <- fig6.3left\nfig6.6left\n\n\n\n\n\n\n\nRight\n\n\nCode show/hide\n# Same as earlier:\nbili_loess <- loess(pseudo ~ bili, data = pseudodata, span = 0.8, degree = 1)\npseudodata$loesspred <- predict(bili_loess)\n\n# Use log-trans instead of cloglog\npseudodata$log_loesspred <- with(pseudodata,\n                               ifelse(loesspred > 0 , -log(loesspred), NA))\n\nfig6.6right <- ggplot(aes(x = bili, y = log_loesspred), data = pseudodata) +\n  geom_line(size = 1) +\n  xlab(\"Bilirubin\") +\n  ylab(\"-log(predicted pseudo-values)\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05))) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), breaks = seq(-1, 3, by = 1),\n                     limits = c(-1, 3)) +\n  theme_general\n\nfig6.6right\n\n\n\n\n\n\n\n\nFigure 6.7\n\n\nCode show/hide\n# Use regression estimates from fit2\n\npseudodata_t$pred <- rep(NA, nrow(pseudodata_t))\n\n# At time 1\npseudodata_t[pseudodata_t$tpseudo == times[1] / 365.25,]$pred <-\n  with(pseudodata_t[pseudodata_t$tpseudo == times[1] / 365.25,],\n       fit2$beta[1] + fit2$beta[4]*bili + fit2$beta[5]*alb + fit2$beta[6]*tment)\n\n# At time 2\npseudodata_t[pseudodata_t$tpseudo == times[2] / 365.25,]$pred <-\n  with(pseudodata_t[pseudodata_t$tpseudo == times[2] / 365.25,],\n       fit2$beta[2] + fit2$beta[4]*bili + fit2$beta[5]*alb + fit2$beta[6]*tment)\n\n# At time 3\npseudodata_t[pseudodata_t$tpseudo == times[3] / 365.25,]$pred <-\n  with(pseudodata_t[pseudodata_t$tpseudo == times[3] / 365.25,],\n       fit2$beta[3] + fit2$beta[4]*bili + fit2$beta[5]*alb + fit2$beta[6]*tment)\n\n# Transform back\npseudodata_t$res <- with(pseudodata_t, pseudo - exp(pred))\npseudodata_t$time <- as.factor(pseudodata_t$tpseudo * 365.25)\n\n# Make loess smooth per time\nbili_res_loess_1 <- loess(res ~ bili,\n                          data = subset(pseudodata_t, time == 366), \n                          span = 0.7, degree = 1)\nbili_res_loess_2 <- loess(res ~ bili,\n                          data = subset(pseudodata_t, time == 743), \n                          span = 0.7, degree = 1)\nbili_res_loess_3 <- loess(res ~ bili,\n                          data = subset(pseudodata_t, time == 1105), \n                          span = 0.7, degree = 1)\n\nbili_res_pred_1 <- predict(bili_res_loess_1, \n                           newdata = subset(pseudodata_t, time == 366))\nbili_res_pred_2 <- predict(bili_res_loess_2, \n                           newdata = subset(pseudodata_t, time == 743))\nbili_res_pred_3 <- predict(bili_res_loess_3, \n                           newdata = subset(pseudodata_t, time == 1105))\n\npseudodata_t$bili_res_pred <- c(bili_res_pred_1, \n                                bili_res_pred_2, \n                                bili_res_pred_3)\n\n# Create Figure\nfig6.7 <- ggplot(aes(x = bili, y = res, shape = time), data = pseudodata_t) +\n  geom_line(aes(x = bili, y = bili_res_pred , linetype = time), size = 1) +\n  geom_point(size = 3) +\n  scale_shape_manual(\"Year\", values = c(4, 2, 0), \n                     labels = c(\"1\", \"2\", \"3\")) +\n  scale_linetype_manual(\"Year\", \n                        values = c(\"dashed\", \"solid\", \"dotted\"), \n                        labels = c(\"1\", \"2\", \"3\")) +\n  xlab(expression(\"Bilirubin\")) +\n  ylab(\"Pseudo-residuals\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     limits = c(0, 500),\n                     breaks = seq(0, 500, by = 100)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), \n                     breaks = seq(-2, 1, by = 1),\n                     limits = c(-2, 1)) +\n  theme_general +\n  theme(legend.box = \"vertical\",\n        text = element_text(size=20),\n        legend.key.size = unit(2, 'cm'),\n        legend.text = element_text(size = 20))\n\nfig6.7\n\n\n\n\n\n\n\nTable 6.3\n\n\nCode show/hide\n# Calculate pseudo-observations of the restricted mean for subjects\npseudo_allt <- pseudomean(pbc3$days / 365.25, pbc3$fail, tmax = 3)\n# Re-arrange the data into a long data set\na <- cbind(pbc3, pseudo = pseudo_allt)\noutmean3 <- a\n# Fit model\nfit_resm <- geese(pseudo ~ tment  + alb+ log2bili, id = id,\n                  data = subset(outmean3, !is.na(alb)),\n                  mean.link = \"identity\", corstr = \"independence\",\n                  scale.fix = FALSE,\n                  family = \"gaussian\")\nposumm(fit_resm)\n\n\n                  Est       SD     lo.ci     up.ci      Wald     PVal\n(Intercept)  2.825598 0.346121  2.147201  3.503995 66.644608 0.000000\ntment        0.147813 0.072936  0.004858  0.290769  4.107123 0.042703\nalb          0.022512 0.006811  0.009162  0.035862 10.924256 0.000949\nlog2bili    -0.243093 0.031982 -0.305778 -0.180408 57.773091 0.000000\n\n\n\n\nFigure 6.8\n\n\nCode show/hide\n# Collect data for plot\npseudodata <- data.frame(days = outmean3$days,\n                         pseudo = outmean3$pseudo,\n                         failtype = as.factor(outmean3$fail))\n\nfig6.8 <- ggplot(aes(x = days / 365.25, y = pseudo, shape = failtype), data = pseudodata) +\n  geom_point(size = 6) +\n  scale_shape_manual(\"Fail\", values = c(4, 1)) +\n  xlab(expression(\"X\"[i]*\" (years)\")) +\n  ylab(\"Pseudo-values\") +\n  scale_x_continuous(expand = expansion(mult = c(0.05, 0.05)), limits = c(0, 6),\n                     breaks = seq(0, 6, by = 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.05, 0.05)), limits = c(0, 4)) +\n  theme_general +\n  theme(legend.position=\"none\")\n\nfig6.8\n\n\n\n\n\n\n\nFigure 6.9\n\n\nCode show/hide\n# Loess for log2 bili\nlog2bili_loess <- loess(pseudo ~ log2bili, data = outmean3, span = 0.8, degree = 1)\noutmean3$log2bili_loesspred <- predict(log2bili_loess)\n\n#outmean3$t_log2bili_loesspred <- with(outmean3,\n#                                        ifelse(log2bili_loesspred > 0 ,\n#                                               log(log2bili_loesspred/(1-log2bili_loesspred)), NA))\n\nfig6.9 <- ggplot(aes(x = log2bili, y = pseudo), data = outmean3) +\n  geom_point(size = 6, shape = 4) +\n  geom_line(aes(x = log2bili, y = log2bili_loesspred), size = 1) +\n  xlab(expression(\"log\" [2] * \"(bilirubin)\")) +\n  ylab(\"Pseudo-values\") +\n  scale_x_continuous(expand = expansion(mult = c(0.01, 0.05)), limits = c(1, 9),\n                     breaks = seq(1, 9, by = 1)) +\n  scale_y_continuous(expand = expansion(mult = c(0.01, 0.05)), breaks = seq(0, 4, by = 1),\n                     limits = c(0, 4)) +\n  theme_general\n\nfig6.9\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable 6.6\n\n\nCode show/hide\n# Lost years\npseudolost <- pseudoyl(time = pbc3$days / 365.25,\n                       event = as.integer(pbc3$status),\n                       tmax = 3)\n\na1 <- cbind(pbc3,pseudo = pseudolost$pseudo[[1]],id=1:nrow(pbc3))\n\na2 <- cbind(pbc3,pseudo = pseudolost$pseudo[[2]],id=1:nrow(pbc3))\n\nsummary(fityl1 <- geese(pseudo ~ tment,\n                        data = a1, id = id, jack = TRUE, family = gaussian,\n                        corstr = \"independence\", scale.fix = FALSE))\n\n\n\nCall:\ngeese(formula = pseudo ~ tment, id = id, data = a1, family = gaussian, \n    scale.fix = FALSE, corstr = \"independence\", jack = TRUE)\n\nMean Model:\n Mean Link:                 identity \n Variance to Mean Relation: gaussian \n\n Coefficients:\n               estimate     san.se     ajs.se      wald            p\n(Intercept)  0.14304562 0.04121590 0.04127696 12.045356 0.0005192156\ntment       -0.05638594 0.05102947 0.05110332  1.220955 0.2691733775\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n             estimate     san.se    ajs.se     wald            p\n(Intercept) 0.2260261 0.05100506 0.0515204 19.63771 9.360351e-06\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   349   Maximum cluster size: 1 \n\n\nCode show/hide\nsummary(fityl2 <- geese(pseudo ~ tment,\n                        data = a2, id = id, jack = TRUE, family = gaussian,\n                        corstr = \"independence\", scale.fix = FALSE))\n\n\n\nCall:\ngeese(formula = pseudo ~ tment, id = id, data = a2, family = gaussian, \n    scale.fix = FALSE, corstr = \"independence\", jack = TRUE)\n\nMean Model:\n Mean Link:                 identity \n Variance to Mean Relation: gaussian \n\n Coefficients:\n               estimate     san.se     ajs.se        wald            p\n(Intercept)  0.25153053 0.05315608 0.05323484 22.39110068 2.224022e-06\ntment       -0.01520994 0.07291925 0.07302390  0.04350814 8.347714e-01\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n             estimate    san.se     ajs.se    wald            p\n(Intercept) 0.4634606 0.0697068 0.07040943 44.2054 2.956646e-11\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   349   Maximum cluster size: 1 \n\n\nCode show/hide\nsummary(fityl1 <- geese(pseudo ~ tment + alb + log2(bili),\n                        data = subset(a1,!is.na(alb)), id = id, jack = TRUE,\n                        family = gaussian,\n                        corstr = \"independence\", scale.fix = FALSE))\n\n\n\nCall:\ngeese(formula = pseudo ~ tment + alb + log2(bili), id = id, data = subset(a1, \n    !is.na(alb)), family = gaussian, scale.fix = FALSE, corstr = \"independence\", \n    jack = TRUE)\n\nMean Model:\n Mean Link:                 identity \n Variance to Mean Relation: gaussian \n\n Coefficients:\n                 estimate      san.se      ajs.se        wald            p\n(Intercept) -0.2925955874 0.214509773 0.219305817  1.86055015 0.1725613190\ntment       -0.0629704571 0.045824402 0.046173406  1.88833949 0.1693893294\nalb         -0.0007479074 0.004088095 0.004166756  0.03346984 0.8548390903\nlog2(bili)   0.1001512112 0.026281542 0.026811333 14.52147461 0.0001385709\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n             estimate     san.se     ajs.se     wald            p\n(Intercept) 0.1877829 0.03991555 0.04086088 22.13236 2.544835e-06\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   343   Maximum cluster size: 1 \n\n\nCode show/hide\nsummary(fityl2 <- geese(pseudo ~ tment + alb + log2(bili),\n                        data = subset(a2,!is.na(alb)), id = id, jack = TRUE,\n                        family = gaussian,\n                        corstr = \"independence\", scale.fix = FALSE))\n\n\n\nCall:\ngeese(formula = pseudo ~ tment + alb + log2(bili), id = id, data = subset(a2, \n    !is.na(alb)), family = gaussian, scale.fix = FALSE, corstr = \"independence\", \n    jack = TRUE)\n\nMean Model:\n Mean Link:                 identity \n Variance to Mean Relation: gaussian \n\n Coefficients:\n               estimate      san.se      ajs.se     wald            p\n(Intercept)  0.46699730 0.323932111 0.328438874  2.07836 1.494006e-01\ntment       -0.08484277 0.068542273 0.069039590  1.53219 2.157840e-01\nalb         -0.02176434 0.006549422 0.006642189 11.04295 8.902503e-04\nlog2(bili)   0.14294187 0.032316673 0.032763783 19.56436 9.726692e-06\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n             estimate     san.se     ajs.se     wald            p\n(Intercept) 0.3914462 0.05096053 0.05211022 59.00331 1.576517e-14\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   343   Maximum cluster size: 1 \n\n\n\n\nFigure 6.11\n\nleft\n\n\nCode show/hide\n# comp. end point t=2 smlg med IJ\nlibrary(pseudo)\nlibrary(survival)\npbc3$nystatus<-ifelse(pbc3$status > 0, 1, 0)\n\npseudo <- pseudosurv(time = pbc3$days,\n                     event = pbc3$nystatus,\n                     tmax=2 * 365.25)\nfit <- survfit(Surv(days, status > 0) ~ 1, data = pbc3)\n\nIJpseudo <- pseudo(fit, times = 2 * 365.25, addNA = TRUE, data.frame = TRUE, minus1 = TRUE)\n\npdata <- data.frame(IJpseudo = IJpseudo$pseudo,\n                    pseudo = pseudo$pseudo,\n                    diff = IJpseudo$pseudo - pseudo$pseudo)\n\nfig6.11left <- ggplot(aes(x = pseudo, y = IJpseudo), data = pdata) +\n  geom_point(size = 4, shape = 1) +\n  geom_line(size = 1) +\n  ylab(\"IJ pseudo-value\") +\n  xlab(\"Pseudo-value\") +\n  scale_x_continuous(limits = c(-0.2, 1),\n                     breaks = seq(-0.2, 1, by = 0.2)) +\n  scale_y_continuous(limits = c(-0.2, 1),\n                     breaks = seq(-0.2, 1, by = 0.2)) +\n  theme_general\n\nfig6.11left\n\n\n\n\n\n\n\nright\n\n\nleft\n\n\nCode show/hide\nfig6.11right <- ggplot(aes(x = pseudo, y = IJpseudo - pseudo), data = pdata) +\n  geom_point(size = 4, shape = 1) +\n  ylab(\"Difference\") +\n  xlab(\"Pseudo-value\") +\n  scale_x_continuous(limits = c(-0.2, 1),\n                     breaks = seq(-0.2, 1, by = 0.2)) +\n  scale_y_continuous(limits = c(-0.01, 0.01),\n                     breaks = seq(-0.01, 0.01, by = 0.005)) +\n  theme_general\n\nfig6.11right"
  },
  {
    "objectID": "Ch6.html#prova-trial-in-liver-cirrhosis",
    "href": "Ch6.html#prova-trial-in-liver-cirrhosis",
    "title": "6  Pseudo-values",
    "section": "PROVA trial in liver cirrhosis",
    "text": "PROVA trial in liver cirrhosis\n\nRead data\n\n\nCode show/hide\nprova <- read.csv(\"data/prova.csv\", na.strings = c(\".\"))\n# Treatment 2x2 factorial\nprova$beh <- with(prova, as.factor(scle + beta*2))\nlibrary(tidyverse)\nprova <- prova %>% mutate(timebleed = ifelse(bleed == 1, timebleed, timedeath),\n                          outof0 = ifelse(bleed ==1, 1, death),\n                          wait = ifelse(bleed ==1, timedeath - timebleed, NA))\n\n# Faster processing\nrequire(data.table)\nprova <- setDT(prova)\n\n# Setting start times, s = 1 year and s = 2 years\ns1 = 365.25\ns2 = 2*365.25\n\n#Censoring times\ncens_outof0 <- 1509\ncens_wait <- 1363\n\n\n\n\nFigure 6.10\nTODO: get program to make data file datafig610.csv\n\n\nCode show/hide\nlibrary(mstate)\nlibrary(survival)\nlibrary(data.table) #Faster aggregation of data\n\n# Creating data frame\n# Converting data to long format\n# Transition matrix for irreversible illness-death model\ntmat <- trans.illdeath(names = c(\"Non-bleeding\", \"Bleeding\", \"Dead\"))\nlong_format_scle0 <- msprep(time = c(NA, \"timebleed\", \"timedeath\"), status = c(NA, \"bleed\", \"death\"), data = subset(as.data.frame(prova), scle ==0), trans = tmat, keep = \"scle\")\nlong_format_scle1 <- msprep(time = c(NA, \"timebleed\", \"timedeath\"), status = c(NA, \"bleed\", \"death\"), data = subset(as.data.frame(prova), scle ==1), trans = tmat, keep = \"scle\")\n\n# Estimation of transition probabilities with the Landmark Aalen-Johansen estimator\n# Warning is not related to the estimate of pstate2\nLMAaJ_scle0 <- LMAJ(long_format_scle0, s = s1, from = 1) #P(V(t) = 1 | V(1) = 0)\nLMAaJ_scle1 <- LMAJ(long_format_scle1, s = s1, from = 1) #P(V(t) = 1 | V(1) = 0)\n\nLMAJ_scle0_data <- as.data.frame(cbind(LMAaJ_scle0$time, LMAaJ_scle0$pstate2, \"No\"))\ncolnames(LMAJ_scle0_data) <- c(\"time\", \"p01\", \"Sclerotherapy\")\nLMAJ_scle1_data <- as.data.frame(cbind(LMAaJ_scle1$time, LMAaJ_scle1$pstate2, \"Yes\"))\ncolnames(LMAJ_scle1_data) <- c(\"time\", \"p01\", \"Sclerotherapy\")\n\nLMAJ_scle <- as.data.frame(rbind(LMAJ_scle0_data, LMAJ_scle1_data))\nLMAJ_scle <- read.csv(\"R/data/datafig610.csv\")\n\nlibrary(ggplot2)\ntheme_general <- theme_bw() +\n  theme(legend.position = \"bottom\",\n        text = element_text(size = 20),\n        axis.text.x = element_text(size = 20),\n        axis.text.y = element_text(size = 20))\n\nfig6.10 <- ggplot(LMAJ_scle,aes(x = as.numeric(time)/365.25, y = as.numeric(p01), group = Sclerotherapy)) + \n  geom_step(size = 1) +\n  xlab(\"Time since randomization (years)\") +\n  ylab(\"Probability\") + \n  theme_bw() +\n  scale_x_continuous(expand = expansion(),limits = c(0.94,4.2)) +  \n  aes(linetype=Sclerotherapy) + theme_general + \n  theme(legend.key.width = unit(1,\"cm\"),legend.text = element_text(size = 20)) \nfig6.10\n\n\n\n\n\n\n\nTable 6.7\nNo code available - results are from: Andersen, P. K., Wandall, E. N. S., Pohar Perme, M. (2022). Inference for transition probabilities in non-Markov multi-state models. Lifetime Data Analysis, 28:585–604."
  },
  {
    "objectID": "Ch6.html#exercises",
    "href": "Ch6.html#exercises",
    "title": "6  Pseudo-values",
    "section": "Exercises",
    "text": "Exercises\nThe SAS solutions are available as a single file for download:\n\nExercises 6.3 - 6.5 (The Copenhagen Holter study)\n\n\nExercise 6.1 (*)\nThe influence function for the survival function \\(S(t)\\) is \\[\\dot{\\phi}(X_i^*)=-S(t)\\int_0^t\\frac{dM_i(u)}{S(u)G(u)}\\] with \\(M_i(u)=N_i(u)-\\int_0^uY_i(s)dA(s)\\) being the martingale for the failure counting process for subject \\(i\\) (Overgaard et al. 2017). The corresponding `plug-in’ approximation is then \\[\\widehat{\\dot{\\phi}}(X_i^*)=-\\widehat{S}(t)\\left(\\frac{N_i(t)}{Y(t\\wedge X_i)/n}-\\int_0^{t\\wedge X_i}\\frac{dN(u)}{Y(u)^2/n}\\right).\\]\n\n1.\nShow that, writing the estimator in the `\\(\\exp(-\\mbox{Nelson-Aalen})\\)’ form \\(\\widehat{S}^w(t)=\\exp(-\\int_0^t(\\sum_iw_idN_i(u)/\\sum_iw_iY_i(u)))\\), this expression is obtained as \\[\\dot{\\widehat{\\phi}}(X_i^*)=\\frac{\\partial \\widehat{S}^w(t)}{\\partial w_i}\\vert_{\\mathbf{w}=1/n}.\\] The derivative \\(\\frac{\\partial \\widehat{S}^w(t)}{\\partial w_i}\\vert_{\\mathbf{w}=1/n}\\) is \\[-\\widehat{S}(t)\\int_0^t\\frac{(Y(u)/n)dN_i(u)-Y_i(u)dN(u)/n}{(Y(u)/n)^2}\\] \\[=-\\widehat{S}(t)(\\int_0^t\\frac{dN_i(u)}{Y(u)/n}-\\int_0^tY_i(u)\\frac{dN(u)}{Y(u)^2/n}),\\] which equals the desired expression.\n\n\n2.\nShow that for the standard Kaplan-Meier estimator \\[\\widehat{S}^w(t)=\\prod_{[0,t]}(1-\\sum_iw_idN_i(u)/\\sum_iw_iY(u))\\] it holds that \\[\\frac{\\partial \\widehat{S}^w(t)}{\\partial w_i}\\vert_{\\mathbf{w}=1/n}=\n-n\\widehat{S}(t)\\left(\\frac{N_i(t)}{Y(t\\wedge X_i)-dN(t\\wedge X_i)}-\\int_0^{t\\wedge X_i}\\frac{dN(u)}{Y(u)(Y(u)-dN(u))}\\right).\\]\nNote that the factor \\(n\\) is missing in the exercise text in the book.\nThe Kaplan-Meier estimator is a product, say \\(f(\\mathbf{w})=\\prod_jf_j(\\mathbf{w})\\), with a factor for each observation time \\(u=X_j\\) and with derivative \\[f^{\\prime}(\\mathbf{w})=\\sum_jf_j^{\\prime}(\\mathbf{w})\\prod_{k\\neq j}f_k(\\mathbf{w})=f(\\mathbf{w})\\sum_j\\frac{f_j^{\\prime}(\\mathbf{w})}{f_j(\\mathbf{w})}.\\] The \\(j\\)th factor is \\(f_j(\\mathbf{w})=1-\\frac{\\sum_iw_idN_i(u)}{\\sum_iw_iY(u)}\\) with \\(i\\)th derivative, when \\(\\mathbf{w}=1/n\\), \\[-\\frac{(Y(u)/n)dN_i(u)-(dN(u)/n)Y_i(u)}{(Y(u)/n)^2}\\] and, hence, \\[\\frac{f_j^{\\prime}(\\mathbf{w})}{f_j(\\mathbf{w})}=-\\frac{Y(u)dN_i(u)-dN(u)Y_i(u)}{(Y(u)-dN(u))Y(u)/n}.\\] Summing (integrating) over all observation times, the desired expression is obtained.\n\n\n3.\nShow that, in the case of no censoring, the influence function reduces to \\[\\dot{\\phi}(X_i^*)=I(T_i>t)-S(t).\\]\nUsing the infinitesimal jackknife approach on the complete data estimator \\(\\widehat{S}^w(t)={\\sum_iw_iI(T_i>t)}/{\\sum_iw_i}\\), the \\(i\\)th derivative is, when \\(\\mathbf{w}=1/n\\), \\[I(T_i>t)-\\sum_jI(T_j>t)/n=I(T_i>t)-\\widehat{S}(t).\\] Alternatively, evaluating the expression for \\(\\dot{\\phi}(X_i^*)\\) for uncensored data (\\(G(u)=1\\)), we get \\[-S(t)\\int_0^t(dN_i(u)-\\alpha(u)Y_i(u))/S(u)du=-S(t)(\\frac{N_i(t)}{S(t\\wedge T_i)}-\\int_0^tY_i(u)\\alpha(u)/S(u)du,\\] where the latter integral (using that the density \\(\\alpha(u)S(u)\\) is minus the derivative of \\(S(u)\\)) can be evaluated as \\(1-1/S(t\\wedge T_i)\\). All in all, we get \\(-S(t)\\) for \\(T_i\\leq t\\) and \\(1-S(t)\\) for \\(T_i>t\\), i.e., \\(I(T_i>t)-S(t)\\).\n\n\n\nExercise 6.2 (*)\n\n1.\nShow that, for the Aalen-Johansen estimator, the calculation \\[\\dot{\\widehat{\\phi}}(X_i^*)=\\frac{\\partial \\widehat{F}^w_h(t)}{\\partial w_i}\\vert_{\\mathbf{w}=1/n},\\] with \\(\\widehat{F}^w_h(t)\\) given by (6.11), leads to the pseudo-value approximation obtained by plugging-in estimators into (6.10).\nThe \\(i\\)th derivative of \\(\\widehat{F}^w_h(t)\\) when \\(\\mathbf{w}=1/n\\) is \\[\\int_0^t(-\\widehat{S}(u-)(\\sum_j\\int_0^u\\frac{(Y(s)/n)dN_{ji}(s)-(dN_j(s)/n)Y_i(s)}{(Y(s)/n)^2}d\\widehat{A}_h(u))\\] \\[+\\widehat{S}(u-)(\\frac{(Y(u)/n)dN_{hi}(u)-(dN_h(u)/n)Y_i(u)}{(Y(s)/n)^2})).\\] Using the relation \\(\\widehat{S}(u-)\\widehat{G}(u-)=Y(u)/n\\), the second line reduces to \\[\\int_0^t\\frac{dN_{hi}(u)}{\\widehat{G}(u-)}-\\int_0^tY_i(u)\\frac{d\\widehat{A}_h(u)}{\\widehat{G}(u-)}\\] which is the estimate for the first term in (6.10) because \\(M_{hi}(t)=N_{hi}(t)-\\int_0^tY_i(u)dA_h(u)\\). Using the same relation for the first line, this reduces to \\[-\\int_0^t\\widehat{S}(u-)\\left(\\int_0^u\\sum_h(\\frac{dN_{ji}(s)}{\\widehat{S}(s-)\\widehat{G}(s-)}-\nY_i(s)\\frac{dN_h(s)}{\\widehat{S}(s-)\\widehat{G}(s-)Y(s)})\\right)\\] which is the estimate of the second term in (6.10) because \\[M_{i}(t)=\\sum_j (N_{ji}(t)-\\int_0^tY_i(u)dA_j(u)).\\]\n\n\n2.\nShow that, in the case of no censoring, the influence function reduces to \\[\\dot{\\phi}(X_i^*)=I(T_i\\leq t, D=h)-F_h(t).\\]\nLooking at Equation (6.6), the result follows directly because \\(G(u)=1\\) and \\(M_{0i}(t)=0\\). Using, as an alternative, the infinitesimal jackknife approach on the complete data estimator \\(\\widehat{F}_h^w(t)={\\sum_iw_iI(T_i\\leq t, D_i=h)}/{\\sum_iw_i}\\), the \\(i\\)th derivative is, when \\(\\mathbf{w}=1/n\\), \\[I(T_i\\leq t, D_i=h)-\\sum_jI(T_j\\leq t, D_j=h)/n=I(T_i\\leq t, D_i=h)-\\widehat{F}_h(t).\\]\n\n\n\nExercise 6.3\nThis and the next two exercises are using the Copenhagen Holter study, and we start by loading and preparing data.\n\nRSAS\n\n\nThe data should be loaded as chs_data\n\n\nCode show/hide\nchs_data <- read.csv(\"data/cphholter.csv\")\n\n\nWe then load the relevant packages\n\n\nCode show/hide\nlibrary(tidyverse) #Data manipulations and plots\nlibrary(survival) #Core survival analysis routines\nlibrary(survminer) #Plots of survival curves\nlibrary(survRM2) #RMST \nlibrary(mstate) #probtrans, ELOS\nlibrary(mets) #binreg\nlibrary(pseudo)\nlibrary(geepack)\n\n\nFinally, we will convert the time variables to years and add a time variable and status indicator for the composite end-point stroke-free survival.\n\n\nCode show/hide\nchs_data <- chs_data %>% mutate(timeafib = timeafib/365.25,\n                                timestroke = timestroke/365.25,\n                                timedeath = timedeath/365.25,\n                                timestrokeordeath = ifelse(stroke == 1, timestroke, timedeath),\n                                strokeordeath = ifelse(stroke ==1, 1, death))\n\n\n\n\n\n\nCode show/hide\nproc import out = chs_data\n    datafile = 'data/cphholter.csv'\n    dbms= csv replace;\n    getnames=yes;\nrun;\n\n* We will convert the time variables, timeafib, timestroke, and timedeath, from days to years;\n\ndata chs_data;\n    set chs_data;\n    timeafib = timeafib/365.25;\n    timestroke = timestroke/365.25;\n    timedeath = timedeath/365.25;\nrun;\n\n* Furthermore, we add variables for the composite end-point of stroke or death without stroke;\n\ndata chs_data;\n    set chs_data;\n    timestrokeordeath = timedeath;\n    if stroke = 1 then timestrokeordeath = timestroke;\n    strokeordeath = death;\n    if stroke = 1 then strokeordeath = 1;\nrun;\n\n\n\n\n\nConsider the Copenhagen Holter study and the composite end-point strokefree survival.\n\n1.\nFit, using pseudo-values, a cloglog model for experiencing that end-point before time 3 years including the covariates ESVEA, sex, age, and systolic blood pressure.\n\nRSAS\n\n\nWe will compute the pseudo observations for the incompletely observed survival indicators \\(I(T_i > 3 \\text{ years})\\), \\(i = 1,...,678\\) using the pseudosurv function from the pseudo package. The function takes a time variable, time, status indicator, event, and time point(s) where the pseudo observations should be computed, tmax, as arguments. The pseudo observations are returned as a list called pseudo.\n\n\nCode show/hide\n# Computing the pseudo observations \nchs_data$pseudo631 <- pseudosurv(time = chs_data$timestrokeordeath, event = chs_data$strokeordeath, tmax = 3)$pseudo\n\n\nThe cloglog model for experiencing stroke-free survival is fitted using the geese function from the geepack library where we must provide the arguments formula, data and mean.link. Since the cloglog link function is implemented as \\(\\log(-\\log(1-x))\\) we must use 1 minus the pseudo observations as responses in the GEE. Furthermore, we must exclude the three observations with missing values of systolic blood pressure in the data argument.\n\n\nCode show/hide\n# Fitting the GEE\nfit631 <- geese(formula = I(1 - pseudo631) ~ esvea + sex + age + sbp, data = subset(chs_data, !is.na(sbp)), mean.link = \"cloglog\")\nsummary(fit631)\n\n\n\nCall:\ngeese(formula = I(1 - pseudo631) ~ esvea + sex + age + sbp, data = subset(chs_data, \n    !is.na(sbp)), mean.link = \"cloglog\")\n\nMean Model:\n Mean Link:                 cloglog \n Variance to Mean Relation: gaussian \n\n Coefficients:\n                estimate      san.se        wald            p\n(Intercept) -8.417674445 2.250118633 13.99501663 0.0001832958\nesvea        0.235836070 0.473373013  0.24820668 0.6183406485\nsex          0.552503402 0.424275723  1.69579578 0.1928387168\nage          0.081000941 0.030941929  6.85307312 0.0088488936\nsbp         -0.001947476 0.008978799  0.04704438 0.8282884941\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n              estimate      san.se     wald            p\n(Intercept) 0.04417044 0.007098887 38.71532 4.903444e-10\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   675   Maximum cluster size: 1 \n\n\nThus, we obtain the following model for stroke-free survival at three years including the covariates ESVEA, sex, age, and systolic blood pressure\n\\[ S(3|Z) = \\exp(-\\exp(-8.417674 + 0.235836\\cdot Z_1\\] \\[+ 0.552503\\cdot Z_2 +  0.081001\\cdot Z_3 -0.001947\\cdot Z_4 ) ),\\]\nwhere \\(Z_1, Z_2, Z_3\\), and \\(Z_4\\) are ESVEA, sex, age, and systolic blood pressure, respectively.\n\n\n\n\nCode show/hide\n* We will compute the pseudo observations for the incompletely observed survival indicators I(T_i > 3 years), i = 1,...,678 using \n  the pseudosurv MACRO.;\n\n* 'noprint plots = none' are included twice in the proc lifetest statement of the MACRO to avoid none important outputs being \n  printed;\n\n%macro pseudosurv(indata,time,dead,howmany,datatau,outdata);\n\n/* The subsequent SAS code is adapted from that described by J.P.Klein,\n    M.Gerster, P.K.Andersen, S.Tarima, M.Pohar Perme (2008): \"SAS and R\n    functions to compute pseudo-values for censored data regression\"\n    Comp. Meth. Progr. Biomed., vol. 89,pp. 289-300. */ \n\n/*    MACRO COMPUTES PSEUDOVALUES BASED ON THE KAPLAN-MEIER ESTIMATOR AT EACH\n      TIME\n      INPUTS:\n      INDATA---INPUT DATA SET\n      TIME--TIME VARIABLE\n      DEAD---EVENT INDICATOR (1-EVENT, 0-CENSORED)\n      HOWMANY---SAMPLE SIZE\n      DATATAU---SUBSET OF INPUT DATA SET AT WHICH PSEUDO VALUES ARE COMPUTED DATA\n                SET HAS SINGLE VARIABLE TIME\n     \n      OUTDATA---OUTPUT DATA SET WHICH CONTAINS PSUK,K=1,...,HOWMANY THE PSEUDO\n      VALUES AT EACH TIME POINT (Note output data set includes orginal data sorted\n                           by time\n      \n*/\n \nproc sort data=&indata;\nby &time;\n\ndata keep;  set &datatau;\nfind=1;\nproc sort data=keep;  by time;\n\ndata point;  set &indata;\ntime=&time;\nkeep=1;\n \n\ndata point;  merge point keep;  by time;\nkeep time find keep;\n \ndata useme;  set point;\nretain temp -1;\nif keep = 1 then temp=time;\ntuse=temp; \nif find ne 1 then delete;\n&time=tuse;\n run;\n/* WORKING DATA SET THAT INCLUDE A SET OF N INDICATORS WHERE FOR THE KTH INDICATOR\n THE EVENT IS MISSING */\ndata newdat;  set &indata;\nid+1;\narray iobs(&howmany) dead1-dead&howmany;\ndo j=1 to &howmany;\niobs(j)=&dead;\nif j=id then iobs(j)=.;\nend;\n\ndata out;  set newdat;\n\n/* COMPUTE KME FOR FULL SAMPLE */\n\nproc lifetest data=newdat noprint plots = none;\ntime &TIME*&dead(0);\nsurvival out=sall;\ndata sall;  set sall;\nsall=survival;\n keep &time sall;\n \n%do ip=1 %to &howmany;\n\n/* COMPUTE KME FOR REDUCED SAMPLE */\nproc lifetest data=newdat noprint plots = none;\ntime &time*dead&ip(0);\nsurvival out=stmp;\ndata stmp;  set stmp;\ns&ip=survival;\nkeep &time s&ip;\n \n/*merge KMEs AND COMPUTE PSEUDOVALUES FOR OBSERVATION IP*/\ndata pstmp; merge sall stmp;  by &time;\nretain stemp 1;\nif s&ip=. then s&ip=stemp;\nstemp=s&ip;\npsu&ip=&howmany*sall- (&howmany-1)*s&ip;\n \ndata out; merge out pstmp useme ;  by &time;\nif find ne 1 then delete;\nkeep &time psu1-psu&ip;\n%end;\n\ndata out;  set out;\nretain dup -1;\nif &time=dup then delete;\n else dup=&time;\n jd+1;\n \ndata io;  set out;\narray ps psu1-psu&howmany;\ndo id=1 to &howmany;\npseudo=ps(id);\ntime=&time;\noutput;\nend;\nkeep time id pseudo jd;\nproc sort data=io ;\n  by id;\n  \ndata a;  set &indata;\nid+1;\ndata io;  merge a io;  by id;\n proc sort data=io;  by jd;\n\nproc sort data=&datatau;\nby time;\n\ndata taus;  set &datatau ;\n jd+1;\n tpseudo=time;\n keep jd tpseudo;\n \n \n  data &outdata;  merge io taus;  by jd;\n  drop jd id &time &dead;\n%mend;\n\n* Inside the MACRO a variable called 'id' is created which interferes with the 'id' variable in our data set, chs_data. Therefore,\n  we will first rename the 'id' variable in the chs_data;\n\ndata chs_data; \n    set chs_data; \n    ptno = id;\n    drop id;\nrun; \n\n* Then, we make a data set named 'timepoint' which contains one column 'time' with the timepoint where we wish the pseudo observations to\n  be computed.;\n\ndata timepoint;\n    input time;\n    datalines;\n    3\n    ;\nrun;\n\n* The pseudosurv MACRO is then called with 'chs_data', 'timestrokeordeath', 'strokeordeath', '678'. 'timepoint' and 'outdatadata631' \n  as arguments;\n\n* The MACRO returns a data set 'outdata631' where the pseudo observations are stored in the column 'pseudo'.;\n\n%pseudosurv(chs_data, timestrokeordeath, strokeordeath, 678, timepoint, outdata631);\n\n* The output of the MACRO 'outdata631' is then used as data when fitting the cloglog model using the genmod procedure.;\n\n* We must specify the link function and the inverse link function in the fwdlink and invlink statements;\n\ntitle '6.3.1';\nproc genmod data=outdata631;\n    class ptno;\n    fwdlink link=log(-log(_mean_));\n    invlink ilink=exp(-exp(_xbeta_));\n    model pseudo= esvea sex age sbp/dist=normal noscale;\n    repeated subject=ptno/corr=ind;\nrun;\n\n* Thus, we obtain the following model for stroke-free survival at three years including the covariates ESVEA, sex, age, and systolic \n  blood pressure\n  S(3|Z) = exp(-exp(-8.4177 + 0.2358*Z1 + 0.5525*Z2 +  0.0810*Z3 - 0.0019*Z4)),\n  where Z1, Z2, Z3, and Z4 are ESVEA, sex, age, and systolic blood pressure, respectively.;\n\n\n\n\n\n\n\n2.\nCompare the results with those of Exercise 2.4.\nIn Exercise 2.4, we obtained the following estimates of the coefficients for ESVEA, sex, age, and systolic blood pressure assuming the Cox model and almost identical estimates was found assuming a Poisson model\n\\[ \\beta_{ESVEA} = 0.318284 \\quad \\beta_{sex} = 0.577585 \\quad \\beta_{age} = 0.076658   \\quad \\beta_{sbp} = 0.005152   \\]\nThus, the models agree in the direction and in some degree the magnitude of the effect of ESVEA, sex, and age. The effect of systolic blood pressure is on the other hand estimated to have the opposite effect in the model using pseudo observations compared with the Cox and Poisson models. However, the effect of systolic blood pressure (and also ESVEA and sex) is not significant at a 0.05 level in the model based on pseudo values.\n\n\n\nExercise 6.4\nConsider the Copenhagen Holter study and the composite end-point strokefree survival.\n\n1.\n\nRSAS\n\n\nFit, using pseudo-values a linear model for the 3-year restricted mean time to the composite event including the covariates ESVEA, sex, age, and systolic blood pressure.\nThe pseudo observations for the 3 year restricted mean time to the composite end-point are fitted using the pseudomean function from the pseudo package.\nThe values are then used as responses in the formula argument of the geese function.\n\n\nCode show/hide\n# Computing the pseudo observations\nchs_data$pseudo641 <- pseudomean(time = chs_data$timestrokeordeath,event = chs_data$strokeordeath, tmax = 3)\n\n# Fitting the GEE\nfit641 <- geese(formula = pseudo641 ~ esvea + sex + age + sbp, data = subset(chs_data, !is.na(sbp)), mean.link = \"identity\")\nsummary(fit641)\n\n\n\nCall:\ngeese(formula = pseudo641 ~ esvea + sex + age + sbp, data = subset(chs_data, \n    !is.na(sbp)), mean.link = \"identity\")\n\nMean Model:\n Mean Link:                 identity \n Variance to Mean Relation: gaussian \n\n Coefficients:\n                 estimate       san.se        wald          p\n(Intercept)  3.3551746975 0.2078355430 260.6097352 0.00000000\nesvea       -0.0273741987 0.0527081358   0.2697289 0.60351367\nsex         -0.0540324232 0.0352191476   2.3537005 0.12498600\nage         -0.0073221791 0.0028486997   6.6067420 0.01015934\nsbp          0.0005144224 0.0006748332   0.5810945 0.44588365\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n             estimate    san.se     wald            p\n(Intercept) 0.1396737 0.0310223 20.27127 6.720211e-06\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    0 \nNumber of clusters:   675   Maximum cluster size: 1 \n\n\nWe get the following model for the 3-year restricted mean time to the composite end-point stroke-free survival\n\\[ \\varepsilon(3|Z) = 3.355175 - 0.027374 \\cdot Z_1 - 0.054032 \\cdot Z_2 - 0.007322 \\cdot Z_3 + 0.000514 \\cdot Z_4,\\]\nwhere \\(Z_1, Z_2, Z_3\\), and \\(Z_4\\) are ESVEA, sex, age, and systolic blood pressure, respectively.\n\n\n\n\nCode show/hide\n* The pseudo observations for the 3 year restricted mean time to the composite end-point are computed using the pseudomean MACRO;\n\n%macro pseudomean(indata,time,dead,howmany,tmax,outdata);\n /* MACRO ARGUMENTS\n      INDATA--NAME OF INPUT DATA SET\n      TIME--NAME OF TIME VARIABLE\n      DEAD--NAME OF EVENT INDICATOR VARIABLE--(1-DEAD,0-CENSORED)\n      HOWMANY--SAMPLE SIZE\n      TMAX--UPPER LIMIT OF INTEGRATION FOR RESTRICTED MEAN\n      OUTDATA--NAME OF OUTPUT DATA SET WITH PSEUDOVALUES FPR RESTRICTED\n               MEAN IN VARIABLE \"PSUMEAN\"  */\n \n /* CREATE A DATA SET WHERE EVERYTHING ABOVE TMAX IS CENSORED */\n DATA work; SET &indata;\n  restime = MIN(&tmax, &time);\n  resdead = &dead;\n  IF restime EQ &tmax THEN resdead = 0;\n\n/* CREATE DATA SET WITH SET OF INDICATORS DEADK THAT HAS MISSING VALUE\n     FOR KTH OBSERVATION, K=1,...,HOWMANY*/\n DATA work;  SET work;\n   id+1;\n   ARRAY iobs(&howmany) dead1-dead&howmany;\n   DO j = 1 TO &howmany;\n    iobs(j) = resdead;\n    IF j = id THEN iobs(j) = .;\n   END;\n \n /* COMPUTE RESTRICTED MEAN FOR COMPLETE SAMPLE USING PROC LIFETEST */\n \n PROC LIFETEST DATA = work OUTSURV = km;\n   TIME restime*resdead(0);\n   ODS SELECT MEANS;\n   ODS OUTPUT MEANS = mall;\n RUN;\n\n  DATA km; SET km;\n    IF _CENSOR_ EQ 0;\n  PROC SORT DATA=km;\n    BY restime;\n  RUN; \n  DATA km; SET km END=LAST;\n    IF NOT(LAST) THEN DELETE;\n    area = (&tmax - restime)*survival;\n    KEEP area;\n\n  DATA psu; MERGE km mall;\n    meanall = mean + area;\n    KEEP meanall;\n    \n %DO ip = 1 %TO &howmany;\n \n   /* COMPUTE RESTRICTED MEAN FOR SAMPLE WITH IPTH OBSERVATION DELETED\n      USING PROC LIFETEST */\n \n   PROC LIFETEST DATA = work OUTSURV = km1;\n     TIME restime*dead&ip(0);\n     ODS SELECT means;\n     ODS OUTPUT MEANS = m1;\n   RUN;\n\n   DATA km1; SET km1;\n     IF _CENSOR_ EQ 0;\n   PROC SORT DATA = km1;\n     BY restime;\n   RUN;\n   DATA km1; SET km1 END=LAST;\n     IF NOT(LAST) THEN DELETE;\n     area = (&tmax - restime)*survival;\n     KEEP area;\n   DATA km1; MERGE km1 m1;\n     mean = mean + area;\n     KEEP mean;\n\n   /* COMPUTE PSEUDOVALUE FOR IPTH OBSERVATION*/\n   DATA psu; MERGE psu km1;\n     psu&ip=&howmany*meanall-(&howmany-1)*mean;\n %END;\n \n /* TRANSPOSE DATASET AND MERGE WITH RAW DATA*/\n DATA out;  SET psu;\n   ARRAY y(&howmany) psu1-psu&howmany;\n   DO j = 1 TO &howmany;\n     psumean=y(j);\n     OUTPUT;\n   END;\n KEEP psumean;\n \n DATA &outdata; MERGE &indata out;\n run; \n%MEND;\n\n* The pseudomean MACRO is now called with 'chs_data', 'timestrokeordeath', 'strokeordeath', '678'. '3' and 'outdatadata641' \n  as arguments;\n\n* The MACRO returns a data set 'outdata641' where the pseudo observations are stored in the column 'psumean'.;\n\ntitle '6.4.1';\n%pseudomean(chs_data, timestrokeordeath, strokeordeath, 678, 3, outdata641);\n\n* The model is then fitted with the genmod procedure; \n\nproc genmod data=outdata641;\n    class ptno;\n    model psumean=esvea sex age sbp /dist=normal;\n    repeated subject=ptno/corr=ind;\nrun;\n\n* We get the following model for the 3-year restricted mean time to the composite end-point stroke-free survival\n  epsilon(3|Z) = 3.3552 - 0.0274*Z1 - 0.0540*Z2 - 0.0073*Z3 + 0.0005*Z4,\n  where Z1, Z2, Z3, and Z4 are ESVEA, sex, age, and systolic blood pressure, respectively.;\n\n\n\n\n\n\n\n2.\nCompare with the results of Exercise 4.3.\nThe model obtained in Exercise 4.3 is identical to the model fitted using pseudo observations. This is because none of the subjects are censored before 3 years and the pseudo observation for subject \\(i\\) is thus \\(\\min(3,T_i)\\) where \\(T_i\\) is the time of stroke or death without stroke for subject \\(i\\).\n\n\n\nExercise 6.5\nConsider the competing outcomes stroke and death without stroke in the Copenhagen Holter study.\n\n1.\nFit, using pseudo-values, a cloglog-model for the cumulative incidences at 3 years including ESVEA, sex, age, and systolic blood pressure.\n\nRSAS\n\n\nTo estimate the cumulative incidences at 3 years we will first create a variable called event where 1 indicates stroke, 2 indicates death without stroke and 0 indicates censoring.\nThe pseudo observations for the cumulative incidences are then computed using the pseudoci function from the pseudo package. The output pseudo is a list of two cmponents; the first containing the pseudo observation for cause 1 (stroke) and the second containing the pseudo observations for cause 2 (death without stroke). The pseudo observations are stored as pseudo651_stroke and pseudo651_death, respectively.\n\n\nCode show/hide\n# Status indicator for death without stroke\nchs_data$death_wo_stroke <- ifelse(chs_data$stroke == 1, 0, chs_data$death)\n# Event variable\nchs_data$event <- ifelse(chs_data$death_wo_stroke == 0, chs_data$stroke, chs_data$death_wo_stroke*2)\n\n# Computing the pseudo observations\npseudo651 <- pseudoci(time = chs_data$timestrokeordeath, event = chs_data$event, tmax = 3)$pseudo\nchs_data <- chs_data %>% mutate(pseudo651_stroke = pseudo651[[1]],\n                                pseudo651_death = pseudo651[[2]])\n\n\nWe then fit a cloglog model for the cumulative incidence of stroke at 3 years using the geese function.\n\n\nCode show/hide\n# Fitting GEE for the end-point stroke\nfit651_stroke <- geese(formula = pseudo651_stroke ~ esvea + sex + age + sbp, data = subset(chs_data, !is.na(sbp)), mean.link = \"cloglog\")\nsummary(fit651_stroke)\n\n\n\nCall:\ngeese(formula = pseudo651_stroke ~ esvea + sex + age + sbp, data = subset(chs_data, \n    !is.na(sbp)), mean.link = \"cloglog\")\n\nMean Model:\n Mean Link:                 cloglog \n Variance to Mean Relation: gaussian \n\n Coefficients:\n                estimate      san.se         wald           p\n(Intercept) -13.22924598 4.176619986 10.032756198 0.001537808\nesvea         0.03121341 0.735520028  0.001800916 0.966150174\nsex           0.97102501 0.750193280  1.675384486 0.195538876\nage           0.11987793 0.060010682  3.990445009 0.045758977\nsbp           0.00402910 0.007673721  0.275679233 0.599547288\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n              estimate      san.se     wald            p\n(Intercept) 0.01706673 0.004691019 13.23629 0.0002745808\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    1 \nNumber of clusters:   675   Maximum cluster size: 1 \n\n\nThus, we obtain the following model for the cumulative incidence of stroke at 3 years \\[ F_{stroke}(3|Z) = 1 - \\exp(-\\exp(-13.229246 + 0.031213\\cdot Z_1\\] \\[+ 0.971025 \\cdot Z_2 + 0.119878 \\cdot Z_3  + 0.004029\\cdot Z_4)),\\] where \\(Z_1, Z_2, Z_3\\), and \\(Z_4\\) are ESVEA, sex, age, and systolic blood pressure, respectively.\nLikewise, we will fit a model for the cumulative incidence of death without stroke at 3 years\n\n\nCode show/hide\nfit651_death <- geese(formula = pseudo651_death ~ esvea + sex + age + sbp, data = subset(chs_data, !is.na(sbp)), mean.link = \"cloglog\")\nsummary(fit651_death)\n\n\n\nCall:\ngeese(formula = pseudo651_death ~ esvea + sex + age + sbp, data = subset(chs_data, \n    !is.na(sbp)), mean.link = \"cloglog\")\n\nMean Model:\n Mean Link:                 cloglog \n Variance to Mean Relation: gaussian \n\n Coefficients:\n               estimate     san.se      wald          p\n(Intercept) -3.18491794 4.09532929 0.6048098 0.43674872\nesvea        0.33067549 0.93749873 0.1244121 0.72429761\nsex          1.20812564 0.75670860 2.5489826 0.11036531\nage          0.07407931 0.05731313 1.6706507 0.19617140\nsbp         -0.04396479 0.01864246 5.5616450 0.01835816\n\nScale Model:\n Scale Link:                identity \n\n Estimated Scale Parameters:\n              estimate      san.se     wald            p\n(Intercept) 0.02840673 0.006072949 21.87979 2.902748e-06\n\nCorrelation Model:\n Correlation Structure:     independence \n\nReturned Error Value:    1 \nNumber of clusters:   675   Maximum cluster size: 1 \n\n\nWe obtain the following model for the cumulative incidence of death without stroke at 3 years\n\\[ F_{death}(3|Z) = 1 - \\exp(-\\exp(-3.184918 + 0.330675\\cdot Z_1 + 1.208126 \\cdot Z_2\\] \\[+ 0.074079 \\cdot Z_3  - 0.043965\\cdot Z_4)),\\]\nwhere \\(Z_1, Z_2, Z_3\\), and \\(Z_4\\) are ESVEA, sex, age, and systolic blood pressure, respectively.\n\n\n\n\nCode show/hide\n* The pseudo observations for the cumulative incidences of stroke and death without stroke at three years are computed using the  pseudoci MACRO. To use this MACRO we must remember to include the cuminc MACRO.;\n\n%macro cuminc(datain,x,re,de,dataout,cir,cid);\n/*  THIS MACRO COMPUTES THE CUMULATIVE INCIDENCE FUNCTIONS FOR\n    BOTH COMPETING RISKS USING PROC PHREG OUTPUT\n    INPUTS TO MACRO\n    DATAIN--NAME OF INPUT DATA SET CONTAINING \n        X--TIME TO EVENT\n        RE--INDICATOR OF FIRST COMPETING RISK (1-YES, 0-NO)\n        DE--INDICATOR OF SECOND COMPETING RISK\n    DATAOUT--NAME OF OUTPUT DATA SET CONTAINING\n        CIR--CUMULATIVE INCIDENCE FUNCTION FOR 1ST COMPETING RISK\n        CID--CUMULATIVE INCIDENCE FUNCTION FOR 2ST COMPETING RISK\n\n*/\n\ndata work;  set &datain;\nt=&x;\nr=&re;\nd=&de;\nzero=0;\n\n/* COMPUTE CRUDE CUMUALTIVE HAZARD FOR FIRST COMPETING RISK */\nproc phreg data=work noprint; \nmodel t*r(0)=zero;\noutput out=rel  logsurv=chr  /method=emp;\n \n /* COMPUTE CRUDE CUMUALTIVE HAZARD FOR SECOND COMPETING RISK */\nproc phreg data=work noprint; \nmodel t*d(0)=zero;\noutput out=dead  logsurv=chd  /method=emp;\n \n \n /* COMPUTE cumualtive incidence */\ndata both;  merge rel dead;  by t;\nretain s 1\nretain cr 0;\nretain cd 0;\nretain cumincr 0;\nretain cumincd 0;\nhr=-(cr+chr);\nhd=-(cd+chd);\n\n/* NOTE HR AND HD ARE THE JUMPS IN THE CUMUALTIVE CRUDE HAZARDS AT THIS TIME */\n\ncr=-chr;\ncd=-chd;\ncir=cumincr+hr*s;\ncumincr=cir;\ncid=cumincd+hd*s;\ncumincd=cid;\ns=s*(1-hr-hd);\n/* NOTE S IS KAPLAN-MEIER ESTIMATE IGNORING CAUSE OF FAILURE */\ndata &dataout;  set both;\n&x=t;\n&cir=cir;  &cid=cid;\nkeep &x &cir &cid;\n%mend;\n\n\n%macro pseudoci(datain,x,r,d,howmany,datatau,dataout);\n\n/*    MACRO COMPUTES PSEUDOVALUES BASED ON THE CUMUALTIVE INCIDENCE FUNCTION\n      FOR BOTH OF TWO COMPETING RISKS  \n      TIME\n      INPUTS:\n      DATAIN---INPUT DATA SET\n      X--TIME VARIABLE\n      R--INDICATOR OF FIRST COMPETING RISK (1-YES, 0-NO)\n      D--INDICATOR OF SECOND COMPETING RISK\n      HOWMANY---SAMPLE SIZE\n     \n      DATATAU---SUBSET OF INPUT DATA SET AT WHICH PSEUDO VALUES ARE COMPUTED \n                DATA SET HAS SINGLE VARIABLE \"TIME\"\n                \n      DATAOUT---OUTPUT DATA SET WHICH CONATINS PSUK,K=1,...,HOWMANY THE PSEUDO\n                VALUES AT EACH TIME POINT (Note output data set\n                 includes orginal data sorted by time)\n      \n*/\n\nproc sort data=&datain;  by &x;\n\ndata keep;  set &datatau;\nfind=1;\n\nproc sort data=keep;  by time;\n\ndata point;  set &datain;\ntime=&x;\nkeep=1;\ndata point;  merge point keep;  by time;\nkeep time find keep;\n \ndata useme;  set point;\nretain temp -1;\nif keep = 1 then temp=time;\ntuse=temp; \nif find ne 1 then delete;\n&x=tuse;\nproc print;\n\n/* PREPARE DATA SET WITH MISSING VALUES FOR DEADK AND RELAPSEK TO BE USED IN COMPUTING\n   ESTIMATED CUMULATIVE INCIDENCE WITH KTH OBSERVATION DELETED*/\nproc sort data=&datain;\nby &x;\ndata newdat;  set &datain ;\nid+1;\narray iobsd(&howmany) dead1-dead&howmany;\narray iobsr(&howmany) relapse1-relapse&howmany;\ndo j=1 to &howmany;\niobsd(j)=&d;\niobsr(j)=&r;\nif j=id then do; iobsr(j)=.; iobsd(j)=.; end;\nend;\n\ndata out;  set newdat;\ndrop dead1-dead&howmany relapse1-relapse&howmany;\n/* COMPUTE CI FOR 1ST (CIRALL) AND 2ND (CIDALL) FOR FULL SAMPLE, STORE IN SALL*/\n%cuminc(newdat,&x,&r,&d,sall,cirall,cidall);\n\n%do ip=1 %to &howmany;\n\n/* COMPUTE CI FOR 1ST (CIRALL) AND 2ND (CIDALL) FOR REDUCED SAMPLE, STORE IN SIP*/\n%cuminc(newdat,&x,relapse&ip,dead&ip,stemp,cir1,cid1);\n\n/* COMPUTE PSEUDOVALUES FOR BOTH RISK AT EVERY DATA POINT AND ADD TO FILE */ \ndata ps; merge sall stemp;  by &x;\nretain cirtemp 0;\nretain cidtemp 0;\nif cir1=. then cir1=cirtemp;\ncirtemp=cir1;\nrpsu&ip=&howmany*cirall- (&howmany-1)*cir1;\n if cid1=. then cid1=cidtemp;\ncidtemp=cid1;\ndpsu&ip=&howmany*cidall- (&howmany-1)*cid1;\n\ndata out; merge out ps useme; by &x;\nif find ne 1 then delete;\nkeep time rpsu1-rpsu&ip dpsu1-dpsu&ip &x;\nrun;\n%end;\n \n data &dataout;  set newdat; \n drop dead1-dead&howmany relapse1-relapse&howmany;\n \n data all;  set out;\n  \n array yr(&howmany) rpsu1-rpsu&howmany;\narray yd(&howmany) dpsu1-dpsu&howmany;\ndo j=1 to &howmany;\nrpseudo=yr(j);\ndpseudo=yd(j);\nid=j;\noutput;\nend;\nkeep id time rpseudo dpseudo;\n proc sort data=all;  by id;\n data &dataout; merge &dataout all;\n by id;\n retain otime -1;\n retain oid -1;\n if id eq oid and otime=time then delete;\n else do; oid=id; otime=time; end;\n %mend;\n\n\n* We must create a variable for the end-point death without stroke;\n\ndata chs_data;\n    set chs_data;\n    death_wo_stroke = death;\n    if stroke = 1 then death_wo_stroke = 0;\nrun;\n\n* The pseudoci MACRO is called with 'chs_data', 'timestrokeordeath', 'stroke', 'death_wo_stroke', '678'. 'timepoint' and 'outdatadata661'\n  as arguments;\n\n* The MACRO returns a data set 'outdata661' where the pseudo observations for the end-point stroke are stored in the column 'rpseudo'\n  and the pseudo observations for death without stroke are stored in the column 'dpseudo'.;\n\ntitle '6.6.1';\n %pseudoci(chs_data, timestrokeordeath, stroke, death_wo_stroke, 678, timepoint, outdata661);\n\n* We fit a cloglog model for the cumulative incidence of stroke with the genmod procedure where we specify the 'fwdlink' and 'invlink' \n  statements;\n\ntitle '6.5.1 - stroke';\nproc genmod data=outdata661;\n    class ptno;\n    fwdlink link=log(-log(1-_mean_));\n    invlink ilink= 1 - exp(-exp(_xbeta_));\n    model rpseudo= esvea sex age sbp /dist=normal  noscale ; \n    repeated subject=ptno/corr=ind;\nrun;\n\n* Thus, we obtain the following model for the cumulative incidence of stroke at 3 years\n  F_stroke(3|Z) = 1 - exp(-exp(-13.2294 + 0.0312*Z1 + 0.9711*Z2 + 0.1199*Z3  + 0.0040*Z4)),  \n  where Z1, Z2, Z3, and Z4 are ESVEA, sex, age, and systolic blood pressure, respectively.;\n\n* Likewise, we will fit a model for the cumulative incidence of death without stroke at 3 years;\n\ntitle '6.5.1 - death without stroke';\nproc genmod data=outdata661;\n    class ptno;\n    fwdlink link=log(-log(1-_mean_));\n    invlink ilink= 1 - exp(-exp(_xbeta_));\n    model dpseudo= esvea sex age sbp /dist=normal noscale ; \n    repeated subject=ptno/corr=ind;\nrun;\n\n* We obtain the following model for the cumulative incidence of death without stroke at 3 years\n  F_death(3|Z) = 1 - exp(-exp(-3.3924 + 0.2862*Z1 + 1.2618*Z2 + 0.0771*Z3 - 0.0442*Z4)), \n  where Z1, Z2, Z3, and Z4 are ESVEA, sex, age, and systolic blood pressure, respectively.;\n\n\n\n\n\n\n\n2.\nCompare with the results of Exercises 4.4 and 5.8.\nIn Exercise 4.5, we used Fine-Gray models to estimate the cumulative incidence functions for stroke and death without stroke. For the end-point stroke we obtained the following coefficients\n\\[ \\beta_{ESVEA} = 0.593921   \\quad \\beta_{sex} = 0.379189   \\quad \\beta_{age} = 0.063347   \\quad \\beta_{sbp} = 0.010629,     \\]\nand for death without stroke we obtained the following coefficients\n\\[ \\beta_{ESVEA} = -0.006269     \\quad \\beta_{sex} = 0.530219     \\quad \\beta_{age} = 0.066495       \\quad \\beta_{sbp} = 0.001601.\\]\nThe estimates of the coefficients are quite different for the Fine-Gray model and the model based on pseudo observations for both end-points. This is likely due to the fact that the Fine-Gray model assumes that the linear predictor has the same association with the cumulative incidence at all time points. We also notice that only one of the covariates in each model using pseudo values (age in the case of stroke and systolic blood pressure in the case of death without stroke) are associated with \\(p\\)-values smaller than 0.05.\nComparison with Exercise 5.8 is not meaningful - sorry!"
  },
  {
    "objectID": "Ch7.html#guinea-bissau-childhood-vaccination-study",
    "href": "Ch7.html#guinea-bissau-childhood-vaccination-study",
    "title": "7  Further topics",
    "section": "Guinea-Bissau childhood vaccination study",
    "text": "Guinea-Bissau childhood vaccination study\n\nRead data\n\nRSAS\n\n\n\n\nCode show/hide\nbissau <- read.csv(\"data/bissau.csv\")\nbissau$agem <- as.integer(bissau$age/30.4)\n\n\n\n\n\n\nCode show/hide\nproc import \ndatafile=\"data/bissau.csv\"\n    out=bissau\n    dbms = csv\n    replace;\nrun;\ndata bissau; \n    set bissau; \n    agem = int(age/30.4);\nrun; \n\n\n\n\n\n\n\nTable 8.1\n\nRSAS\n\n\n\n\nCode show/hide\n# Cox model - full cohort\nlibrary(survival)\noptions(contrasts=c(\"contr.treatment\", \"contr.poly\"))\ncoxph(Surv(fuptime, dead != 0) ~ factor(bcg) + factor(agem), data = bissau)\n\n\nCall:\ncoxph(formula = Surv(fuptime, dead != 0) ~ factor(bcg) + factor(agem), \n    data = bissau)\n\n                  coef exp(coef) se(coef)      z      p\nfactor(bcg)1  -0.34678   0.70696  0.14604 -2.374 0.0176\nfactor(agem)1  0.11490   1.12176  0.23205  0.495 0.6205\nfactor(agem)2 -0.25702   0.77335  0.25861 -0.994 0.3203\nfactor(agem)3  0.19875   1.21987  0.24325  0.817 0.4139\nfactor(agem)4  0.34748   1.41550  0.23912  1.453 0.1462\nfactor(agem)5  0.31171   1.36576  0.25325  1.231 0.2184\nfactor(agem)6 -0.01077   0.98929  0.35339 -0.030 0.9757\n\nLikelihood ratio test=12.39  on 7 df, p=0.08834\nn= 5274, number of events= 222 \n\n\nCode show/hide\n# 12.5 pct sub-cohort\nbissau$s <- rbinom(nrow(bissau), 1, prob = 0.125)\nwith(bissau, table(dead, s))\n\n\n    s\ndead    0    1\n   0 4420  632\n   1  195   27\n\n\nCode show/hide\n# Case-cohort data\nbis2 <- subset(bissau, s == 0 & dead != 0 | s == 1)\nccfit <- cch(Surv(fuptime, dead!= 0) ~ factor(bcg) + factor(agem), \n             data = bis2, \n             subcoh=bis2$s, id=bis2$id, cohort.size=nrow(bissau))\nsummary(ccfit)\n\n\nCase-cohort analysis,x$method, Prentice \n with subcohort of 659 from cohort of 5274 \n\nCall: cch(formula = Surv(fuptime, dead != 0) ~ factor(bcg) + factor(agem), \n    data = bis2, subcoh = bis2$s, id = bis2$id, cohort.size = nrow(bissau))\n\nCoefficients:\n                Coef    HR  (95%   CI)     p\nfactor(bcg)1  -0.459 0.632 0.453 0.881 0.007\nfactor(agem)1  0.042 1.043 0.622 1.752 0.872\nfactor(agem)2 -0.141 0.868 0.492 1.534 0.627\nfactor(agem)3  0.249 1.283 0.743 2.217 0.372\nfactor(agem)4  0.549 1.731 0.999 2.999 0.050\nfactor(agem)5  0.459 1.583 0.889 2.819 0.119\nfactor(agem)6  0.159 1.172 0.536 2.563 0.690\n\n\nCode show/hide\n# Nested-case control\nlibrary(multipleNCC)\nlibrary(Epi)\n\n# Add noise to remove ties\n\nbis2$fuptime_noise <- jitter(bis2$fuptime, factor=1, amount = NULL)\n\nnccdata <- Epi::ccwc(exit=fuptime_noise, \n                     fail=dead!=0, \n                     data=bis2, \n                     include=list(bcg, agem), controls=3, silent=TRUE)\nsummary(clogit(Fail ~ factor(bcg) + factor(agem), data=nccdata))\n\n\nCall:\ncoxph(formula = Surv(rep(1, 888L), Fail) ~ factor(bcg) + factor(agem), \n    data = nccdata, method = \"exact\")\n\n  n= 888, number of events= 222 \n\n                  coef exp(coef) se(coef)      z Pr(>|z|)   \nfactor(bcg)1  -0.46553   0.62780  0.17947 -2.594  0.00949 **\nfactor(agem)1  0.10845   1.11455  0.26846  0.404  0.68623   \nfactor(agem)2 -0.08984   0.91407  0.29587 -0.304  0.76138   \nfactor(agem)3  0.41139   1.50891  0.28798  1.429  0.15313   \nfactor(agem)4  0.53956   1.71526  0.29036  1.858  0.06314 . \nfactor(agem)5  0.55564   1.74305  0.30871  1.800  0.07188 . \nfactor(agem)6  0.11164   1.11811  0.40294  0.277  0.78174   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n              exp(coef) exp(-coef) lower .95 upper .95\nfactor(bcg)1     0.6278     1.5929    0.4416    0.8925\nfactor(agem)1    1.1146     0.8972    0.6585    1.8863\nfactor(agem)2    0.9141     1.0940    0.5118    1.6324\nfactor(agem)3    1.5089     0.6627    0.8581    2.6533\nfactor(agem)4    1.7153     0.5830    0.9709    3.0303\nfactor(agem)5    1.7431     0.5737    0.9518    3.1922\nfactor(agem)6    1.1181     0.8944    0.5076    2.4630\n\nConcordance= 0.578  (se = 0.021 )\nLikelihood ratio test= 12.2  on 7 df,   p=0.09\nWald test            = 11.85  on 7 df,   p=0.1\nScore (logrank) test = 12.04  on 7 df,   p=0.1\n\n\n\n\n\n\nCode show/hide\n/* 1.: Fit Cox model */\nproc phreg data=bissau;\n  class bcg agem;\n  model fuptime*dead(0)=bcg agem / rl;\nrun;\n\n/* 2.: Create a 12.5 pct sub-cohort */\n\ndata bissau; \n    set bissau;\n    seed=260452;\n    s=ranbin(seed,1,0.125);\nrun;\nproc freq; \n    tables s*dead; \nrun;\n\n/* 3.: Fit Cox model to case-cohort data */\ndata casecoho; set bissau;\n    epsilon=0.001;\n    if dead=1 and s=0 then do;\n    d=1; start=fuptime-epsilon; stop=fuptime; w=1; output; end;\n    if dead=0 and s=1 then do;\n    d=0; start=0; stop=fuptime; w=1/0.125; output; end;\n    if dead=1 and s=1 then do;\n    d=0; start=0; stop=fuptime-epsilon; w=1/0.125; output;\n    d=1; start=fuptime-epsilon; stop=fuptime; w=1; output; end;\nrun;\n\nproc phreg data=casecoho covsandwich(aggregate);\n    class bcg agem;\n    model stop*d(0)=bcg agem/rl entry=start;\n    weight w; id id;\nrun;\n\n/* NCC MACRO */\n\ndata source; set bissau;\n    study_id=id;\n    age_entry=0;\n    age_dlo=fuptime;\n    censor=dead;\nrun;\n\n%macro caseset;\n    %let sampling = 1;\n    %let ratio = 3;\n    /* Enumerate Cases */\n    data cases;\n    set source ;\n    if censor = 1;\n    run;\n    data cases;\n    set cases end = eof;\n    if eof then call symput ('ncases', put(_n_,6.));\n    run;\n    /* Create Risk Set */\n    %do iter = 1 %to &ncases;\n    data temp_case;\n    set cases;\n\n    if _n_ = &iter ;\n    call symput ('rs', put(_n_,6.));\n    call symput ('age_rs', put(age_dlo,8.)); call symput ('case_id',\n    put(study_id,8.));\n    run;\n    data temp_control;\n    set source;\n    if age_entry  <= &age_rs  <= age_dlo;\n    /* Exclude Index Case */\n    if study_id = &case_id then delete;\n    number = ranuni(0);\n    age_rs = &age_rs;\n    censor = 0;\n    run;\n    /* Sample Controls */\n    %if &sampling = 1 %then %do;\n    proc sort data = temp_control;\n    by number;\n    data temp_control;\n    set temp_control;\n    by age_rs;\n    retain m;\n    if first.age_rs then m = 0;\n    m=m+1;\n    if m <= &ratio then output temp_control;\n    run;\n    %end; \n    /* End If Sampling = 1 */\n    /* Combine Case with Controls */\n    data rs_&iter;\n    set temp_case\n    temp_control;\n    rs = &rs;\n    age_rs = &age_rs;\n    run;\n    /* DM Output 'Clear'; Log 'Clear'; */\n\n    %end; \n    /* End Loop Creating Risk Set */\n    /* Append Risk Sets */\n    %do j = 2 %to &ncases;\n    proc append base = rs_1 data = rs_&j;\n    run;\n    %end;\n    data final; set rs_1; run;\n%mend ; \n/* End Macro */\n\n/* Invoke Macro */\n%caseset;\n\nproc phreg data=final;\nclass bcg agem;\n  model fuptime*censor(0)=bcg agem / rl;\n  strata rs;\nrun;"
  },
  {
    "objectID": "errata.html#chapter-2",
    "href": "errata.html#chapter-2",
    "title": "Errata",
    "section": "Chapter 2",
    "text": "Chapter 2\n\nP. 45: The in-text Poisson model estimates for baseline hazards should be \\(\\widehat{\\alpha}_1 = 0.090\\) \\((0.064, 0.127)\\), \\(\\widehat{\\alpha}_2 = 0.132\\) \\((0.089, 0.194)\\), \\(\\widehat{\\alpha}_3 = 0.092\\) \\((0.034, 0.251)\\). See also code and output."
  },
  {
    "objectID": "errata.html#chapter-3",
    "href": "errata.html#chapter-3",
    "title": "Errata",
    "section": "Chapter 3",
    "text": "Chapter 3\n\nSection 3.3, p. 76: A right bracket was missing before \\(dt\\) in \\[\\sum_i\\left(\\int_0^{\\infty}\\log\\bigl(Y_i(t)\\alpha_0(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)\\bigr)dN_i(t)-\\int_0^{\\infty}Y_i(t)\\alpha_0(t)\\exp(\\mathbf{\\beta}^{\\sf T}\\mathbf{Z}_i)dt\\right)\\]\nExercise 3.12, p. 116: Replace Table 2.12 by Table 3.2"
  },
  {
    "objectID": "errata.html#chapter-5",
    "href": "errata.html#chapter-5",
    "title": "Errata",
    "section": "Chapter 5",
    "text": "Chapter 5\n\nSection 5.1.3, p. 168: The equation for \\(\\frac{\\partial}{\\partial t}P_{01}(s,t)\\) should read \\[\\frac{\\partial}{\\partial t}P_{01}(s,t)=P_{00}(s,t)\\alpha_{01}(t)-P_{01}(s,t)\\alpha_{12}(t)\\]"
  },
  {
    "objectID": "errata.html#chapter-6",
    "href": "errata.html#chapter-6",
    "title": "Errata",
    "section": "Chapter 6",
    "text": "Chapter 6\n\nExercise 6.1.2, p. 243: A right bracket is missing after \\(dN(u)\\) in the second denominator\nExercise 6.1.2, p. 243: a factor \\(n\\) is missing on the r.h.s. of the equation for \\(\\frac{\\partial \\widehat{S}^w(t)}{\\partial w_i}\\vert_{\\mathbf{w}=1/n}\\)\nExercise 6.5, p. 244: It makes no sense to compare with Exercise 5.8"
  }
]