### Read data

::: {.panel-tabset}
## R
```{r}
#| label: read-pbc3
pbc3 <- data.frame(read.csv("data/pbc3.csv"))
pbc3$fail <- ifelse(pbc3$status != 0, 1, 0) # event/failure indicator
pbc3$tment_char <- ifelse(pbc3$tment == 0, "Placebo", "CyA")

# Add transformations of covariates 
pbc3$albnorm <- with(pbc3, (alb-35)*(alb>35))
pbc3$alb10 <- with(pbc3, alb/10)
pbc3$alb2 <- with(pbc3, alb10*alb10)

pbc3$bilihigh <- with(pbc3, (bili-17.1)*(bili>17.1))
pbc3$bilitoohigh <- with(pbc3, (bili-34.2)*(bili>34.2))
pbc3$bilimuchtoohigh <- with(pbc3, (bili-51.3)*(bili>51.3))
pbc3$bili100 <- with(pbc3, bili/100)
pbc3$bili2 <- with(pbc3, bili100*bili100)

pbc3$log2bili <- with(pbc3, log2(bili))
pbc3$log2bili2 <- with(pbc3, log2bili*log2bili)

pbc3$logbilihigh <- with(pbc3, (log2bili-log2(17.1))*(bili>17.1))
pbc3$logbilitoohigh <- with(pbc3, (log2bili-log2(34.2))*(bili>34.2))
pbc3$logbilimuchtoohigh <- with(pbc3, (log2bili-log2(51.3))*(bili>51.3))
```

## SAS
```{r}
#| label: read-pbc3-sas
#| eval: false 
#| output: false
proc import out=pbc3
	datafile="data/pbc3.csv"
	dbms=csv replace;
run;
	
data pbc3; 
	set pbc3;
	albnorm=(alb-35)*(alb>35);
	alb10=alb/10; alb2=alb10*alb10;
	bilihigh=(bili-17.1)*(bili>17.1);
	bilitoohigh=(bili-34.2)*(bili>34.2);
	bilimuchtoohigh=(bili-51.3)*(bili>51.3);
	bili100=bili/100; bili2=bili100*bili100;
	log2bili=log2(bili);
	logbilihigh=(log2bili-log2(17.1))*(bili>17.1);
	logbilitoohigh=(log2bili-log2(34.2))*(bili>34.2);
	logbilimuchtoohigh=(log2bili-log2(51.3))*(bili>51.3);
	log2bili2=log2bili*log2bili;
run;

```
:::

### Figure 4.2 

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.2-tab
#| out-width: 90%

# General plotting style 
library(ggplot2)
theme_general <- theme_bw() +
  theme(text = element_text(size = 20), 
        axis.text.x = element_text(size = 20), 
        axis.text.y = element_text(size = 20),
        legend.position = "bottom", 
        legend.title=element_blank(),
        legend.text = element_text(size = 20),
        legend.key.size = unit(2,"line"))

# Kaplan-Meier estimate per treatment
# Please note conf.type="log-log"
library(survival)
kmfit <- survfit(Surv(days, status != 0) ~ tment, data = pbc3, conf.type="log-log")

# Collect data for plot
# Note that the standard errors produced by survfit are for the cumulative hazard
kmdata <- data.frame(surv = kmfit$surv, 
                     time = kmfit$time, 
                     tment = c(rep(names(kmfit$strata)[1], kmfit$strata[1]), 
                               rep(names(kmfit$strata)[2], kmfit$strata[2])))

# Create Figure 4.2
fig4.2 <- ggplot(aes(x = time / 365.25, y = surv, linetype = tment), data = kmdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Survival probability") +
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), breaks = seq(0, 6, by = 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), limits = c(0,1)) +
  theme_general

fig4.2

```

## SAS
```{r}
#| eval: false 
#| output: false

* Kaplan-Meier plot per treatment; 
proc phreg data=pbc3;
	model days*status(0)=;
	strata tment;
	baseline out=survdat survival=km / method=pl;
run;

data survdat;
	set survdat; 
	daysyears = days/365.25; 
run; 

proc gplot data=survdat;
plot km*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Survival probability');
	symbol1  v=none i=stepjl c=red;
	symbol2  v=none i=stepjl c=blue;
run;
```
:::


### In-text: Kaplan-Meier estimates at 2 years

::: {.panel-tabset}
## R
```{r}
#| label: in-text-KM2yr
# 95 c.i. uses conf.type="log-log" - see above
summary(kmfit,times=2*365.25)
```
:::

### Figure 4.4

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.4
#| out-width: 90%
# Poisson model fit (like in Chapter 2)
# Cuts
cuts <- c(0, 2, 4) * 365.25
# event/failure indicator
pbc3$fail <- ifelse(pbc3$status != 0, 1, 0)
# Make the data ready using survSplit
pbc3mult <- survSplit(Surv(days, fail) ~ ., 
                      pbc3,
                      cut = cuts[-1], 
                      episode = "timegroup")

# Risk time
pbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] 

# Summarize
library(dplyr)
sumdata <- pbc3mult %>% 
  group_by(tment, timegroup) %>% 
  summarise(fail = sum(fail), 
            risktime = sum(days - cuts[timegroup])#,
            #logrisktime = sum(log(days))
  )
sumdata <- as.data.frame(sumdata)

# Placebo KM data from figure 4.2 model fit
tment1 <- subset(kmdata, tment == "tment=1")
# Estimated hazard per time group
sumdata$hazard_timegroup <- sumdata$fail / sumdata$risktime
# Add a numeric version of the treatment to the NA estimates
kmdata$tmentnum <- ifelse(kmdata$tment == "tment=0", 0, 1)
# Add piecewise constant hazard to data
kmdata$pwch <- NULL

# Between time 0 and 2
kmdata$pwch[kmdata$time <= 2 * 365.25] <- kmdata$time[kmdata$time <= 2  * 365.25] * 
  (sumdata$hazard_timegroup[1] * (1-kmdata$tmentnum[kmdata$time <= 2  * 365.25]) + 
     sumdata$hazard_timegroup[4] * (kmdata$tmentnum[kmdata$time <= 2 * 365.25]))

# Between time 2 and 4
kmdata$pwch[kmdata$time > 2  * 365.25 & kmdata$time <= 4 * 365.25] <- 2  * 365.25 * 
  (sumdata$hazard_timegroup[1]
   * (1-kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25]) + 
     sumdata$hazard_timegroup[4] 
   * (kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25])) + 
  (kmdata$time[kmdata$time > 2 * 365.25 & kmdata$time <= 4 * 365.25] - 2 * 365.25) * 
  (sumdata$hazard_timegroup[2] 
   * (1-kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25]) + 
     sumdata$hazard_timegroup[5] 
   * (kmdata$tmentnum[kmdata$time > 2 * 365.25 & kmdata$time <= 4 * 365.25]))

# After time 4
kmdata$pwch[kmdata$time > 4 * 365.25] <- 2 * 365.25 * 
  (sumdata$hazard_timegroup[1] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + 
     sumdata$hazard_timegroup[4] * (kmdata$tmentnum[kmdata$time > 4 * 365.25])) + 
  2 * 365.25 *
  (sumdata$hazard_timegroup[2] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + 
     sumdata$hazard_timegroup[5] * (kmdata$tmentnum[kmdata$time > 4 * 365.25])) + 
  (kmdata$time[kmdata$time > 4 * 365.25] - 4 * 365.25) * 
  (sumdata$hazard_timegroup[3] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + 
     sumdata$hazard_timegroup[6] * (kmdata$tmentnum[kmdata$time > 4 * 365.25]))

# Change to estimated survival (plug-in formula)
kmdata$pwcs <- exp(-kmdata$pwch)
# Reformat for plot
piecepdata <- data.frame(surv = c(kmdata$surv, kmdata$pwcs), 
                         time = rep(kmdata$time, 2),
                         tmentnum = rep(kmdata$tmentnum, 2),
                         type = c(rep("Kaplan-Meier", length(kmdata$time)), 
                                  rep("Piece-wise exponential", length(kmdata$time))))
# Only for treatment 1
piecepdata1 <- subset(piecepdata, tmentnum == 1)

# Create Figure 4.4
fig4.4 <- ggplot(aes(x = time / 365.25, y = surv, linetype = type), 
                data = subset(piecepdata1, type == "Kaplan-Meier")) + 
  geom_step(linewidth = 1) + 
  geom_line(aes(x = time/ 365.25, y = surv, linetype = type), linewidth = 1,
            data = subset(piecepdata1, type == "Piece-wise exponential")) + 
  labs(linetype = "Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Survival probability") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general
fig4.4
```
:::

### Figure 4.5


::: {.panel-tabset}
## R
```{r}
#| label: figure-4.5
#| out-width: 90%
# Cox model
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, 
                 method = "breslow")
# Unique days times 
fu <- sort(unique(pbc3$days))
# Data for prediction
preddata <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                       alb = rep(38, length(fu) * 2),
                       log2bili = rep(log2(45), length(fu) * 2), 
                       days = c(fu, fu),
                       status = rep(1, length(fu) * 2))

# Linear predictor
preds <- predict(coxfit, newdata = preddata, type = "survival")
preddata$preds <- preds

# Create Figure 4.5
fig4.5 <- ggplot(aes(x = days / 365.25, y = preds, linetype = as.factor(tment)), 
                data = preddata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Estimated survival function") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general 
fig4.5
```
:::

### Figure 4.6

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.6
#| out-width: 90%
# Add log(-log(S(t)))
preddata$logminlogsurv <- with(preddata, log(-log(preds)))

# Create Figure 4.6
fig4.6 <- ggplot(aes(x = days / 365.25, y = logminlogsurv, linetype = as.factor(tment)), 
                data = preddata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("log(-log(survival function))") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05))) +
  theme_general

fig4.6
```
:::


### Figure 4.7

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.7
#| out-width: 90%
# g-formula
# We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)
# We need to have n survival curves * 2
# make a double data set with extra Z
pbc3_counterfact <- pbc3
pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment
pbc3_double <- rbind(pbc3, pbc3_counterfact)

# Baseline survival
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, 
                 method = "breslow")
pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))
allsurv <-
  lapply(1:nrow(pbc3_double),
       function(i)
         pred$surv ^
         exp(coef(coxfit)[1] * pbc3_double$tment[i] +
               coef(coxfit)[2] * pbc3_double$alb[i] +
               coef(coxfit)[3] * pbc3_double$log2bili[i]))
potout <-
  data.frame(surv = unlist(allsurv),
           tment = rep(pbc3_double$tment, each = length(pred$time)),
           time = rep(pred$time, times = nrow(pbc3)*2))

# Average over values
library(dplyr)
sumdata <- potout %>%
  group_by(tment, time) %>%
  summarise(average_pred = mean(surv, na.rm = TRUE),
            .groups = c("keep"))
sumdata <- as.data.frame(sumdata)

# Create Figure 4.7
fig4.7 <- ggplot(aes(x = time / 365.25, y = average_pred, linetype = as.factor(tment)),
                data = sumdata) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) +
  xlab("Time since randomization (years)") +
  ylab("Estimated survival function (g-formula)") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general 

fig4.7
```
:::


### In-text: Cox and g-formula

::: {.panel-tabset}
## R
```{r}
#| label: in-text-cox-gform
library(riskRegression)
subpbc<-subset(pbc3, !is.na(alb))
subpbc$tment<-relevel(factor(subpbc$tment),ref="0")
cfit <- coxph(Surv(days, fail) ~ tment + alb + log2bili, data = subpbc, 
                 method = "breslow",y=TRUE,x=TRUE)
atecfit<-ate(cfit, data = subpbc, treatment = "tment", times = 2*365.25,
             cause=1, verbose=F)
summary(atecfit,type="meanRisk",se=T)
summary(atecfit,type="diffRisk",se=T)
# Survival instead of failure risk
1-atecfit$meanRisk$estimate

# Bootstrap
atecfitB<-ate(cfit, data = subpbc, treatment = "tment", times = 2*365.25,
             cause=1, verbose=F, B=1000)
summary(atecfitB,type="meanRisk",se=T)
summary(atecfitB,type="diffRisk",se=T)

# using mets package
library(mets)
cfitmets <- phreg(Surv(days, fail) ~ tment + alb + log2bili, data = subpbc)
summary(survivalG(cfitmets, subpbc, time = 2*365.25))
```
:::

### Figure 4.8

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.8
#| out-width: 90%
# Product representation based on Breslow estimator
# Survival prediction
preds <- basehaz(coxfit, centered = F)

# For tment=0, alb=38, log2bili=log2(45)
dA_tment0 <- diff(c(0, preds$hazard 
                    * exp(coef(coxfit)[1]*0 + coef(coxfit)[2]*38 + coef(coxfit)[3] * log2(45) )))
surv_tment0 <- cumprod(1 - dA_tment0)

# For tment=1, alb=38, log2bili=log2(45)
dA_tment1 <- diff(c(0, preds$hazard 
                    * exp(coef(coxfit)[1]*1 + coef(coxfit)[2]*38 + coef(coxfit)[3] * log2(45) )))
surv_tment1 <- cumprod(1 - dA_tment1)

pdata <- data.frame(surv = c(surv_tment0, surv_tment1),
                    time = c(preds$time, preds$time), 
                    tment = c(rep("0", length(preds$time)),
                              rep("1", length(preds$time))))

# Create Figure 4.8
fig4.8 <- ggplot(aes(x = time / 365.25, y = surv, linetype = as.factor(tment)), 
                data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Estimated survival function") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general

fig4.8
```
:::

### Table 4.1

::: {.panel-tabset}
## R
```{r}
#| label: table-4.1
# Non-parametric, Kaplan Meier
np_km <- survfit(Surv(days, status != 0) ~ tment, data = pbc3)

kmdata <- data.frame(surv = np_km$surv, 
                      time = np_km$time, 
                     strata = c(rep(names(np_km$strata[1]), np_km$strata[[1]]), 
                              rep(names(np_km$strata[2]), np_km$strata[[2]])))
# Restrict to each treat
kmdata0 <- subset(kmdata, strata == "tment=0")
kmdata1 <- subset(kmdata, strata == "tment=1")

# rmst
library(RISCA)
rmst0 <- rmst(times = kmdata0$time, surv.rates = kmdata0$surv, max.time = 3 * 365.25, type = "s")
rmst1 <- rmst(times = kmdata1$time, surv.rates = kmdata1$surv, max.time = 3 * 365.25, type = "s")

# Cox model, alb = 38, bili = 45
# Cox model fit with covariates tment, alb and log2bili
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, 
                method = "breslow")

# Unique followup times 
fu <- sort(unique(pbc3$days))

# Data for prediction
preddata1 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                       alb = rep(38, length(fu) * 2),
                       log2bili = rep(log2(45), length(fu) * 2), 
                       days = c(fu, fu),
                       status = rep(1, length(fu) * 2)
)

# Linear predictor
preds1 <- predict(coxfit, newdata = preddata1, type = "survival")

preddata1$preds <- preds1

cox10 <- subset(preddata1, tment == "0")
cox11 <- subset(preddata1, tment == "1")

# Rmst 
rmstcox10 <- rmst(times = cox10$days, surv.rates = cox10$preds, max.time = 3 * 365.25, type = "s")
rmstcox11 <- rmst(times = cox11$days, surv.rates = cox11$preds, max.time = 3 * 365.25, type = "s")

# Cox for alb = 20 and bili = 90 

# Data for prediction
preddata2 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                        alb = rep(20, length(fu) * 2),
                        log2bili = rep(log2(90), length(fu) * 2), 
                        days = c(fu, fu),
                        status = rep(1, length(fu) * 2)
)

# Linear predictor
preds2 <- predict(coxfit, newdata = preddata2, type = "survival")

preddata2$preds <- preds2

cox20 <- subset(preddata2, tment == "0")
cox21 <- subset(preddata2, tment == "1")

# Rmst 
rmstcox20 <- rmst(times = cox20$days, surv.rates = cox20$preds, max.time = 3 * 365.25, type = "s")
rmstcox21 <- rmst(times = cox21$days, surv.rates = cox21$preds, max.time = 3 * 365.25, type = "s")

# Cox model, g-formula

# We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)
# We need to have n survival curves * 2
# make a double data set with extra Z
pbc3_counterfact <- pbc3
pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment
pbc3_double <- rbind(pbc3, pbc3_counterfact)

# Baseline survival
pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))

allsurv <-
  lapply(1:nrow(pbc3_double),
         function(i)
           pred$surv ^
           exp(coef(coxfit)[1] * pbc3_double$tment[i] +
                 coef(coxfit)[2] * pbc3_double$alb[i] +
                 coef(coxfit)[3] * pbc3_double$log2bili[i]))

potout <-
  data.frame(surv = unlist(allsurv),
             tment = rep(pbc3_double$tment, each = length(pred$time)),
             time = rep(pred$time, times = nrow(pbc3)*2)
  )

# Average over values
require(dplyr)
sumdata <- potout %>%
  group_by(tment, time) %>%
  summarise(average_pred = mean(surv, na.rm = TRUE),
            .groups = c("keep"))
sumdata <- as.data.frame(sumdata)


# Split data per group
coxg0 <- subset(sumdata, tment == "0")
coxg1 <- subset(sumdata, tment == "1")

# Rmst 
rmstcoxg0 <- rmst(times = coxg0$time, surv.rates = coxg0$average_pred, max.time = 3 * 365.25, type = "s")
rmstcoxg1 <- rmst(times = coxg1$time, surv.rates = coxg1$average_pred, max.time = 3 * 365.25, type = "s")

##### BOOTSTRAP FOR SE'S #####

# Resample data sets 

B <- 200
bootdata <- list()
kmres <- cox1res <- cox2res <- coxgres <- list()

#colnames(kmres) <- colnames(cox1res) <- colnames(cox2res) <- colnames(coxgres) <- c("rmst0", "rmst1")


for (b in 1:B){
  bootdata[[b]] <- pbc3[sample(1:nrow(pbc3), size = nrow(pbc3), replace = T),]
  
  ###### KM #######
  np_km <- survfit(Surv(days, status != 0) ~ tment, data = bootdata[[b]])
  
  kmdata <- data.frame(surv = np_km$surv, 
                       time = np_km$time, 
                       strata = c(rep(names(np_km$strata[1]), np_km$strata[[1]]), 
                                  rep(names(np_km$strata[2]), np_km$strata[[2]])))
  # Restrict to each treat
  kmdata0 <- subset(kmdata, strata == "tment=0")
  kmdata1 <- subset(kmdata, strata == "tment=1")
  
  # rmst
  rmst0 <- rmst(times = kmdata0$time, surv.rates = kmdata0$surv, max.time = 3 * 365.25, type = "s")
  rmst1 <- rmst(times = kmdata1$time, surv.rates = kmdata1$surv, max.time = 3 * 365.25, type = "s")

  kmres[[b]] <- c(rmst0, rmst1)
  
  
  ###### Cox 1 #######
  
  coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = bootdata[[b]], 
                  method = "breslow")
  
  # Unique followup times 
  fu <- sort(unique(pbc3$days))
  
  # Data for prediction
  preddata1 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                          alb = rep(38, length(fu) * 2),
                          log2bili = rep(log2(45), length(fu) * 2), 
                          days = c(fu, fu),
                          status = rep(1, length(fu) * 2))
  
  # Linear predictor
  preds1 <- predict(coxfit, newdata = preddata1, type = "survival")
  preddata1$preds <- preds1
  cox10 <- subset(preddata1, tment == "0")
  cox11 <- subset(preddata1, tment == "1")
  
  # Rmst 
  rmstcox10 <- rmst(times = cox10$days, surv.rates = cox10$preds, max.time = 3 * 365.25, type = "s")
  rmstcox11 <- rmst(times = cox11$days, surv.rates = cox11$preds, max.time = 3 * 365.25, type = "s")
    cox1res[[b]] <- c(rmstcox10, rmstcox11)
  
  ###### Cox 2 #######

  # Cox for alb = 20 and bili = 90   
  # Data for prediction
  preddata2 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                          alb = rep(20, length(fu) * 2),
                          log2bili = rep(log2(90), length(fu) * 2), 
                          days = c(fu, fu),
                          status = rep(1, length(fu) * 2))
  
  # Linear predictor
  preds2 <- predict(coxfit, newdata = preddata2, type = "survival")
  preddata2$preds <- preds2
  cox20 <- subset(preddata2, tment == "0")
  cox21 <- subset(preddata2, tment == "1")
  
  # Rmst 
  rmstcox20 <- rmst(times = cox20$days, surv.rates = cox20$preds, max.time = 3 * 365.25, type = "s")
  rmstcox21 <- rmst(times = cox21$days, surv.rates = cox21$preds, max.time = 3 * 365.25, type = "s")
  cox2res[[b]] <- c(rmstcox20, rmstcox21) 
  
  
  ##### Cox - g formula #######
  
  # We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)
  # We need to have n survival curves * 2
  # make a double data set with extra Z
  pbc3_counterfact <- bootdata[[b]]
  pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment
  pbc3_double <- rbind(bootdata[[b]], pbc3_counterfact)
  
  # Baseline survival
  pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))
  
  allsurv <-
    lapply(1:nrow(pbc3_double),
           function(i)
             pred$surv ^
             exp(coef(coxfit)[1] * pbc3_double$tment[i] +
                   coef(coxfit)[2] * pbc3_double$alb[i] +
                   coef(coxfit)[3] * pbc3_double$log2bili[i]))
  
  potout <-
    data.frame(surv = unlist(allsurv),
               tment = rep(pbc3_double$tment, each = length(pred$time)),
               time = rep(pred$time, times = nrow(pbc3)*2)
    )
  
  # Average over values
  require(dplyr)
  sumdata <- potout %>%
    group_by(tment, time) %>%
    summarise(average_pred = mean(surv, na.rm = TRUE),
              .groups = c("keep"))
  sumdata <- as.data.frame(sumdata)

  # Split data per group
  coxg0 <- subset(sumdata, tment == "0")
  coxg1 <- subset(sumdata, tment == "1")
  
  # Rmst 
  rmstcoxg0 <- rmst(times = coxg0$time, surv.rates = coxg0$average_pred, max.time = 3 * 365.25, type = "s")
  rmstcoxg1 <- rmst(times = coxg1$time, surv.rates = coxg1$average_pred, max.time = 3 * 365.25, type = "s")
  coxgres[[b]] <- c(rmstcoxg0, rmstcoxg1)
}

kmreso <- do.call("rbind", kmres)
cox1reso <- do.call("rbind", cox1res)
cox2reso <- do.call("rbind", cox2res)
coxgreso <- do.call("rbind", coxgres)

print("Finally, numbers for the Table:")
# For non-parametric, KM
apply(kmreso, 2, mean)/365.25
apply(kmreso, 2, sd)/365.25

# For Cox 1
apply(cox1reso, 2, mean)/365.25
apply(cox1reso, 2, sd)/365.25

# For Cox 2
apply(cox2reso, 2, mean)/365.25
apply(cox2reso, 2, sd)/365.25

# For Cox g formula
apply(coxgreso, 2, mean)/365.25
apply(coxgreso, 2, sd)/365.25
```
:::


### Table 4.1 mets non-parametric version

::: {.panel-tabset}
## R
```{r}
#| label: table-4.1-mets
# non-parametric could also be done using mets package
library(mets)
out1 <- phreg(Surv(days/365.25,fail)~strata(tment),data=pbc3)
rm1 <- resmean.phreg(out1,times=3)
summary(rm1)

resmeanIPCW(Event(days/365.25,fail)~1, data=subset(pbc3,tment==0),time=3,model="linear")
resmeanIPCW(Event(days/365.25,fail)~1, data=subset(pbc3,tment==1),time=3,model="linear")

# or
options(contrasts=c("contr.treatment", "contr.poly"))
out<-resmeanIPCW(Event(days/365.25,fail)~-1+factor(tment),data=pbc3,time=3,model="linear",
            cens.model = ~strata(tment))
estimate(out)

```
:::

### Figure 4.10

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.10
#| out-width: 90%

# Cumulative incidences are estimated using Aalen-Johansen

# Overall survival 
overall_surv <- survfit(Surv(days, status != 0) ~ 1, 
                        data = subset(pbc3, tment_char == "Placebo"))

# Cause 1 survival: transplantation
library(mets)
cause1_cif <- cif(Event(days, status) ~ 1, 
                  data = subset(pbc3, tment_char == "Placebo"), 
                  cause = 1)

# Cause 2 survival: death w/o transplantation
cause2_cif <- cif(Event(days, status) ~ 1, 
                  data = subset(pbc3, tment_char == "Placebo"), 
                  cause = 2)

# Get them on the same time scale - book keeping

alltimes <- overall_surv$time
cause1st <- stepfun(x = cause1_cif$cumhaz[,1], y = c(0, cause1_cif$cumhaz[,2]))
cause1times <- cause1st(v = alltimes)

cause2st <- stepfun(x = cause2_cif$cumhaz[,1], y = c(0, cause2_cif$cumhaz[,2]))
cause2times <- cause2st(v = alltimes)


# Collect the data 
data_comb <- data.frame(cif = c(overall_surv$surv + cause1times + cause2times, 
                                cause1times + cause2times, 
                                cause1times),
                        time = c(alltimes, alltimes, alltimes),
                        type = c(rep("Overall", length(alltimes)), 
                                 rep("Transplantation + death without transplantation", length(alltimes)), 
                                 rep("Transplantation", length(alltimes)))
                        )

# Create Figure 4.10
fig4.10 <- ggplot(aes(x = time / 365.25, y = cif, linetype = type), 
                data = data_comb) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Stacked cumulative incidence and survival") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.position="bottom",
        legend.box="vertical",
        text = element_text(size=21), 
        legend.key.width = unit(1, "cm"))

fig4.10
```
:::


### Figure 4.11

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.11
#| out-width: 90%

# Cumulative incidences are (wrongly) estimated using Kaplan-Meier

# Overall survival 
overall_surv <- survfit(Surv(days, status != 0) ~ 1, 
                        data = subset(pbc3, tment_char == "Placebo"))

# Cause 1 survival: transplantation, KM
cause1_cif_w <- survfit(Surv(days, status == 1) ~ 1, 
                        data = subset(pbc3, tment_char == "Placebo"))

# Cause 2 survival: death w/o transplantation, KM
cause2_cif_w <- survfit(Surv(days, status == 2) ~ 1, 
                      data = subset(pbc3, tment_char == "Placebo"))

# Get them on the same time scale - book keeping
alltimes <- overall_surv$time
cause1st <- stepfun(x = cause1_cif_w$time, y = c(0, cause1_cif_w$surv))
cause1times <- cause1st(v = alltimes)

cause2st <- stepfun(x = cause2_cif_w$time, y = c(0, cause2_cif_w$surv))
cause2times <- cause2st(v = alltimes)

# Collect the data 
data_comb <- data.frame(cif_w = c(overall_surv$surv + 1-cause1times + 1-cause2times, 
                                1-cause1times + 1-cause2times, 
                                1-cause1times),
                        time = c(alltimes, alltimes, alltimes),
                        type = c(rep("Overall", length(alltimes)), 
                                 rep("Transplantation + death without transplantation", length(alltimes)), 
                                 rep("Transplantation", length(alltimes)))
)



# Create Figure
fig4.11 <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type), 
                 data = data_comb) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Stacked cumulative incidence and survival") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 1.1), 
                     breaks = seq(0, 1.1, 0.1)) +
  theme_general + 
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.box="vertical",
        text = element_text(size=21), 
        legend.key.width = unit(1, "cm"))
fig4.11
```
:::


### Figure 4.12 (a)

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.12a
#| out-width: 90%

# Overall
overall_cox <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili + sex + age,
                        data = subset(pbc3, !is.na(alb)),
                     method = "breslow", eps=1e-9)

# Cause 1: transplantation
cause1_cox <- coxph(Surv(days, status == 1) ~ tment + alb + log2bili + sex + age,
                    data = subset(pbc3, !is.na(alb)), 
                    method = "breslow", eps=1e-9)

# Cause 2: death w/o transplantation
cause2_cox <- coxph(Surv(days, status == 2) ~ tment + alb + log2bili + sex + age,
                    data = subset(pbc3, !is.na(alb)), 
                    method = "breslow", eps=1e-9)


# for tment = placebo, age = 40, alb = 38, bili = log2(45) and sex = F
newd <- data.frame(tment = 0, age = 40, 
                   alb = 38, log2bili = log2(45), 
                   sex = 0)
est_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz 

est_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz 

est_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv

# Calculate S, and F1 and F2
alltimes <- basehaz(overall_cox, centered = F)$time

A <- cumsum(diff(c(0, est_cause1 + est_cause2)))
dA <- diff(c(0, A))
S <- cumprod(1-dA) #exp(-cumsum(dA)) 
A1 <- est_cause1
A2 <- est_cause2

dat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))
dat2 <- subset(dat, dA > 0)
dat2$lagS <- with(dat2, c(0, S[-length(S)])) 

dat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))
dat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))


# Collect the data
data_comb <- with(dat2, 
                  data.frame(cif_w = c(rep(1, length(alltimes)),
                                       F1 + F2,
                                       F1),
                             time = c(alltimes, alltimes, alltimes),
                             type = c(rep("Overall", length(alltimes)),
                                      rep("Transplantation + death without transplantation", length(alltimes)),
                                      rep("Transplantation", length(alltimes)))
                  ))


# Create Figure
fig4.12a <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),
                 data = data_comb) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Type") +
  xlab("Time since randomization (years)") +
  ylab("Stacked cumulative incidence and survival") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general +
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.box="vertical",
        text = element_text(size=22), 
        legend.key.width = unit(1, "cm"))

fig4.12a
```
:::


### Figure 4.12 (b)

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.12b
#| out-width: 90%
# for tment = placebo, age = 40, alb = 20, bili = log2(90) and sex = F
newd <- data.frame(tment = 0, age = 40, 
                    alb = 20, log2bili = log2(90), 
                    sex = 0)

est_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz

est_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz

est_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv


# Calculate S, and F1 and F2
alltimes <- basehaz(overall_cox, centered = F)$time

A <- cumsum(diff(c(0, est_cause1 + est_cause2)))
dA <- diff(c(0, A))
S <- cumprod(1-dA) #exp(-cumsum(dA)) 
A1 <- est_cause1
A2 <- est_cause2

dat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))
dat2 <- subset(dat, dA > 0)
dat2$lagS <- with(dat2, c(0, S[-length(S)])) 

dat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))
dat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))


# Collect the data
data_comb <- with(dat2, 
                  data.frame(cif_w = c(rep(1, length(alltimes)),
                                  F1 + F2,
                                  F1),
                        time = c(alltimes, alltimes, alltimes),
                        type = c(rep("Overall", length(alltimes)),
                                 rep("Transplantation + death without transplantation", length(alltimes)),
                                 rep("Transplantation", length(alltimes)))))

# Create Figure
fig4.12b <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),
                 data = data_comb) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Type") +
  xlab("Time since randomization (years)") +
  ylab("Stacked cumulative incidence and survival") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general +
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.box="vertical",
        text = element_text(size=22), 
        legend.key.width = unit(1, "cm"))


fig4.12b
```
:::


### Figure 4.12 (c)

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.12c
#| out-width: 90%

# for tment = placebo, age = 60, alb = 38, bili = log2(45) and sex = F
newd <- data.frame(tment = 0, age = 60, 
                   alb = 38, log2bili = log2(45), 
                   sex = 0)

est_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz

est_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz

est_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv


# Calculate S, and F1 and F2
alltimes <- basehaz(overall_cox, centered = F)$time

A <- cumsum(diff(c(0, est_cause1 + est_cause2)))
dA <- diff(c(0, A))
S <- cumprod(1-dA) #exp(-cumsum(dA)) 
A1 <- est_cause1
A2 <- est_cause2

dat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))
dat2 <- subset(dat, dA > 0)
dat2$lagS <- with(dat2, c(0, S[-length(S)])) 

dat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))
dat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))


# Collect the data
data_comb <- with(dat2, 
                  data.frame(cif_w = c(rep(1, length(alltimes)), F1 + F2, F1),
                             time = c(alltimes, alltimes, alltimes),
                             type = c(rep("Overall", length(alltimes)),
                                      rep("Transplantation + death without transplantation",
                                          length(alltimes)),
                                      rep("Transplantation", length(alltimes)))))

# Create Figure
fig4.12c <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),
                 data = data_comb) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Type") +
  xlab("Time since randomization (years)") +
  ylab("Stacked cumulative incidence and survival") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.position="bottom",
        legend.box="vertical",
        text = element_text(size=22), 
        legend.key.width = unit(1, "cm"))


fig4.12c
```
:::


### Table 4.2

::: {.panel-tabset}
## R
```{r}
#| label: table-4.2
library("survRM2")

# No adjustment 
coxsurv <- coxph(Surv(days, status != 0) ~ strata(tment), data = pbc3, 
                      method = "breslow")

# death w/o transplant
cox1 <- coxph(Surv(days, status == 2) ~ strata(tment), data = pbc3, 
              method = "breslow")

# transplant
cox2 <- coxph(Surv(days, status == 1) ~ strata(tment), data = pbc3, 
              method = "breslow")

time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard
strat <- basehaz(cox1, center = F)$strata
  
# Cumulative incidence
F01_plac <- cumsum(surv[strat == "tment=0"] * diff(c(0,lamd1[strat == "tment=0"])))
F01_cya <- cumsum(surv[strat == "tment=1"] * diff(c(0,lamd1[strat == "tment=1"])))

F02_plac <- cumsum(surv[strat == "tment=0"] * diff(c(0,lamd2[strat == "tment=0"])))
F02_cya <- cumsum(surv[strat == "tment=1"] * diff(c(0,lamd2[strat == "tment=1"])))

timep <- time[strat == "tment=0"]
timec <- time[strat == "tment=1"]

# Transplantation
scenario1.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F02_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F02_cya[timec <= 3 * 365.25])/365.25)

# Death without transplantation
scenario1.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F01_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F01_cya[timec <= 3 * 365.25])/365.25)



### ----------------------------------------------------------------------------------------

# Sex = F, age = 40, alb = 38, bili = 45
coxsurv <- coxph(Surv(days, status != 0) ~ tment + sex + age + alb + log2bili, data = pbc3, 
              method = "breslow")
# death w/o transplant
cox1 <- coxph(Surv(days, status == 2) ~ tment + sex + age + alb + log2bili, data = pbc3, 
              method = "breslow")
# transplant
cox2 <- coxph(Surv(days, status == 1) ~ tment + sex + age + alb + log2bili, data = pbc3, 
              method = "breslow")


# Predictions 
newd <- data.frame(tment = c(0, 1),
                   sex = c(0, 0),
                   alb = c(38, 38), 
                   age = c(40, 40),
                   log2bili = log2(c(45, 45)))

# predictions
lpsurv <- predict(coxsurv, newd, type = "lp", reference = "zero")
lpcox1 <- predict(cox1, newd, type = "lp", reference = "zero")
lpcox2 <- predict(cox2, newd, type = "lp", reference = "zero")

time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard

# Linear predictors
surv_plac <- surv^exp(lpsurv[1])
surv_cya <- surv^exp(lpsurv[2])

lamd1_plac <- lamd1 * exp(lpcox1[1])
lamd1_cya <- lamd1 * exp(lpcox1[2])

lamd2_plac <- lamd2 * exp(lpcox2[1])
lamd2_cya <- lamd2 * exp(lpcox2[2])

# Cumulative incidence
F01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))
F01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))

F02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))
F02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))

timep <- timec <- time

# Transplantation
scenario2.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F02_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F02_cya[timec <= 3 * 365.25])/365.25)

# Death without transplantation
scenario2.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F01_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F01_cya[timec <= 3 * 365.25])/365.25)


### ----------------------------------------------------------------------------------------

# Sex = F, age = 40, alb = 20, bili = 90 #
# Predictions 
newd <- data.frame(tment = c(0, 1),
                   sex = c(0, 0),
                   alb = c(20, 20), 
                   age = c(40, 40),
                   log2bili = log2(c(90, 90)))

# predictions
lpsurv <- predict(coxsurv, newd, type = "lp", reference = "zero")
lpcox1 <- predict(cox1, newd, type = "lp", reference = "zero")
lpcox2 <- predict(cox2, newd, type = "lp", reference = "zero")

time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard

# Linear predictors
surv_plac <- surv^exp(lpsurv[1])
surv_cya <- surv^exp(lpsurv[2])

lamd1_plac <- lamd1 * exp(lpcox1[1])
lamd1_cya <- lamd1 * exp(lpcox1[2])

lamd2_plac <- lamd2 * exp(lpcox2[1])
lamd2_cya <- lamd2 * exp(lpcox2[2])

# Cumulative incidence
F01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))
F01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))

F02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))
F02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))

timep <- timec <- time

# Transplantation
scenario3.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F02_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F02_cya[timec <= 3 * 365.25])/365.25)

# Death without transplantation
scenario3.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F01_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F01_cya[timec <= 3 * 365.25])/365.25)

### ----------------------------------------------------------------------------------------

##### Sex = F, age = 60, alb = 38, bili = 45 #####

# Predictions 
newd <- data.frame(tment = c(0, 1),
                   sex = c(0, 0),
                   alb = c(38, 38), 
                   age = c(60, 60),
                   log2bili = log2(c(45, 45)))

# predictions
lpsurv <- predict(coxsurv, newd, type = "lp", reference = "zero")
lpcox1 <- predict(cox1, newd, type = "lp", reference = "zero")
lpcox2 <- predict(cox2, newd, type = "lp", reference = "zero")

time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard

# Linear predictors
surv_plac <- surv^exp(lpsurv[1])
surv_cya <- surv^exp(lpsurv[2])

lamd1_plac <- lamd1 * exp(lpcox1[1])
lamd1_cya <- lamd1 * exp(lpcox1[2])

lamd2_plac <- lamd2 * exp(lpcox2[1])
lamd2_cya <- lamd2 * exp(lpcox2[2])

# Cumulative incidence
F01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))
F01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))

F02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))
F02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))

timep <- timec <- time

# Transplantation
scenario4.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F02_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F02_cya[timec <= 3 * 365.25])/365.25)

# Death without transplantation
scenario4.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F01_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F01_cya[timec <= 3 * 365.25])/365.25)

print("")

# Scenario 1
scenario1.T;scenario1.D 
# Scenario 2
scenario2.T;scenario2.D 
# Scenario 3
scenario3.T;scenario3.D 
# Scenario 4
scenario4.T;scenario4.D

# Scenario 1 (no adjustment) done using mets package:
library(mets)
# Transplantation
resmeanIPCW(Event(days/365.25,status)~1, cause=1,
            data=subset(pbc3,tment==0),time=3,model="linear")
resmeanIPCW(Event(days/365.25,status)~1, cause=1,
            data=subset(pbc3,tment==1),time=3,model="linear")
# Death without transplantation
resmeanIPCW(Event(days/365.25,status)~1, cause=2,
            data=subset(pbc3,tment==0),time=3,model="linear")
resmeanIPCW(Event(days/365.25,status)~1, cause=2,
            data=subset(pbc3,tment==1),time=3,model="linear")
```
:::

### Table 4.4

::: {.panel-tabset}

## R
```{r}
#| label: table-4.4
library("survRM2")
pbcny <- subset(pbc3,!is.na(alb))
time <- pbcny$days/365.25
status <- pbcny$status!=0
arm <- pbcny$tment=="1"
alb <- pbcny$alb
logbili <- log2(pbcny$bili)
x <- cbind(alb, logbili)
rmst2(time, status, arm, tau=3, covariates=x)
```

#### Now using package mets 

```{r}
#| label: table-4.4mets
# using mets package gives a bit different model???
library(mets)
options(contrasts=c("contr.treatment", "contr.poly"))
summary(resmeanIPCW(Event(days/365.25,fail)~factor(tment)+alb+log2bili,
                 data=subset(pbc3,!is.na(alb)),time=3,model="linear", 
                 cens.model = ~strata(tment)))
```

## SAS
```{r}
#| eval: false 
#| output: false
data pbc3;
  set pbc3;
  followup=days/365.25;
run;
proc rmstreg data=pbc3 tau=3;
  model followup*status(0)=tment alb log2bili / 
        link=linear method=ipcw(strata=tment);
run;
```

:::

### Table 4.5

::: {.panel-tabset}

## R
```{r}
#| label: table-4.5

# Fine-Gray models using package mets
library(mets)
options(contrasts=c("contr.treatment", "contr.poly"))
# Transplant
subpbc<-subset(pbc3, !is.na(alb))
subpbc$tment<-factor(subpbc$tment)
fgtrans<-cifreg(Event(days,status)~factor(tment)+alb+log2bili+sex+age, cause=1, 
                data = subpbc, propodds=NULL, cox.prep=TRUE)
fgtrans
# Death w/o transplant
fgdeath<-cifreg(Event(days,status)~factor(tment)+alb+log2bili+sex+age, cause=2, 
                data = subpbc, propodds=NULL)

fgdeath

# Alternatively using package survival
# Fine-Gray model for transplant
# Two step
fg_c1 <- finegray(Surv(days, as.factor(status)) ~ tment + alb + log2bili + sex + age,
                  etype = 1, data = subset(pbc3, !is.na(alb)))
fg_c1 <- finegray(Surv(days, as.factor(status)) ~ .,
                  etype = 1, data = subset(pbc3, !is.na(alb)))

cifreg(Event(days,status)~tment+alb+log2bili+sex+age, cause=1, 
       data = subset(pbc3, !is.na(alb)),propodds=NULL)


fg_c1 <- finegray(Surv(days, as.factor(status)) ~ .,etype = 1, data = pbc3)
fg_cox1 <- coxph(Surv(fgstart, fgstop, fgstatus) ~ tment + alb + log2bili + sex + age, 
                weight = fgwt, data = fg_c1, eps=1e-9)
summary(fg_cox1)

# Fine-Gray model for death w/o transplant
# Two step
fg_c2 <- finegray(Surv(days, as.factor(status)) ~ tment + alb + log2bili + sex + age,
                  etype = 2, data = subset(pbc3, !is.na(alb)))
fg_c2 <- finegray(Surv(days, as.factor(status)) ~ .,
                  etype = 2, data = subset(pbc3, !is.na(alb)))

fg_cox2 <- coxph(Surv(fgstart, fgstop, fgstatus) ~ tment + alb + log2bili + sex + age, 
                weight = fgwt, data = fg_c2, ties = "breslow", eps=1e-9)
summary(fg_cox2)
```


## SAS
```{r}
#| eval: false 
#| output: false

* Death without transplantation; 
proc phreg data=pbc3;
	class sex (ref='1') tment (ref='0');
	model days*status(0)=sex tment age log2bili alb / rl eventcode=2;
run;

* Transplantation; 
proc phreg data=pbc3;
	class sex (ref='1') tment (ref='0');
	model days*status(0)=sex tment age log2bili alb / rl eventcode=1;
run;
```
:::



### In-text: Fine-Gray and g-formula

::: {.panel-tabset}
## R
```{r}
#| label: in-text-fg-gform
# Fine-Gray models using package mets
library(mets)
options(contrasts=c("contr.treatment", "contr.poly"))
# Transplant
subpbc<-subset(pbc3, !is.na(alb))
subpbc$trt<-factor(subpbc$tment)
fgtrans<-cifreg(Event(days,status)~trt+alb+log2bili+sex+age, cause=1, 
                data = subpbc, propodds=NULL, cox.prep=TRUE)
fgtrans
# Death w/o transplant
fgdeath<-cifreg(Event(days,status)~trt+alb+log2bili+sex+age, cause=2, 
                data = subpbc, propodds=NULL, cox.prep=TRUE)

fgdeath
# cannnot make this work!!!
# Transplant
#summary(
summary(survivalG(fgtrans, subpbc, 2*365.25))
# Death w/o transplant
summary(survivalG(fgdeath, subpbc, 2*365.25))
```
:::


### Figure 4.17 (a)

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.17a
#| out-width: 90%
# Fine-Gray model for death w/o transplant
# Predictions 
# Placebo
newd_t0 <- data.frame(tment = 0, age = 40, 
                      alb = 38, log2bili = log2(45), 
                      sex = 0)
C2_t0 <- survfit(fg_cox2, ctype = 2, newdata = newd_t0)$cumhaz 

# CyA
newd_t1 <- data.frame(tment = 1, age = 40, 
                      alb = 38, log2bili = log2(45), 
                      sex = 0)
C2_t1 <- survfit(fg_cox2, ctype = 2, newdata = newd_t1)$cumhaz 

time <- survfit(fg_cox2, ctype = 2, newdata = newd_t1)$time

# Make data ready for plotting 
pdata <- data.frame(time = c(time, time), 
                    cif = c(C2_t0, C2_t1), 
                    tment = c(rep("Placebo", length(time)), 
                              rep("CyA", length(time))))

# Create Figure
fig4.17a <- ggplot(aes(x = time / 365.25, y = cif, linetype = tment), 
                 data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_manual("Treatment", values = c("dashed", "solid"),guide = guide_legend(reverse = TRUE)) + 
  xlab("Time since randomization (years)") + 
  ylab('Cumulative incidence for death w/o transplantation') + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  theme(legend.position="bottom", legend.box = "vertical")
      #  legend.key.size = unit(1.5, 'cm'))

fig4.17a
```
:::

### Figure 4.17 (b)

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.17b
#| out-width: 90%

# Fine-Gray model for transplant
# Predictions 
# Placebo
C1_t0 <- survfit(fg_cox1, ctype = 2, newdata = newd_t0)$cumhaz 

# CyA
C1_t1 <- survfit(fg_cox1, ctype = 2, newdata = newd_t1)$cumhaz 

time <- survfit(fg_cox1, ctype = 2, newdata = newd_t1)$time

# Make data ready for plotting 
pdata <- data.frame(time = c(time, time), 
                    cif = c(C1_t0, C1_t1), 
                    tment = c(rep("Placebo", length(time)), 
                              rep("CyA", length(time))))

# Create Figure
fig4.17b <- ggplot(aes(x = time / 365.25, y = cif, linetype = tment), 
                 data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_manual("Treatment", values = c("dashed", "solid"),guide = guide_legend(reverse = TRUE)) + 
  xlab("Time since randomization (years)") + 
  ylab('Cumulative incidence for transplantation') + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  theme(legend.box = "vertical",
        legend.key.size = unit(1.5, 'cm'))


fig4.17b
```
:::

### Table 4.6 - mets?

::: {.panel-tabset}
## R
```{r}
#| label: table-4.6-mets
library(mets)
rmc1 <- cif.yearslost(Event(days/365.25,status)~strata(tment),cause=1,
            data=pbc3, time=3)
summary(rmc1)

options(contrasts=c("contr.treatment", "contr.poly"))
resmeanIPCW(Event(days/365.25,status)~factor(tment),cause=1,
            data=pbc3, time=3, model="linear", cens.model=~strata(tment))

resmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili+sex+age,cause=1,
            data=subset(pbc3,!is.na(alb)), time=3, model="linear",
            cens.model=~strata(tment))

resmeanIPCW(Event(days/365.25,status)~factor(tment),cause=2,
            data=pbc3, time=3, model="linear",
            cens.model=~strata(tment))

resmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili+sex+age,cause=2,
            data=subset(pbc3,!is.na(alb)), time=3, model="linear",
            cens.model=~strata(tment))
```
:::

<!-- ```{r} -->
<!-- #| label: table-4.6 -->
<!-- library(survival) -->

<!-- rmtl.ipcw <- function(times, event, eoi=1, tau, cov=NULL, strata=FALSE, group=NULL){ -->

<!--   if(is.null(group) & strata==TRUE){stop('Please specify a factor variable to statify weights.')} -->
<!--   if(is.null(cov)){print('Warning: Fitting intercept-only model.')} -->

<!--   # Round event times to avoid issues with survival() package rounding differently -->
<!--   y <- round(times,4) -->
<!--   id <- 1:length(y) -->

<!--   # Recode so delta1 reflects event of interest, delta2 reflects all competing events. Assumes 0=censoring. -->
<!--   delta1 <- ifelse(event==eoi, 1, 0) -->
<!--   delta2 <- ifelse(event!=0 & event!=eoi, 1, 0) -->

<!--   # Overall quantities -->
<!--   x <- cbind(int=rep(1, length(y)), cov) -->
<!--   p <- length(x[1,]) -->
<!--   if(is.null(group)){group <- as.factor(rep(1, length(y)))} -->

<!--   # Recode event indicators to reflect status at chosen tau -->
<!--   delta1[y>tau] <- 0 -->
<!--   delta2[y>tau] <- 0 -->

<!--   y <- pmin(y, tau) -->
<!--   y1 <- y*delta1 -->

<!--   d0 <- 1 - (delta1 + delta2) # censoring indicator -->
<!--   d0[y==tau] <- 0  # If follow-up lasts til tau, the event will not count as 'censored' in IPCW weights -->
<!--   weights <- NULL -->

<!--   ## Calculate IPCW weights (option to stratify by group) ## -->

<!--   if(strata==TRUE){ -->
<!--     for(aa in 1:length(unique(group))){ -->
<!--       # Subset the group -->
<!--       a <- unique(group)[aa] -->
<!--       d0.a <- d0[group==a] -->
<!--       delta1.a <- delta1[group==a] -->
<!--       y.a <- y[group==a] -->
<!--       x.a <- x[group==a,] -->
<!--       n.a <- length(d0.a) -->
<!--       orig.id.a0 <- orig.id.a <- id[group==a] -->

<!--       # Order the event times -->
<!--       id.a <- order(y.a) -->
<!--       y.a <- y.a[id.a] -->
<!--       d0.a <- d0.a[id.a] -->
<!--       delta1.a <- delta1.a[id.a] -->
<!--       x.a <- x.a[id.a,] -->
<!--       orig.id.a <- orig.id.a[id.a] -->

<!--       # Derive IPCW -->
<!--       fit <- survfit(Surv(y.a, d0.a) ~ 1) -->
<!--       weights.a <- (1-d0.a)/rep(fit$surv, table(y.a)) -->

<!--       # Need to assign weights accordig to original ID, not ordered by event time -->
<!--       linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a) -->
<!--       weights <- rbind(weights, linked.weights.a) -->
<!--     } -->
<!--   } else { -->

<!--     # Order the event times -->
<!--     id.a <- order(y) -->
<!--     y.a <- y[id.a] -->
<!--     d0.a <- d0[id.a] -->
<!--     delta1.a <- delta1[id.a] -->
<!--     x.a <- x[id.a,] -->
<!--     orig.id.a <- id[id.a] -->

<!--     # Derive IPCW -->
<!--     fit <- survfit(Surv(y.a, d0.a) ~ 1) -->
<!--     weights.a <- (1-d0.a)/rep(fit$surv, table(y.a)) -->

<!--     # Need to assign weights accordig to original ID, not ordered by event time -->
<!--     linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a) -->
<!--     weights <- rbind(weights, linked.weights.a) -->
<!--   } -->


<!--   ## Fit linear model ## -->

<!--   # Link weights to original data frame -->
<!--   #colnames(weights) <- c('id', 'weights') -->
<!--   #data <- merge(data0, weights, by='id') -->
<!--   #summary(lm(tau-y ~ x-1, weights=weights, data=data)) -->

<!--   # Or, sort weights and use vectors -->
<!--   w <- weights[order(weights[, 1]),2] -->
<!--   lm.fit <- lm(delta1*(tau-y) ~ x-1, weights=w) -->


<!--   ## Derive SE ## -->

<!--   beta0 <- lm.fit$coef -->
<!--   error <- tau - y - as.vector(x %*% beta0) -->
<!--   score <- x * w * error -->

<!--   # Kappa (sandwich variance components) stratified by group -->
<!--   kappa <- NULL -->

<!--   for(aa in 1:length(unique(group))){ -->

<!--     # Subset the group -->
<!--     a <- unique(group)[aa] -->
<!--     d0.a <- d0[group==a] -->
<!--     delta1.a <- delta1[group==a] -->
<!--     y.a <- y[group==a] -->
<!--     x.a <- x[group==a,] -->
<!--     n.a <- length(d0.a) -->
<!--     orig.id.a0 <- orig.id.a <- id[group==a] -->
<!--     score.a <- score[group==a,] -->

<!--     # Kappa calculations for sandwich variance -->
<!--     kappa.a <- matrix(0, n.a, p) -->

<!--     for(i in 1:n.a){ -->
<!--       kappa1 <- score.a[i,] -->

<!--       kappa2 <- apply(score.a[y.a>=y.a[i],,drop=F], 2, sum)*(d0.a[i])/sum(y.a>=y.a[i]) -->

<!--       kappa3 <- rep(0, p) -->

<!--       for(k in 1:n.a){ -->
<!--         if(y.a[k]<=y.a[i]){ -->
<!--           kappa3 <- kappa3+apply(score.a[y.a>=y.a[k],,drop=F], 2, sum)*(d0.a[k])/(sum(y.a>=y.a[k]))^2 -->
<!--         } -->
<!--       } -->

<!--       kappa.a[i,] <- kappa1+kappa2-kappa3 -->
<!--     } -->
<!--     kappa <- rbind(kappa, kappa.a) -->
<!--   } -->

<!--   # Transpose the kappas rbinded from each group gives pxp matrix -->
<!--   gamma <- t(kappa) %*% kappa -->

<!--   A <- t(x) %*% x -->
<!--   varbeta <- solve(A) %*% gamma %*% solve(A) -->
<!--   se <- sqrt(diag(varbeta)) -->


<!--   #--- Return results --- -->

<!--   res <- cbind(beta=lm.fit$coef, se=se, cil=lm.fit$coef-(1.96*se), ciu=lm.fit$coef+(1.96*se), -->
<!--                z=lm.fit$coef/se, p=2*(1-pnorm(abs(lm.fit$coef/se)))) -->
<!--   #rownames(res) <- c("Intercept", colnames(x[,-1])) FJERNET! PKA 030621 -->

<!--   allres <- list(res=res, varbeta=varbeta) -->
<!--   print(round(res, 3)) -->
<!--   invisible(allres) -->
<!--   return(res[,1]) #tilf?jet 040322 -->
<!-- } -->


<!-- rmtl.ipcw(pbc3$days,pbc3$status,eoi=1,tau=3,cov=pbc3$tment) -->

<!-- rmtl.ipcw(pbc3$days,pbc3$status,eoi=2,tau=3,cov=pbc3$tment) -->

<!-- pbcny <- subset(pbc3,!is.na(alb)) -->
<!-- time <- pbcny$days -->
<!-- status <- pbcny$status -->
<!-- arm <- pbcny$tment -->
<!-- sex <- pbcny$sex -->
<!-- age <- pbcny$age -->
<!-- alb <- pbcny$alb -->
<!-- logbili <- log2(pbcny$bili) -->

<!-- x <- cbind(arm, sex, age, alb, logbili) -->

<!-- rmtl.ipcw(time, status, eoi=1, tau=3, x) -->
<!-- rmtl.ipcw(time, status, eoi=2, tau=3, x) -->

<!-- x1 <- cbind(arm, alb, logbili) -->

<!-- rmtl.ipcw(time, status, eoi=1, tau=3, x1) -->
<!-- rmtl.ipcw(time, status, eoi=2, tau=3, x1) -->
<!-- ``` -->



### Figure 4.21 

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.23
#| out-width: 90%

# Overall survival 
overall_surv <- survfit(Surv(days, status != 0) ~ 1, data = pbc3)

# Censoring
cens_surv <- survfit(Surv(days, status == 0) ~ 1, data = pbc3)

# Make data ready for plotting 
pdata <- data.frame(time = c(overall_surv$time, cens_surv$time), 
                    surv = c(overall_surv$surv, cens_surv$surv), 
                    type = c(rep("Treatment failure", length(overall_surv$time)), 
                             rep("Censoring", length(overall_surv$time))))

# Create Figure
fig4.21 <- ggplot(aes(x = time / 365.25, y = surv, linetype = type), 
                 data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_manual("Type", values = c("dashed", "solid")) + 
  xlab("Time since randomization (years)") + 
  ylab('Probability') + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  theme(legend.box = "vertical",
        legend.key.size = unit(1.5, 'cm'))


fig4.21
```
:::

### In-text: Cox for censoring 

::: {.panel-tabset}
## R
```{r}
#| label: in-text-cox-cens
#| out-width: 90%
library(broom)
tidy(coxph(Surv(days, status == 0) ~ tment, data = pbc3, method = "breslow"))
tidy(coxph(Surv(days, status == 0) ~ alb, data = pbc3, method = "breslow"))
tidy(coxph(Surv(days, status == 0) ~ bili, data = pbc3, method = "breslow"))
```
:::
