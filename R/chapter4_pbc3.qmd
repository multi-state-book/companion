### Read data

::: {.panel-tabset}
## R
```{r}
#| label: read-pbc3-r
pbc3 <- read.csv("data/pbc3.csv")
pbc3$followup<-pbc3$days/365.25
pbc3$fail <- ifelse(pbc3$status != 0, 1, 0) # event/failure indicator
pbc3$tment_char <- ifelse(pbc3$tment == 0, "Placebo", "CyA")
# Add transformations of covariates 
pbc3$albnorm <- with(pbc3, (alb-35)*(alb>35))
pbc3$alb10 <- with(pbc3, alb/10)
pbc3$alb2 <- with(pbc3, alb10*alb10)

pbc3$bilihigh <- with(pbc3, (bili-17.1)*(bili>17.1))
pbc3$bilitoohigh <- with(pbc3, (bili-34.2)*(bili>34.2))
pbc3$bilimuchtoohigh <- with(pbc3, (bili-51.3)*(bili>51.3))
pbc3$bili100 <- with(pbc3, bili/100)
pbc3$bili2 <- with(pbc3, bili100*bili100)

pbc3$log2bili <- with(pbc3, log2(bili))
pbc3$log2bili2 <- with(pbc3, log2bili*log2bili)

pbc3$logbilihigh <- with(pbc3, (log2bili-log2(17.1))*(bili>17.1))
pbc3$logbilitoohigh <- with(pbc3, (log2bili-log2(34.2))*(bili>34.2))
pbc3$logbilimuchtoohigh <- with(pbc3, (log2bili-log2(51.3))*(bili>51.3))
```

## SAS
```{sas}
#| label: read-pbc3-sas
#| eval: false 
#| output: false
proc import out=pbc3
	datafile="data/pbc3.csv"
	dbms=csv replace;
run;
	
data pbc3; 
	set pbc3;
	followup=days/365.25; /* time in years */
	albnorm=(alb-35)*(alb>35);
	alb10=alb/10; alb2=alb10*alb10;
	bilihigh=(bili-17.1)*(bili>17.1);
	bilitoohigh=(bili-34.2)*(bili>34.2);
	bilimuchtoohigh=(bili-51.3)*(bili>51.3);
	bili100=bili/100; bili2=bili100*bili100;
	log2bili=log2(bili);
	logbilihigh=(log2bili-log2(17.1))*(bili>17.1);
	logbilitoohigh=(log2bili-log2(34.2))*(bili>34.2);
	logbilimuchtoohigh=(log2bili-log2(51.3))*(bili>51.3);
	log2bili2=log2bili*log2bili;
run;

```
:::

### Figure 4.2 

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.2-r
#| out-width: 90%

# General plotting style 
library(ggplot2)
theme_general <- theme_bw() +
  theme(text = element_text(size = 20), 
        axis.text.x = element_text(size = 20), 
        axis.text.y = element_text(size = 20),
        legend.position = "bottom", 
        legend.title=element_blank(),
        legend.text = element_text(size = 20),
        legend.key.size = unit(2,"line"))

# Kaplan-Meier estimate per treatment
# Please note conf.type="log-log"
library(survival)
kmfit <- survfit(Surv(days, status != 0) ~ tment, data = pbc3, conf.type="log-log")

# Collect data for plot
# Note that the standard errors produced by survfit are for the cumulative hazard
kmdata <- data.frame(surv = kmfit$surv, 
                     time = kmfit$time, 
                     tment = c(rep(names(kmfit$strata)[1], kmfit$strata[1]), 
                               rep(names(kmfit$strata)[2], kmfit$strata[2])))

# Create Figure 4.2
fig4.2 <- ggplot(aes(x = time / 365.25, y = surv, linetype = tment), data = kmdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Survival probability") +
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), breaks = seq(0, 6, by = 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), limits = c(0,1)) +
  theme_general

fig4.2

```

## SAS
```{sas}
#| label: figure-4.2-sas
#| eval: false 
#| output: false

* Kaplan-Meier plot per treatment;
* Using proc lifetest;
proc lifetest data=pbc3 notable plots=(survival(nocensor));
  time followup*status(0);
	strata tment;
run;

* Using proc phreg;
proc phreg data=pbc3;
	model days*status(0)=;
	strata tment;
	baseline out=survdat survival=km / method=pl;
run;

data survdat;
	set survdat; 
	daysyears = days/365.25; 
run; 

proc gplot data=survdat;
plot km*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Survival probability');
	symbol1  v=none i=stepjl c=red;
	symbol2  v=none i=stepjl c=blue;
run;
```
:::


### In-text: Kaplan-Meier estimates at 2 years

::: {.panel-tabset}
## R
```{r}
#| label: in-text-KM2yr-r
# 95 c.i. uses conf.type="log-log" - see above
summary(kmfit,times=2*365.25)
```

## SAS
```{sas}
#| label: in-text-KM2yr-sas
#| eval: false 
#| output: false

proc lifetest data=pbc3 timelist=2;
  time followup*status(0);
  strata tment;
run;

proc print data=survdat;
  where days<=2*365.25;
run;
```
:::

### Figure 4.4

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.4-r
#| out-width: 90%
# Poisson model fit (like in Chapter 2)
# Cuts
cuts <- c(0, 2, 4) * 365.25
# event/failure indicator
pbc3$fail <- ifelse(pbc3$status != 0, 1, 0)
# Make the data ready using survSplit
pbc3mult <- survSplit(Surv(days, fail) ~ ., 
                      pbc3,
                      cut = cuts[-1], 
                      episode = "timegroup")

# Risk time
pbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] 

# Summarize
library(dplyr)
sumdata <- pbc3mult %>% 
  group_by(tment, timegroup) %>% 
  summarise(fail = sum(fail), 
            risktime = sum(days - cuts[timegroup])#,
            #logrisktime = sum(log(days))
  )
sumdata <- as.data.frame(sumdata)

# Placebo KM data from figure 4.2 model fit
tment1 <- subset(kmdata, tment == "tment=1")
# Estimated hazard per time group
sumdata$hazard_timegroup <- sumdata$fail / sumdata$risktime
# Add a numeric version of the treatment to the NA estimates
kmdata$tmentnum <- ifelse(kmdata$tment == "tment=0", 0, 1)
# Add piecewise constant hazard to data
kmdata$pwch <- NULL

# Between time 0 and 2
kmdata$pwch[kmdata$time <= 2 * 365.25] <- kmdata$time[kmdata$time <= 2  * 365.25] * 
  (sumdata$hazard_timegroup[1] * (1-kmdata$tmentnum[kmdata$time <= 2  * 365.25]) + 
     sumdata$hazard_timegroup[4] * (kmdata$tmentnum[kmdata$time <= 2 * 365.25]))

# Between time 2 and 4
kmdata$pwch[kmdata$time > 2  * 365.25 & kmdata$time <= 4 * 365.25] <- 2  * 365.25 * 
  (sumdata$hazard_timegroup[1]
   * (1-kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25]) + 
     sumdata$hazard_timegroup[4] 
   * (kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25])) + 
  (kmdata$time[kmdata$time > 2 * 365.25 & kmdata$time <= 4 * 365.25] - 2 * 365.25) * 
  (sumdata$hazard_timegroup[2] 
   * (1-kmdata$tmentnum[kmdata$time > 2  * 365.25& kmdata$time <= 4 * 365.25]) + 
     sumdata$hazard_timegroup[5] 
   * (kmdata$tmentnum[kmdata$time > 2 * 365.25 & kmdata$time <= 4 * 365.25]))

# After time 4
kmdata$pwch[kmdata$time > 4 * 365.25] <- 2 * 365.25 * 
  (sumdata$hazard_timegroup[1] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + 
     sumdata$hazard_timegroup[4] * (kmdata$tmentnum[kmdata$time > 4 * 365.25])) + 
  2 * 365.25 *
  (sumdata$hazard_timegroup[2] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + 
     sumdata$hazard_timegroup[5] * (kmdata$tmentnum[kmdata$time > 4 * 365.25])) + 
  (kmdata$time[kmdata$time > 4 * 365.25] - 4 * 365.25) * 
  (sumdata$hazard_timegroup[3] * (1-kmdata$tmentnum[kmdata$time > 4 * 365.25]) + 
     sumdata$hazard_timegroup[6] * (kmdata$tmentnum[kmdata$time > 4 * 365.25]))

# Change to estimated survival (plug-in formula)
kmdata$pwcs <- exp(-kmdata$pwch)
# Reformat for plot
piecepdata <- data.frame(surv = c(kmdata$surv, kmdata$pwcs), 
                         time = rep(kmdata$time, 2),
                         tmentnum = rep(kmdata$tmentnum, 2),
                         type = c(rep("Kaplan-Meier", length(kmdata$time)), 
                                  rep("Piece-wise exponential", length(kmdata$time))))
# Only for treatment 1
piecepdata1 <- subset(piecepdata, tmentnum == 1)

# Create Figure 4.4
fig4.4 <- ggplot(aes(x = time / 365.25, y = surv, linetype = type), 
                data = subset(piecepdata1, type == "Kaplan-Meier")) + 
  geom_step(linewidth = 1) + 
  geom_line(aes(x = time/ 365.25, y = surv, linetype = type), linewidth = 1,
            data = subset(piecepdata1, type == "Piece-wise exponential")) + 
  labs(linetype = "Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Survival probability") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general
fig4.4
```

## SAS
```{sas}
#| label: figure-4.4-sas
#| eval: false 
#| output: false
data survdat; 
	set survdat;
	if days<=2 * 365.25 then
	pwch=exp(-(days*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)));
	if 2 * 365.25 <days<=4 * 365.25 then
	pwch=exp(-(2* 365.25*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)
	+(days-2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment)));
	if 4 * 365.25 <days then
	pwch=exp(-(2* 365.25 *(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)
	+(2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment)
	+(days-4* 365.25)*(2.0000000/8642*(1-tment)+2.0000000/7599*tment)));
run;

data survdat;
	set survdat; 
	daysyears = days/365.25; 
run; 

proc gplot data=survdat; 
	where tment=1;
	plot (km pwch)*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Survival probability');
	symbol1  v=none i=stepjl r=1 c=red;
	symbol2 v=none i=join r=1 c=blue;
run;
quit;
```
:::


### Figure 4.5

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.5-r
#| out-width: 90%
# Cox model
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, 
                 method = "breslow")
# Unique days times 
fu <- sort(unique(pbc3$days))
# Data for prediction
preddata <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                       alb = rep(38, length(fu) * 2),
                       log2bili = rep(log2(45), length(fu) * 2), 
                       days = c(fu, fu),
                       status = rep(1, length(fu) * 2))

# Linear predictor
preds <- predict(coxfit, newdata = preddata, type = "survival")
preddata$preds <- preds

# Create Figure 4.5
fig4.5 <- ggplot(aes(x = days / 365.25, y = preds, linetype = as.factor(tment)), 
                data = preddata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Estimated survival function") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general 
fig4.5
```

## SAS
```{sas}
#| label: figure-4.5-sas
#| eval: false 
#| output: false
data cov;
	tment=0; alb=38; log2bili=log2(45); output;
	tment=1; alb=38; log2bili=log2(45); output;
run;

proc phreg data=pbc3;
	model days*status(0)=tment alb log2bili/rl;
	baseline out=predsurv survival=surv covariates=cov/ method=breslow;
run;

data predsurv;
	set predsurv; 
	daysyears = days/365.25; 
run; 

proc gplot data=predsurv;
	plot surv*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Estimated survival function');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```
:::

### Figure 4.6

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.6-r
#| out-width: 90%
# Add log(-log(S(t)))
preddata$logminlogsurv <- with(preddata, log(-log(preds)))

# Create Figure 4.6
fig4.6 <- ggplot(aes(x = days / 365.25, y = logminlogsurv, linetype = as.factor(tment)), 
                data = preddata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("log(-log(survival function))") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05))) +
  theme_general

fig4.6
```
## SAS
```{sas}
#| label: figure-4.6-sas
#| eval: false 
#| output: false

data predsurv2; 
	set predsurv; 
	logminlogsurv = log(-log(surv)); 
run; 

data predsurv2;
	set predsurv2; 
	daysyears = days/365.25; 
run; 

proc gplot data=predsurv2;
	plot logminlogsurv*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=-7 to 0 by 1 minor=none label=(a=90 'log(-log(survival function))');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```

:::


### Figure 4.7

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.7-r
#| out-width: 90%
# g-formula
# We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)
# We need to have n survival curves * 2
# make a double data set with extra Z
pbc3_counterfact <- pbc3
pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment
pbc3_double <- rbind(pbc3, pbc3_counterfact)

# Baseline survival
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, 
                 method = "breslow")
pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))
allsurv <-
  lapply(1:nrow(pbc3_double),
       function(i)
         pred$surv ^
         exp(coef(coxfit)[1] * pbc3_double$tment[i] +
               coef(coxfit)[2] * pbc3_double$alb[i] +
               coef(coxfit)[3] * pbc3_double$log2bili[i]))
potout <-
  data.frame(surv = unlist(allsurv),
           tment = rep(pbc3_double$tment, each = length(pred$time)),
           time = rep(pred$time, times = nrow(pbc3)*2))

# Average over values
library(dplyr)
sumdata <- potout %>%
  group_by(tment, time) %>%
  summarise(average_pred = mean(surv, na.rm = TRUE),
            .groups = c("keep"))
sumdata <- as.data.frame(sumdata)

# Create Figure 4.7
fig4.7 <- ggplot(aes(x = time / 365.25, y = average_pred, linetype = as.factor(tment)),
                data = sumdata) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) +
  xlab("Time since randomization (years)") +
  ylab("Estimated survival function (g-formula)") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general 

fig4.7
```
## SAS
```{sas}
#| label: figure-4.7-sas
#| eval: false 
#| output: false

proc phreg data=pbc3;
	class tment;
	model days*status(0)=tment alb log2bili / rl;
	baseline out=gsurv survival=surv stderr=sd /
    method=breslow diradj group=tment;
run;
data gsurv;
	set gsurv; 
	daysyears = days/365.25; 
run; 
proc gplot data=gsurv;
	plot surv*daysyears=tment / haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none
  label=(a=90 'Estimated survival function (g-formula)');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```
:::


### In-text: g-formula from Cox

::: {.panel-tabset}
## R

#### Using riskRegression package

```{r}
#| label: in-text-cox-gform-riskregression
library(riskRegression)
subpbc<-subset(pbc3, !is.na(alb))
subpbc$tment<-relevel(factor(subpbc$tment),ref="0")
cfit <- coxph(Surv(days, fail) ~ tment + alb + log2bili, data = subpbc, 
                 method = "breslow",y=TRUE,x=TRUE)
atecfit<-ate(cfit, data = subpbc, treatment = "tment", times = 2*365.25,
             cause=1, verbose=F)
summary(atecfit,type="meanRisk",se=T)
summary(atecfit,type="diffRisk",se=T)
# Survival instead of failure risk
1-atecfit$meanRisk$estimate

# Bootstrap
atecfitB<-ate(cfit, data = subpbc, treatment = "tment", times = 2*365.25,
             cause=1, verbose=F, B=100)
summary(atecfitB,type="meanRisk",se=T)
summary(atecfitB,type="diffRisk",se=T)
```

#### Using mets package
```{r}
#| label: in-text-cox-gform-mets
library(mets)
cfitmets <- phreg(Surv(days, fail) ~ tment + alb + log2bili, data = subpbc)
summary(survivalG(cfitmets, subpbc, time = 2*365.25))
```

## SAS
```{sas}
#| label: in-text-cox-gform-sas
#| eval: false 
#| output: false

proc print data=gsurv;
  where days=714;
run;
```
:::

### Figure 4.8

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.8-r
#| out-width: 90%
# Product representation based on Breslow estimator
# Survival prediction
preds <- basehaz(coxfit, centered = F)

# For tment=0, alb=38, log2bili=log2(45)
dA_tment0 <- diff(c(0, preds$hazard 
                    * exp(coef(coxfit)[1]*0 + coef(coxfit)[2]*38 + coef(coxfit)[3] * log2(45) )))
surv_tment0 <- cumprod(1 - dA_tment0)

# For tment=1, alb=38, log2bili=log2(45)
dA_tment1 <- diff(c(0, preds$hazard 
                    * exp(coef(coxfit)[1]*1 + coef(coxfit)[2]*38 + coef(coxfit)[3] * log2(45) )))
surv_tment1 <- cumprod(1 - dA_tment1)

pdata <- data.frame(surv = c(surv_tment0, surv_tment1),
                    time = c(preds$time, preds$time), 
                    tment = c(rep("0", length(preds$time)),
                              rep("1", length(preds$time))))

# Create Figure 4.8
fig4.8 <- ggplot(aes(x = time / 365.25, y = surv, linetype = as.factor(tment)), 
                data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Estimated survival function") + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general

fig4.8
```

## SAS
```{sas}
#| label: figure-4.8-sas
#| eval: false 
#| output: false

proc phreg data=pbc3;
	*class tment;
	model days*status(0)=tment alb log2bili/rl;
	baseline out=predsurvpl survival=surv covariates=cov / method=pl;
run;

data predsurvpl;
	set predsurvpl; 
	daysyears = days/365.25; 
run; 

proc gplot data=predsurvpl;
	plot surv*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Estimated survival function');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```
:::

### Table 4.1

::: {.panel-tabset}
## R

#### Non-parametric using survival package
```{r}
#| label: table-4.1-r-nonparm
library(survival)
np_km <- survfit(Surv(days/365.25, status != 0) ~ tment, data = pbc3)
print(np_km,rmean=3)
```

#### Non-parametric using mets package

```{r}
#| label: table-4.1-r-mets
# non-parametric could also be done using mets package
library(mets)
out1 <- phreg(Surv(days/365.25,fail)~strata(tment),data=pbc3)
rm1 <- resmean.phreg(out1,times=3)
summary(rm1)

resmeanIPCW(Event(days/365.25,fail)~1, data=subset(pbc3,tment==0),time=3,model="linear")
resmeanIPCW(Event(days/365.25,fail)~1, data=subset(pbc3,tment==1),time=3,model="linear")

# or
options(contrasts=c("contr.treatment", "contr.poly"))
out<-resmeanIPCW(Event(days/365.25,fail)~-1+factor(tment),data=pbc3,time=3,model="linear",
            cens.model = ~strata(tment))
estimate(out)
```


#### Code for rest of table
```{r}
#| label: table-4.1-r-boot
#### Non-parametric using RISCA package
kmdata <- data.frame(surv = np_km$surv, 
                      time = np_km$time, 
                     strata = c(rep(names(np_km$strata[1]), np_km$strata[[1]]), 
                              rep(names(np_km$strata[2]), np_km$strata[[2]])))
# Restrict to each treat
kmdata0 <- subset(kmdata, strata == "tment=0")
kmdata1 <- subset(kmdata, strata == "tment=1")

# rmst
library(RISCA)
rmst0 <- rmst(times = kmdata0$time, surv.rates = kmdata0$surv, max.time = 3, type = "s")
rmst1 <- rmst(times = kmdata1$time, surv.rates = kmdata1$surv, max.time = 3, type = "s")

# Cox model, alb = 38, bili = 45
# Cox model fit with covariates tment, alb and log2bili
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = pbc3, 
                method = "breslow")

# Unique followup times 
fu <- sort(unique(pbc3$days))

# Data for prediction
preddata1 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                       alb = rep(38, length(fu) * 2),
                       log2bili = rep(log2(45), length(fu) * 2), 
                       days = c(fu, fu),
                       status = rep(1, length(fu) * 2)
)

# Linear predictor
preds1 <- predict(coxfit, newdata = preddata1, type = "survival")

preddata1$preds <- preds1

cox10 <- subset(preddata1, tment == "0")
cox11 <- subset(preddata1, tment == "1")

# Rmst 
rmstcox10 <- rmst(times = cox10$days, surv.rates = cox10$preds, max.time = 3 * 365.25, type = "s")
rmstcox11 <- rmst(times = cox11$days, surv.rates = cox11$preds, max.time = 3 * 365.25, type = "s")

# Cox for alb = 20 and bili = 90 

# Data for prediction
preddata2 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                        alb = rep(20, length(fu) * 2),
                        log2bili = rep(log2(90), length(fu) * 2), 
                        days = c(fu, fu),
                        status = rep(1, length(fu) * 2)
)

# Linear predictor
preds2 <- predict(coxfit, newdata = preddata2, type = "survival")

preddata2$preds <- preds2

cox20 <- subset(preddata2, tment == "0")
cox21 <- subset(preddata2, tment == "1")

# Rmst 
rmstcox20 <- rmst(times = cox20$days, surv.rates = cox20$preds, max.time = 3 * 365.25, type = "s")
rmstcox21 <- rmst(times = cox21$days, surv.rates = cox21$preds, max.time = 3 * 365.25, type = "s")

# Cox model, g-formula

# We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)
# We need to have n survival curves * 2
# make a double data set with extra Z
pbc3_counterfact <- pbc3
pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment
pbc3_double <- rbind(pbc3, pbc3_counterfact)

# Baseline survival
pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))

allsurv <-
  lapply(1:nrow(pbc3_double),
         function(i)
           pred$surv ^
           exp(coef(coxfit)[1] * pbc3_double$tment[i] +
                 coef(coxfit)[2] * pbc3_double$alb[i] +
                 coef(coxfit)[3] * pbc3_double$log2bili[i]))

potout <-
  data.frame(surv = unlist(allsurv),
             tment = rep(pbc3_double$tment, each = length(pred$time)),
             time = rep(pred$time, times = nrow(pbc3)*2)
  )

# Average over values
require(dplyr)
sumdata <- potout %>%
  group_by(tment, time) %>%
  summarise(average_pred = mean(surv, na.rm = TRUE),
            .groups = c("keep"))
sumdata <- as.data.frame(sumdata)


# Split data per group
coxg0 <- subset(sumdata, tment == "0")
coxg1 <- subset(sumdata, tment == "1")

# Rmst 
rmstcoxg0 <- rmst(times = coxg0$time, surv.rates = coxg0$average_pred, max.time = 3 * 365.25, type = "s")
rmstcoxg1 <- rmst(times = coxg1$time, surv.rates = coxg1$average_pred, max.time = 3 * 365.25, type = "s")

##### BOOTSTRAP FOR SE'S #####

# Resample data sets 

B<-200
bootdata <- list()
kmres <- cox1res <- cox2res <- coxgres <- list()

#colnames(kmres) <- colnames(cox1res) <- colnames(cox2res) <- colnames(coxgres) <- c("rmst0", "rmst1")


for (b in 1:B){
  bootdata[[b]] <- pbc3[sample(1:nrow(pbc3), size = nrow(pbc3), replace = T),]
  
  ###### KM #######
  np_km <- survfit(Surv(days, status != 0) ~ tment, data = bootdata[[b]])
  
  kmdata <- data.frame(surv = np_km$surv, 
                       time = np_km$time, 
                       strata = c(rep(names(np_km$strata[1]), np_km$strata[[1]]), 
                                  rep(names(np_km$strata[2]), np_km$strata[[2]])))
  # Restrict to each treat
  kmdata0 <- subset(kmdata, strata == "tment=0")
  kmdata1 <- subset(kmdata, strata == "tment=1")
  
  # rmst
  rmst0 <- rmst(times = kmdata0$time, surv.rates = kmdata0$surv, max.time = 3 * 365.25, type = "s")
  rmst1 <- rmst(times = kmdata1$time, surv.rates = kmdata1$surv, max.time = 3 * 365.25, type = "s")

  kmres[[b]] <- c(rmst0, rmst1)
  
  
  ###### Cox 1 #######
  
  coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili, data = bootdata[[b]], 
                  method = "breslow")
  
  # Unique followup times 
  fu <- sort(unique(pbc3$days))
  
  # Data for prediction
  preddata1 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                          alb = rep(38, length(fu) * 2),
                          log2bili = rep(log2(45), length(fu) * 2), 
                          days = c(fu, fu),
                          status = rep(1, length(fu) * 2))
  
  # Linear predictor
  preds1 <- predict(coxfit, newdata = preddata1, type = "survival")
  preddata1$preds <- preds1
  cox10 <- subset(preddata1, tment == "0")
  cox11 <- subset(preddata1, tment == "1")
  
  # Rmst 
  rmstcox10 <- rmst(times = cox10$days, surv.rates = cox10$preds, max.time = 3 * 365.25, type = "s")
  rmstcox11 <- rmst(times = cox11$days, surv.rates = cox11$preds, max.time = 3 * 365.25, type = "s")
    cox1res[[b]] <- c(rmstcox10, rmstcox11)
  
  ###### Cox 2 #######

  # Cox for alb = 20 and bili = 90   
  # Data for prediction
  preddata2 <- data.frame(tment = c(rep(0, length(fu)), rep(1, length(fu))), 
                          alb = rep(20, length(fu) * 2),
                          log2bili = rep(log2(90), length(fu) * 2), 
                          days = c(fu, fu),
                          status = rep(1, length(fu) * 2))
  
  # Linear predictor
  preds2 <- predict(coxfit, newdata = preddata2, type = "survival")
  preddata2$preds <- preds2
  cox20 <- subset(preddata2, tment == "0")
  cox21 <- subset(preddata2, tment == "1")
  
  # Rmst 
  rmstcox20 <- rmst(times = cox20$days, surv.rates = cox20$preds, max.time = 3 * 365.25, type = "s")
  rmstcox21 <- rmst(times = cox21$days, surv.rates = cox21$preds, max.time = 3 * 365.25, type = "s")
  cox2res[[b]] <- c(rmstcox20, rmstcox21) 
  
  
  ##### Cox - g formula #######
  
  # We want to predict responses if all subjects had been given both CyA and placebo (tment = 0,1)
  # We need to have n survival curves * 2
  # make a double data set with extra Z
  pbc3_counterfact <- bootdata[[b]]
  pbc3_counterfact$tment <- ifelse(pbc3_counterfact$tment == 1, 0, 1) # opposite treatment
  pbc3_double <- rbind(bootdata[[b]], pbc3_counterfact)
  
  # Baseline survival
  pred <- survfit(coxfit, newdata = data.frame(tment = 0, alb = 0, log2bili = 0))
  
  allsurv <-
    lapply(1:nrow(pbc3_double),
           function(i)
             pred$surv ^
             exp(coef(coxfit)[1] * pbc3_double$tment[i] +
                   coef(coxfit)[2] * pbc3_double$alb[i] +
                   coef(coxfit)[3] * pbc3_double$log2bili[i]))
  
  potout <-
    data.frame(surv = unlist(allsurv),
               tment = rep(pbc3_double$tment, each = length(pred$time)),
               time = rep(pred$time, times = nrow(pbc3)*2)
    )
  
  # Average over values
  require(dplyr)
  sumdata <- potout %>%
    group_by(tment, time) %>%
    summarise(average_pred = mean(surv, na.rm = TRUE),
              .groups = c("keep"))
  sumdata <- as.data.frame(sumdata)

  # Split data per group
  coxg0 <- subset(sumdata, tment == "0")
  coxg1 <- subset(sumdata, tment == "1")
  
  # Rmst 
  rmstcoxg0 <- rmst(times = coxg0$time, surv.rates = coxg0$average_pred, max.time = 3 * 365.25, type = "s")
  rmstcoxg1 <- rmst(times = coxg1$time, surv.rates = coxg1$average_pred, max.time = 3 * 365.25, type = "s")
  coxgres[[b]] <- c(rmstcoxg0, rmstcoxg1)
}

kmreso <- do.call("rbind", kmres)
cox1reso <- do.call("rbind", cox1res)
cox2reso <- do.call("rbind", cox2res)
coxgreso <- do.call("rbind", coxgres)
```

#### Cox (38,45) 
```{r}
#| label: table-4.1-r-cox1
apply(cox1reso, 2, mean)/365.25
apply(cox1reso, 2, sd)/365.25
```

#### Cox (20,90) 
```{r}
#| label: table-4.1-r-cox2
apply(cox2reso, 2, mean)/365.25
apply(cox2reso, 2, sd)/365.25
```

#### Cox g-formula
```{r}
#| label: table-4.1-r-gform
apply(coxgreso, 2, mean)/365.25
apply(coxgreso, 2, sd)/365.25
```

#### Cox g-formula using RISCA package
```{r}
#| label: table-4.1-r-gform-risca
pbc3$followup<-pbc3$days/365.25
coxf <- coxph(Surv(followup, fail) ~ tment + alb + log2bili,
                data = pbc3, method = "breslow")
library(RISCA)
gc.ate <- gc.survival(object=coxf, data=pbc3, 
                      group="tment", times="followup", failures="fail",
                      max.time=3, iterations=1000, effect="ATE")
rbind(Placebo=gc.ate$RMST0,CyA=gc.ate$RMST1)
```


## SAS

#### Non-parametric using PROC RMSTREG
```{sas}
#| label: table-4.1-sas-proc-rmstreg
#| eval: false 
#| output: false

proc sort data=pbc3 out=pbc3sorted;
	by tment;
run;
proc rmstreg data=pbc3sorted tau=3;
  by tment;
  model followup*status(0)= / 
        link=linear method=ipcw(strata=tment);
run;

* Bootstrapping using 'point='; 
data bootpbc;
	do sampnum = 1 to 1000; /* nboot=1000*/
		do i = 1 to 349;      /*nobs=349*/
			x=round(ranuni(0)*349); 
			set pbc3
			point=x;
			output;
		end;
	end;
	stop;
run;
proc sort data=bootpbc out=boot;
  by sampnum tment;
run;
proc rmstreg data=boot tau=3;
  by sampnum tment;
  model followup*status(0)= / 
        link=linear method=ipcw(strata=tment);
	ods output parameterestimates=pe;
run;
proc means data=pe mean stddev;
  class tment;
	var estimate;
run;
```

#### Macro and bootstrap data set

```{sas}
#| label: table-4.1-macro
#| eval: false 
#| output: false

* Bootstrapping using 'point='; 
data bootpbc;
	do sampnum = 1 to 1000; /* nboot=1000*/
		do i = 1 to 349;      /*nobs=349*/
			x=round(ranuni(0)*349); 
			set pbc3
			point=x;
			output;
		end;
	end;
	stop;
run;

* AUC under stepcurves; 
%macro areastepby(data,byvar,trt,grp,time,y,tau);
	data select;
		set &data;
		where &trt=&grp;
	run;

	data select;
		set select;
		by &byvar;
		retain mu oldt oldy;
		if first.&byvar then do;
			oldt=0; oldy=1; mu=0;
		end;
		if &time>&tau then do;
			&time=&tau; &y=oldy;
		end;
		if not first.&byvar then mu+oldy*(&time-oldt);
		if last.&byvar then do;
		if &time<&tau then mu+(&tau-&time)*&y; end;
		oldy=&y; oldt=&time;
	run;

	data last; set select;
		by  &byvar;
		if last.&byvar;
	run;
%mend areastepby;
```

#### Non-parametric using macro

```{sas}
#| label: table-4.1-nonparm
#| eval: false 
#| output: false

proc phreg data=bootpbc noprint;
	by sampnum;
	model followup*status(0)=;
	strata tment;
	baseline out=survdat survival=km / method=pl;
run;

%areastepby(survdat,sampnum,tment,0,followup,km,3);
title "Placebo";
proc means data=last mean stddev;
	var mu;
run;
%areastepby(survdat,sampnum,tment,1,followup,km,3);
title "CyA";
proc means data=last mean stddev;
	var mu;
run;
```

#### Cox (38,45) using macro

```{sas}
#| label: table-4.1-sas-38-45
#| eval: false 
#| output: false

data cov;
	tment=0; alb=38; log2bili=log2(45); output;
	tment=1; alb=38; log2bili=log2(45); output;
run;
proc phreg data=bootpbc noprint;
	by sampnum;
	model followup*status(0)=tment alb log2bili/rl;
	baseline out=predsurv survival=surv covariates=cov/ method=breslow;
run;

%areastepby(predsurv,sampnum,tment,0,followup,surv,3);
title "Placebo";
proc means data=last mean stddev;
	var mu;
run;
%areastepby(predsurv,sampnum,tment,1,followup,surv,3);
title "CyA";
proc means data=last mean stddev;
	var mu;
run;
```

#### Cox (20,90) using macro

```{sas}
#| label: table-4.1-sas-20-90
#| eval: false 
#| output: false

data cov;
	tment=0; alb=20; log2bili=log2(90); output;
	tment=1; alb=20; log2bili=log2(90); output;
run;
proc phreg data=bootpbc noprint;
	by sampnum;
	model followup*status(0)=tment alb log2bili/rl;
	baseline out=predsurv2 survival=surv covariates=cov/ method=breslow;
run;

%areastepby(predsurv2,sampnum,tment,0,followup,surv,3);
title "Placebo";
proc means data=last mean stddev;
	var mu;
run;
%areastepby(predsurv2,sampnum,tment,1,followup,surv,3);
title "CyA";
proc means data=last mean stddev;
	var mu;
run;
```

#### Cox g-formula using macro

```{sas}
#| label: table-4.1-sas-gform
#| eval: false 
#| output: false

proc phreg data=bootpbc noprint;
	by sampnum;
	class tment (ref='0');
	model followup*status(0)=tment alb log2bili/rl;
	baseline out=gsurv survival=surv stderr=se/ method=breslow diradj group=tment;
run;

%areastepby(gsurv,sampnum,tment,0,followup,surv,3);
title "Placebo";
proc means data=last mean stddev;
	var mu;
run;
%areastepby(gsurv,sampnum,tment,1,followup,surv,3);
title "CyA";
proc means data=last mean stddev;
	var mu;
run;
```

:::


### Figure 4.10

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.10-r
#| out-width: 90%

# Cumulative incidences are estimated using Aalen-Johansen

# Overall survival 
overall_surv <- survfit(Surv(days, status != 0) ~ 1, 
                        data = subset(pbc3, tment_char == "Placebo"))

# Cause 1 survival: transplantation
library(mets)
cause1_cif <- cif(Event(days, status) ~ 1, 
                  data = subset(pbc3, tment_char == "Placebo"), 
                  cause = 1)

# Cause 2 survival: death w/o transplantation
cause2_cif <- cif(Event(days, status) ~ 1, 
                  data = subset(pbc3, tment_char == "Placebo"), 
                  cause = 2)

# Get them on the same time scale - book keeping

alltimes <- overall_surv$time
cause1st <- stepfun(x = cause1_cif$cumhaz[,1], y = c(0, cause1_cif$cumhaz[,2]))
cause1times <- cause1st(v = alltimes)

cause2st <- stepfun(x = cause2_cif$cumhaz[,1], y = c(0, cause2_cif$cumhaz[,2]))
cause2times <- cause2st(v = alltimes)


# Collect the data 
data_comb <- data.frame(cif = c(overall_surv$surv + cause1times + cause2times, 
                                cause1times + cause2times, 
                                cause1times),
                        time = c(alltimes, alltimes, alltimes),
                        type = c(rep("Overall", length(alltimes)), 
                                 rep("Transplantation + death without transplantation", length(alltimes)), 
                                 rep("Transplantation", length(alltimes)))
                        )

# Create Figure 4.10
fig4.10 <- ggplot(aes(x = time / 365.25, y = cif, linetype = type), 
                data = data_comb) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Stacked cumulative incidence and survival") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.position="bottom",
        legend.box="vertical",
        text = element_text(size=21), 
        legend.key.width = unit(1, "cm"))

fig4.10
```

## SAS
```{sas}
#| label: figure-4.10-sas
#| eval: false 
#| output: false

proc phreg data=pbc3 noprint;
model days*status(0)=;
baseline out=overallsurv survival=surv / method=;
run;
proc sort;by tment days;run;
proc phreg data=pbc3 noprint;
model days*status(0)=/eventcode=1;
strata tment;
baseline out=cuminc1 cif=cif1;
run;
proc sort;by tment days;run;
proc phreg data=pbc3 noprint;
model days*status(0)=/eventcode=2;
strata tment;
baseline out=cuminc2 cif=cif2;
run;
proc sort;by tment days;run;
data plot0; 
merge overallsurv cuminc1 cuminc2; 
by tment days;
if tment=0;
fail=1-surv;
run;

data plot0ok; 
set plot0;
by days;
retain last0 last1 last2;
if fail=. then c0=last0; if fail ne . then c0=fail;
if cif1=. then c1=last1; if cif1 ne . then c1=cif1;
if cif2=. then c2=last2; if cif2 ne . then c2=cif2;
output;
last0=c0; last1=c1; last2=c2;
run;
data plot0ok; 
set plot0ok;
cum1=c1; 
cum2=c1+c2; 
cum3=c1+c2+(1-c0);
run;
proc print;run;

data plot0ok; 
set plot0ok; 
daysyears = days/365.25; 
run; 

proc gplot 
data=plot0ok;
plot cum1*daysyears cum2*daysyears cum3*daysyears /overlay haxis=axis1 vaxis=axis2;
axis1 order=0 to 6 by 1 minor=none label=('Years');
axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');
symbol1  v=none i=stepjl c=blue;
symbol2  v=none i=stepjl c=red;
symbol3  v=none i=stepjl c=black;
run;
quit;
```
:::


### Figure 4.11

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.11-r
#| out-width: 90%

# Cumulative incidences are (wrongly) estimated using Kaplan-Meier

# Overall survival 
overall_surv <- survfit(Surv(days, status != 0) ~ 1, 
                        data = subset(pbc3, tment_char == "Placebo"))

# Cause 1 survival: transplantation, KM
cause1_cif_w <- survfit(Surv(days, status == 1) ~ 1, 
                        data = subset(pbc3, tment_char == "Placebo"))

# Cause 2 survival: death w/o transplantation, KM
cause2_cif_w <- survfit(Surv(days, status == 2) ~ 1, 
                      data = subset(pbc3, tment_char == "Placebo"))

# Get them on the same time scale - book keeping
alltimes <- overall_surv$time
cause1st <- stepfun(x = cause1_cif_w$time, y = c(0, cause1_cif_w$surv))
cause1times <- cause1st(v = alltimes)

cause2st <- stepfun(x = cause2_cif_w$time, y = c(0, cause2_cif_w$surv))
cause2times <- cause2st(v = alltimes)

# Collect the data 
data_comb <- data.frame(cif_w = c(overall_surv$surv + 1-cause1times + 1-cause2times, 
                                1-cause1times + 1-cause2times, 
                                1-cause1times),
                        time = c(alltimes, alltimes, alltimes),
                        type = c(rep("Overall", length(alltimes)), 
                                 rep("Transplantation + death without transplantation", length(alltimes)), 
                                 rep("Transplantation", length(alltimes)))
)



# Create Figure
fig4.11 <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type), 
                 data = data_comb) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Stacked cumulative incidence and survival") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 1.1), 
                     breaks = seq(0, 1.1, 0.1)) +
  theme_general + 
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.box="vertical",
        text = element_text(size=21), 
        legend.key.width = unit(1, "cm"))
fig4.11
```

## SAS
```{sas}
#| label: figure-4.11-sas
#| eval: false 
#| output: false

proc phreg data=pbc3 noprint;
	model days*status(0 2)=;
	strata tment;
	baseline out=cuminc1wrng survival=s1wrng;
run;

proc phreg data=pbc3 noprint;
	model days*status(0 1)=;
	baseline out=cuminc2wrng survival=s2wrng;
	strata tment;
run;

data plot0wrng; 
	merge overallsurv cuminc1wrng cuminc2wrng; 
	where tment=0; by days;
run;

data plot0wrng; 
	set plot0wrng;
	by days;
	retain last1 last2;
	if s1wrng=. then c1=last1; if s1wrng ne . then c1=1-s1wrng;
	if s2wrng=. then c2=last2; if s2wrng ne . then c2=1-s2wrng;
	output;
	last1=c1; last2=c2;
run;

data plot0wrng; 
	set plot0wrng;
	cum1=c1; cum2=c1+c2; cum3=c1+c2+surv; one=1;
run;

data plot0wrng; 
	set plot0wrng; 
	daysyears = days/365.25; 
run; 

proc gplot 
	data=plot0wrng;
	plot cum1*daysyears cum2*daysyears cum3*daysyears one*daysyears
	     /overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1.1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
	symbol3  v=none i=stepjl c=black;
	symbol4  v=none i=stepjl l=2 c=black;
run;
quit;
```
:::


### Figure 4.12

::: {.panel-tabset}
## R

#### Figure 4.12 (a)

```{r}
#| label: figure-4.12a-r
#| out-width: 90%

# Overall
overall_cox <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili + sex + age,
                        data = subset(pbc3, !is.na(alb)),
                     method = "breslow", eps=1e-9)

# Cause 1: transplantation
cause1_cox <- coxph(Surv(days, status == 1) ~ tment + alb + log2bili + sex + age,
                    data = subset(pbc3, !is.na(alb)), 
                    method = "breslow", eps=1e-9)

# Cause 2: death w/o transplantation
cause2_cox <- coxph(Surv(days, status == 2) ~ tment + alb + log2bili + sex + age,
                    data = subset(pbc3, !is.na(alb)), 
                    method = "breslow", eps=1e-9)


# for tment = placebo, age = 40, alb = 38, bili = log2(45) and sex = F
newd <- data.frame(tment = 0, age = 40, 
                   alb = 38, log2bili = log2(45), 
                   sex = 0)
est_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz 

est_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz 

est_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv

# Calculate S, and F1 and F2
alltimes <- basehaz(overall_cox, centered = F)$time

A <- cumsum(diff(c(0, est_cause1 + est_cause2)))
dA <- diff(c(0, A))
S <- cumprod(1-dA) #exp(-cumsum(dA)) 
A1 <- est_cause1
A2 <- est_cause2

dat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))
dat2 <- subset(dat, dA > 0)
dat2$lagS <- with(dat2, c(0, S[-length(S)])) 

dat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))
dat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))


# Collect the data
data_comb <- with(dat2, 
                  data.frame(cif_w = c(rep(1, length(alltimes)),
                                       F1 + F2,
                                       F1),
                             time = c(alltimes, alltimes, alltimes),
                             type = c(rep("Overall", length(alltimes)),
                                      rep("Transplantation + death without transplantation", length(alltimes)),
                                      rep("Transplantation", length(alltimes)))
                  ))


# Create Figure
fig4.12a <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),
                 data = data_comb) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Type") +
  xlab("Time since randomization (years)") +
  ylab("Stacked cumulative incidence and survival") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general +
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.box="vertical",
        text = element_text(size=22), 
        legend.key.width = unit(1, "cm"))

fig4.12a
```

#### Figure 4.12 (b)

```{r}
#| label: figure-4.12b-r
#| out-width: 90%
# for tment = placebo, age = 40, alb = 20, bili = log2(90) and sex = F
newd <- data.frame(tment = 0, age = 40, 
                    alb = 20, log2bili = log2(90), 
                    sex = 0)

est_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz

est_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz

est_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv


# Calculate S, and F1 and F2
alltimes <- basehaz(overall_cox, centered = F)$time

A <- cumsum(diff(c(0, est_cause1 + est_cause2)))
dA <- diff(c(0, A))
S <- cumprod(1-dA) #exp(-cumsum(dA)) 
A1 <- est_cause1
A2 <- est_cause2

dat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))
dat2 <- subset(dat, dA > 0)
dat2$lagS <- with(dat2, c(0, S[-length(S)])) 

dat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))
dat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))


# Collect the data
data_comb <- with(dat2, 
                  data.frame(cif_w = c(rep(1, length(alltimes)),
                                  F1 + F2,
                                  F1),
                        time = c(alltimes, alltimes, alltimes),
                        type = c(rep("Overall", length(alltimes)),
                                 rep("Transplantation + death without transplantation", length(alltimes)),
                                 rep("Transplantation", length(alltimes)))))

# Create Figure
fig4.12b <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),
                 data = data_comb) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Type") +
  xlab("Time since randomization (years)") +
  ylab("Stacked cumulative incidence and survival") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general +
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.box="vertical",
        text = element_text(size=22), 
        legend.key.width = unit(1, "cm"))


fig4.12b
```


#### Figure 4.12 (c)

```{r}
#| label: figure-4.12c-r
#| out-width: 90%

# for tment = placebo, age = 60, alb = 38, bili = log2(45) and sex = F
newd <- data.frame(tment = 0, age = 60, 
                   alb = 38, log2bili = log2(45), 
                   sex = 0)

est_cause1 <- survfit(cause1_cox, ctype = 2, newdata = newd)$cumhaz

est_cause2 <- survfit(cause2_cox, ctype = 2, newdata = newd)$cumhaz

est_overall <- survfit(overall_cox, ctype = 2, newdata = newd)$surv


# Calculate S, and F1 and F2
alltimes <- basehaz(overall_cox, centered = F)$time

A <- cumsum(diff(c(0, est_cause1 + est_cause2)))
dA <- diff(c(0, A))
S <- cumprod(1-dA) #exp(-cumsum(dA)) 
A1 <- est_cause1
A2 <- est_cause2

dat <- data.frame(cbind(alltimes, A, dA, S, A1, A2))
dat2 <- subset(dat, dA > 0)
dat2$lagS <- with(dat2, c(0, S[-length(S)])) 

dat2$F1 <- with(dat2, cumsum(lagS * diff(c(0, A1))))
dat2$F2 <- with(dat2, cumsum(lagS * diff(c(0, A2))))


# Collect the data
data_comb <- with(dat2, 
                  data.frame(cif_w = c(rep(1, length(alltimes)), F1 + F2, F1),
                             time = c(alltimes, alltimes, alltimes),
                             type = c(rep("Overall", length(alltimes)),
                                      rep("Transplantation + death without transplantation",
                                          length(alltimes)),
                                      rep("Transplantation", length(alltimes)))))

# Create Figure
fig4.12c <- ggplot(aes(x = time / 365.25, y = cif_w, linetype = type),
                 data = data_comb) +
  geom_step(linewidth = 1) +
  scale_linetype_discrete("Type") +
  xlab("Time since randomization (years)") +
  ylab("Stacked cumulative incidence and survival") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) +
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 1.0),
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  guides(linetype = guide_legend(nrow = 3, byrow = TRUE)) + 
  theme(legend.position="bottom",
        legend.box="vertical",
        text = element_text(size=22), 
        legend.key.width = unit(1, "cm"))


fig4.12c
```


## SAS

#### Macro and double data set

The SAS macro below can alternatively be loaded using this code:

```{sas}
#| label: sas-macro-cuminc
#| eval: false 
#| output: false

filename cumincpr url 'https://biostat.ku.dk/pka/CUMINC/CumInc.sas';
%inc cumincpr;
```

```{sas}
#| label: figure-4.12-sas-macro
#| eval: false 
#| output: false

%macro CumInc(Data,Strata,Time,Surv);

/* Number of Stratas */
  
  proc sort data=&Data;
by &Strata;

data nstrat;
set &Data end=last;
by &Strata;
firstS=first.&Strata;
retain nStrata 0;
nStrata+firstS;
if last then call symput('nStrata',nStrata);
drop firstS;
run;


/* Observations in ciData are deleted */
  
  
  data newData; 
set &Data;
start=(&Time eq 0);   
retain komb 0;
komb+start;
med=0;
%do k=0 %to (&nStrata-1) %by 1;
med=med+(komb eq (1+&k*(&nStrata+1)));
%end;
if (med eq 1);  
drop start med komb;
run;

/* Time vector */
  
  proc sort data=newData;
by &Time;

data Time (keep=&Time); 
set newData;
%do i=1 %to &nStrata %by 1;
if &Time=lag(&Time) then delete;
%end;


/* Strata vector */
  
  proc sort data=newData;
by &Strata &Time;

data temp1;
set newData; by &Strata;
retain stratum 0;
stratum+first.&Strata;

/*  A=sum(A_1,...,A_nStrata) */
  
  %do i=1 %to &nStrata %by 1;
data data&i;
set temp1;
if stratum=&i;

data data&i (keep = &Time A&i);
merge data&i Time; by &Time;  
retain Surv&i;
if not (&Surv=.) then Surv&i=&Surv;
A&i=-log(Surv&i);

%end;


data A_and_S;
A=0;
%do i=1 %to &nStrata %by 1;
merge data&i; by &Time;
A+A&i;
%end;

dA=A-lag(A);
if dA eq . then dA=0;

retain S 1;
S+S*(1-dA)-S;
lagS=lag(S);
run;



/* Output */
  
  data temp2 (keep = &Strata &Time);
set temp1; 
proc sort data=temp2; by &Time;

data temp3;
merge temp2 A_and_S; by &Time;
proc sort data=temp3; by &Strata &Time;


data data0 (keep = &Time p stratum);
set temp3; by &Strata;
*   lagS=lag(S);

if first.&Strata then do;
lagS=1; end;

retain stratum 0;
stratum+first.&Strata;

%do i=1 %to &nStrata %by 1;
lagA&i=lag(A&i);
if ((stratum eq &i) and (first.&Strata)) then lagA&i=0;
if (stratum ne &i) then lagA&i=0;

l&i=(stratum=&i)*(lagS*(A&i-lagA&i));
retain p&i 0;
p&i+l&i; 
if (stratum ne &i) then p&i=0;
%end;

p=0;
%do i=1 %to &nStrata %by 1;
p=p+p&i; %end;
run;





/* put data into the right form */
  
  %do i=1 %to &nStrata;
data data&i;
set data0;
if (stratum eq &i);
p0&i=p; drop p stratum;

proc sort data=data&i;
by &Time;
%end;

data data;
set data1;
%do i=1 %to &nStrata;
data data;
merge data data&i;
by &Time;
%end;


* and complete the p-s;

proc sort data=data;
 by &Time;

data data; 
 set data end=last;
  by &Time;
   n=_N_;
  if last then call symput('nobs',n);
  drop n;

data data;
 set data;
  %do i=1 %to &nStrata;
   %do j=1 %to &nobs;
    dummy=lag(p0&i);
    if (p0&i eq .) then p0&i=dummy;
   %end;
  %end;
  drop dummy;
  p00=1;
  %do i=1 %to &nStrata;
   p00=p00-p0&i;
  %end;
run;
%mend CumInc;


* Cuminc macro requires duplication; 
data pbc32; 
	set pbc3 pbc3;
	h=1+(_N_ gt 349);
	time=days;
	d=(status=1)*(h=1)+(status=2)*(h=2);
	tment1=tment*(h=1); tment2=tment*(h=2);
	sex1=sex*(h=1); sex2=sex*(h=2);
	age1=age*(h=1); age2=age*(h=2);
	alb1=alb*(h=1); alb2=alb*(h=2);
	log2bili1=log2bili*(h=1); log2bili2=log2bili*(h=2);
run;
```

#### Figure 4.12 (a)
```{sas}
#| label: figure-4.12a-sas
#| eval: false 
#| output: false
data cov;
  input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
  datalines; 
  0 0 0 0 40 0 38 0 45 0
  0 0 0 0 0 40 0 38 0 45
  ;
run;
data cov; 
  set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	                log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data data; set data; tment=0; run;
data plot1; 
	set data; 
	cum1=p01; cum2=p01+p02; cum3=1;
	p = p01+p02+p00;
run;
data plot1; 
	set plot1; 
	daysyears = time/365.25; 
run; 
proc gplot data=plot1;
	plot cum1*daysyears cum2*daysyears cum3*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
	symbol3  v=none i=stepjl c=black;
run;
quit;
```

#### Figure 4.12 (b)
```{sas}
#| label: figure-4.12b-sas
#| eval: false 
#| output: false
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	0 0 0 0 40 0 20 0 90 0
	0 0 0 0 0 40 0 20 0 90
	;
run;
data cov; 
  set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	                log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data data; set data; tment=0; run;
data plot2plac; set data; 
	cum1=p01; cum2=p01+p02; cum3=1;
run;
data plot2plac; 
	set plot2plac; 
	daysyears = time/365.25; 
run; 
proc gplot data=plot2plac;
	plot cum1*daysyears cum2*daysyears cum3*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
	symbol3  v=none i=stepjl c=black;
run;
quit;
```

#### Figure 4.12 (c)
```{sas}
#| label: figure-4.12c-sas
#| eval: false 
#| output: false
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	0 0 0 0 60 0 38 0 45 0
	0 0 0 0 0 60 0 38 0 45
	;
run;
data cov;
	set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	                log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data data; set data; tment=0; run;
data plot3plac; set data; 
	cum1=p01; cum2=p01+p02; cum3=1;
run;
data plot3plac; 
	set plot3plac; 
	daysyears = time/365.25; 
run; 
proc gplot data=plot3plac;
	plot cum1*daysyears cum2*daysyears cum3*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Stacked cumulative incidence and survival');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
	symbol3  v=none i=stepjl c=black;
run;
quit;
```

:::


### Table 4.2

::: {.panel-tabset}
## R

#### Scenario 1 (no adjustment)

```{r}
#| label: table-4.2-r-1
library("survRM2")

# No adjustment 
coxsurv <- coxph(Surv(days, status != 0) ~ strata(tment), data = pbc3, 
                      method = "breslow")

# death w/o transplant
cox1 <- coxph(Surv(days, status == 2) ~ strata(tment), data = pbc3, 
              method = "breslow")

# transplant
cox2 <- coxph(Surv(days, status == 1) ~ strata(tment), data = pbc3, 
              method = "breslow")

time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard
strat <- basehaz(cox1, center = F)$strata
  
# Cumulative incidence
F01_plac <- cumsum(surv[strat == "tment=0"] * diff(c(0,lamd1[strat == "tment=0"])))
F01_cya <- cumsum(surv[strat == "tment=1"] * diff(c(0,lamd1[strat == "tment=1"])))

F02_plac <- cumsum(surv[strat == "tment=0"] * diff(c(0,lamd2[strat == "tment=0"])))
F02_cya <- cumsum(surv[strat == "tment=1"] * diff(c(0,lamd2[strat == "tment=1"])))

timep <- time[strat == "tment=0"]
timec <- time[strat == "tment=1"]

# Transplantation
scenario1.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F02_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F02_cya[timec <= 3 * 365.25])/365.25)

# Death without transplantation
scenario1.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3 * 365.25])) * F01_plac[timep <= 3 * 365.25])/365.25,
CyA=sum(diff(c(0, timec[timec <= 3 * 365.25])) * F01_cya[timec <= 3 * 365.25])/365.25)
scenario1.T;scenario1.D 
```

#### Scenario 1 (no adjustment) using mets package
```{r}
#| label: table-4.2-r-mets
library(mets)
rmc1 <- cif.yearslost(Event(days/365.25,status)~strata(tment), 
                      data=pbc3, time=3)
summary(rmc1)
```

#### Scenario 2
```{r}
#| label: table-4.2-r-2

coxsurv <- coxph(Surv(days/365.25, status != 0) ~ tment + sex + age + alb + log2bili,
                 data = pbc3, method = "breslow")
# death w/o transplant
cox1 <- coxph(Surv(days/365.25, status == 2) ~ tment + sex + age + alb + log2bili,
              data = pbc3, method = "breslow")
# transplant
cox2 <- coxph(Surv(days/365.25, status == 1) ~ tment + sex + age + alb + log2bili,
              data = pbc3, method = "breslow")

# Sex = F, age = 40, alb = 38, bili = 45
# Predictions 
newd <- data.frame(tment = c(0, 1),
                   sex = c(0, 0),
                   age = c(40, 40),
                   alb = c(38, 38), 
                   log2bili = log2(c(45, 45)))

# predictions
time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard

lpsurv <- predict(coxsurv, newd, type = "lp", reference = "zero")
lpcox1 <- predict(cox1, newd, type = "lp", reference = "zero")
lpcox2 <- predict(cox2, newd, type = "lp", reference = "zero")

# Linear predictors
surv_plac <- surv^exp(lpsurv[1])
surv_cya <- surv^exp(lpsurv[2])

lamd1_plac <- lamd1 * exp(lpcox1[1])
lamd1_cya <- lamd1 * exp(lpcox1[2])

lamd2_plac <- lamd2 * exp(lpcox2[1])
lamd2_cya <- lamd2 * exp(lpcox2[2])

# Cumulative incidence
F01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))
F01_cya  <- cumsum(surv_cya * diff(c(0,lamd1_cya)))

F02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))
F02_cya  <- cumsum(surv_cya * diff(c(0,lamd2_cya)))

timep <- timec <- time

# Transplantation
scenario2.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F02_plac[timep <= 3]),
CyA=sum(diff(c(0, timec[timec <= 3])) * F02_cya[timec <= 3]))

# Death without transplantation
scenario2.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F01_plac[timep <= 3]),
                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F01_cya[timec  <= 3])
                 )
scenario2.T;scenario2.D 
```


#### Scenario 3
```{r}
#| label: table-4.2-r-3


# Sex = F, age = 40, alb = 20, bili = 90 #
# Predictions 
newd <- data.frame(tment = c(0, 1),
                   sex = c(0, 0),
                   age = c(40, 40),
                   alb = c(20, 20), 
                   log2bili = log2(c(90, 90)))

# predictions
time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard

lpsurv <- predict(coxsurv, newd, type = "lp", reference = "zero")
lpcox1 <- predict(cox1, newd, type = "lp", reference = "zero")
lpcox2 <- predict(cox2, newd, type = "lp", reference = "zero")

# Linear predictors
surv_plac <- surv^exp(lpsurv[1])
surv_cya <- surv^exp(lpsurv[2])

lamd1_plac <- lamd1 * exp(lpcox1[1])
lamd1_cya <- lamd1 * exp(lpcox1[2])

lamd2_plac <- lamd2 * exp(lpcox2[1])
lamd2_cya <- lamd2 * exp(lpcox2[2])

# Cumulative incidence
F01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))
F01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))

F02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))
F02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))

timep <- timec <- time

# Transplantation
scenario3.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F02_plac[timep <= 3]),
                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F02_cya[timec  <= 3])
                 )

# Death without transplantation
scenario3.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F01_plac[timep <= 3]),
                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F01_cya[timec  <= 3]))
scenario3.T;scenario3.D
```

#### Scenario 4
```{r}
#| label: table-4.2-r-4

##### Sex = F, age = 60, alb = 38, bili = 45 #####

# Predictions 
newd <- data.frame(tment = c(0, 1),
                   sex = c(0, 0),
                   age = c(60, 60),
                   alb = c(38, 38), 
                   log2bili = log2(c(45, 45)))

# predictions
lpsurv <- predict(coxsurv, newd, type = "lp", reference = "zero")
lpcox1 <- predict(cox1, newd, type = "lp", reference = "zero")
lpcox2 <- predict(cox2, newd, type = "lp", reference = "zero")

time <- basehaz(cox1, center = F)$time
surv <- exp(-basehaz(coxsurv, center = F)$hazard)
lamd1 <- basehaz(cox1, center = F)$hazard
lamd2 <- basehaz(cox2, center = F)$hazard

# Linear predictors
surv_plac <- surv^exp(lpsurv[1])
surv_cya <- surv^exp(lpsurv[2])

lamd1_plac <- lamd1 * exp(lpcox1[1])
lamd1_cya <- lamd1 * exp(lpcox1[2])

lamd2_plac <- lamd2 * exp(lpcox2[1])
lamd2_cya <- lamd2 * exp(lpcox2[2])

# Cumulative incidence
F01_plac <- cumsum(surv_plac * diff(c(0,lamd1_plac)))
F01_cya <- cumsum(surv_cya * diff(c(0,lamd1_cya)))

F02_plac <- cumsum(surv_plac * diff(c(0,lamd2_plac)))
F02_cya <- cumsum(surv_cya * diff(c(0,lamd2_cya)))

timep <- timec <- time

# Transplantation
scenario4.T <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F02_plac[timep <= 3]), 
                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F02_cya[timec  <= 3])
                 )

# Death without transplantation
scenario4.D <- c(Placebo=sum(diff(c(0, timep[timep <= 3])) * F01_plac[timep <= 3]),
                 CyA    =sum(diff(c(0, timec[timec <= 3])) * F01_cya[timec  <= 3])
                 )
scenario4.T;scenario4.D
```

## SAS

#### Macro for area under CIF
```{sas}
#| label: table-4.2-macro
#| eval: false 
#| output: false
%macro areastep(data,trt,grp,time,y,tau);
	data select; set &data;	where &trt=&grp;
	run;
	data select; set select;by &trt;
		retain mu;
		if first.&trt then mu=0;
		if &time>&tau then do;
		&time=&tau; &y=lag(&y); end;
		mu+lag(&y)*(&time-lag(&time));
		if last.&trt then do;
		if &time<&tau then mu+(&tau-&time)*&y; end;
	run;
	data last;
	  set select;
		by &trt;
		if last.&trt;
	run;
	proc print; run;
%mend areastep;
```

#### Scenario 1 (no adjustment)

```{sas}
#| label: table-4.2-sas-1
#| eval: false 
#| output: false
* No adjustment: Transplantation; 
proc phreg data=pbc3 noprint;
	model followup*status(0)=/eventcode=1;
	strata tment;
	baseline out=cuminc1 cif=cif1 stdcif=std1;
run;
title "Placebo";
%areastep(cuminc1,tment,0,followup,cif1,3);
title "CyA";
%areastep(cuminc1,tment,1,followup,cif1,3);

* No adjustment: Death wo transplant;
proc phreg data=pbc3 noprint;
	model followup*status(0)=/eventcode=2;
	strata tment;
	baseline out=cuminc2 cif=cif2 stdcif=std2;
run;
title "Placebo";
%areastep(cuminc2,tment,0,followup,cif2,3);
title "CyA";
%areastep(cuminc2,tment,1,followup,cif2,3);
```

#### Scenario 2

```{sas}
#| label: table-4.2-sas-2
#| eval: false 
#| output: false
*** age=40 alb=38 bili=45 ***; 
* CyA; 
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	1 0 0 0 40 0 38 0 45 0
	0 1 0 0 0 40 0 38 0 45
	;
run;

data cov; set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;

proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data dataC; 
	set data; 
	tment=1; 
run;
%areastep(dataC,tment,1,time,p01,3);
%areastep(dataC,tment,1,time,p02,3);

* Placebo; 
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	0 0 0 0 40 0 38 0 45 0
	0 0 0 0 0 40 0 38 0 45
	;
run;
data cov; set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
									log2bili1 log2bili2;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data dataP; 
set data; 
tment=0; 
run;
%areastep(dataP,tment,0,time,p01,3);
%areastep(dataP,tment,0,time,p02,3);
```

#### Scenario 3

```{sas}
#| label: table-4.2-sas-3
#| eval: false 
#| output: false
*** age=40 alb=20 bili=90 ***; 
* CyA; 
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	1 0 0 0 40 0 20 0 90 0
	0 1 0 0 0 40 0 20 0 90
	;
run;

data cov; set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;

proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;

%cuminc(cidata,h,time,surv);

data dataC; 
	set data; 
	tment=1; 
run;

%areastep(dataC,tment,1,time,p01,3);
%areastep(dataC,tment,1,time,p02,3);

* Placebo; 
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	0 0 0 0 40 0 20 0 90 0
	0 0 0 0 0 40 0 20 0 90
	;
run;

data cov; set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data dataP; 
	set data; 
	tment=0; 
run;
%areastep(dataP,tment,0,time,p01,3);
%areastep(dataP,tment,0,time,p02,3);
```

#### Scenario 4

```{sas}
#| label: table-4.2-sas-4
#| eval: false 
#| output: false
*** age=60 alb=38 bili=45 ***; 
* CyA; 
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	1 0 0 0 60 0 38 0 45 0
	0 1 0 0 0 60 0 38 0 45
	;
run;
data cov; set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data dataC; 
	set data; 
	tment=1; 
run;
%areastep(dataC,tment,1,time,p01,3);
%areastep(dataC,tment,1,time,p02,3);

* Placebo; 
data cov;
	input tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 log2bili1 log2bili2;
	datalines; 
	0 0 0 0 60 0 38 0 45 0
	0 0 0 0 0 60 0 38 0 45
	;
run;
data cov; set cov;
	if log2bili1>0 then log2bili1=log2(log2bili1);
	if log2bili2>0 then log2bili2=log2(log2bili2);
run;
proc phreg data=pbc32 noprint;
	model time*d(0)=tment1 tment2 sex1 sex2 age1 age2 alb1 alb2 
	log2bili1 log2bili2/rl;
	strata h;
	baseline out=cidata covariates=cov survival=surv/nomean method=ch;
run;
%cuminc(cidata,h,time,surv);
data dataP; 
	set data; 
	tment=0; 
run;
%areastep(dataP,tment,0,time,p01,3);
%areastep(dataP,tment,0,time,p02,3);
```

:::

### Table 4.4

::: {.panel-tabset}

## R

#### Using survRM2 package 

Here we get the same as in SAS PROC RMSTREG

```{r}
#| label: table-4.4-r
library("survRM2")
pbcsub <- subset(pbc3,!is.na(alb))
time   <- pbcsub$days/365.25
status <- pbcsub$status!=0
arm    <- pbcsub$tment=="1"
alb    <- pbcsub$alb
logbili<- log2(pbcsub$bili)
xx <- cbind(alb, logbili)
rmst2(time, status, arm, tau=3, covariates=xx)
```
#### Using mets package

However, this does not align exactly with survRM2 package?

```{r}
#| label: table-4.4-r-mets
library(mets)
options(contrasts=c("contr.treatment", "contr.poly"))
resmeanIPCW(Event(followup,fail)~factor(tment)+alb+log2bili,
            data=pbcsub, time=3, model="lin",
            cens.model=~strata(tment))
```

## SAS
```{sas}
#| label: table-4.4-sas
#| eval: false 
#| output: false
proc rmstreg data=pbc3 tau=3;
  model followup*status(0)=tment alb log2bili / 
        link=linear method=ipcw(strata=tment);
run;
```

:::


### In-text: RMST g-formula and bootstrap 

::: {.panel-tabset}

## R

```{r}
#| label: in-text-r-rmst-gform
pbcsub <- subset(pbc3,!is.na(alb))
time   <- pbcsub$days/365.25
status <- pbcsub$status!=0
arm    <- pbcsub$tment=="1"
alb    <- pbcsub$alb
logbili<- log2(pbcsub$bili)
xx <- cbind(alb, logbili)
trydata<-as.data.frame(cbind(arm,time,status,xx))

boot.fun <- function(dat, index){
bdata <- dat[index,]
obj<-rmst2(bdata$time,bdata$status,bdata$arm,tau=3,
           covariates=cbind(bdata$alb,bdata$logbili))
rmst0<-obj$RMST.difference.adjusted[1,1]+
  obj$RMST.difference.adjusted[2,1]*0+
  obj$RMST.difference.adjusted[3,1]*bdata$alb+
  obj$RMST.difference.adjusted[4,1]*bdata$logbili
rmst1<-obj$RMST.difference.adjusted[1,1]+
  obj$RMST.difference.adjusted[2,1]*1+
  obj$RMST.difference.adjusted[3,1]*bdata$alb+
  obj$RMST.difference.adjusted[4,1]*bdata$logbili
diff<-rmst1-rmst0
res<-cbind(mean(rmst0),mean(rmst1),mean(diff))
return(res)
}

library(boot)
B<-200
bootres <- boot(trydata, boot.fun, R = B)

# mean and SD
rbind(
  cbind(Placebo=mean(bootres$t[,1]),
        CyA=mean(bootres$t[,2]),
        Diff=mean(bootres$t[,3])),
  cbind(Placebo=sqrt(var(bootres$t[,1])),
        CyA=sqrt(var(bootres$t[,2])),
        Diff=sqrt(var(bootres$t[,3])))
)
```
## SAS

:::



### Table 4.5

::: {.panel-tabset}

## R

#### Using mets package
```{r}
#| label: table-4.5-r-mets
library(mets)
options(contrasts=c("contr.treatment", "contr.poly"))
subpbc<-subset(pbc3, !is.na(alb))
subpbc$tment<-factor(subpbc$tment)

# Death w/o transplant
fgdeath<-cifreg(Event(days,status)~factor(tment)+alb+log2bili+sex+age, cause=2, 
                data = subpbc, propodds=NULL)
fgdeath

# Transplant
fgtrans<-cifreg(Event(days,status)~factor(tment)+alb+log2bili+sex+age, cause=1, 
                data = subpbc, propodds=NULL, cox.prep=TRUE)
fgtrans
```
#### Using survival package
```{r}
#| label: table-4.5-r-survival

# Death w/o transplant
# Two step
fg_c2 <- finegray(Surv(days, as.factor(status)) ~ ., etype = 2,
                  data = subset(pbc3, !is.na(alb)))
fg_cox2 <- coxph(Surv(fgstart, fgstop, fgstatus) ~ 
                   tment + alb + log2bili + sex + age, 
                 weight = fgwt, data = fg_c2, eps=1e-9)
summary(fg_cox2)

# Transplant
# Two step
fg_c1 <- finegray(Surv(days, as.factor(status)) ~ ., etype = 1,
                  data = subset(pbc3, !is.na(alb)))
fg_cox1 <- coxph(Surv(fgstart, fgstop, fgstatus) ~ 
                   tment + alb + log2bili + sex + age, 
                 weight = fgwt, data = fg_c1, eps=1e-9)
summary(fg_cox1)
```

## SAS
```{sas}
#| label: table-4.5-sas
#| eval: false 
#| output: false

* Death without transplantation; 
proc phreg data=pbc3;
	class sex (ref='1') tment (ref='0');
	model days*status(0)=sex tment age log2bili alb / rl eventcode=2;
run;

* Transplantation; 
proc phreg data=pbc3;
	class sex (ref='1') tment (ref='0');
	model days*status(0)=sex tment age log2bili alb / rl eventcode=1;
run;
```
:::



### In-text: Fine-Gray and g-formula

Using mets package and not bootstrap as in book. 

::: {.panel-tabset}

## R
```{r}
#| label: in-text-fg-gform-r
# Fine-Gray models using package mets
library(mets)
options(contrasts=c("contr.treatment", "contr.poly"))
# Transplant
subpbc<-subset(pbc3, !is.na(alb))
subpbc$trt<-factor(subpbc$tment)
fgtrans<-cifreg(Event(days,status)~trt+alb+log2bili+sex+age, cause=1, 
                data = subpbc, propodds=NULL, cox.prep=TRUE)
summary(survivalG(fgtrans, subpbc, 2*365.25))

# Death w/o transplant
fgdeath<-cifreg(Event(days,status)~trt+alb+log2bili+sex+age, cause=2, 
                data = subpbc, propodds=NULL, cox.prep=TRUE)
summary(survivalG(fgdeath, subpbc, 2*365.25))
```

## SAS
```{sas}
#| label: in-text-fg-gform-sas
#| eval: false 
#| output: false
```
:::


### Figure 4.17

::: {.panel-tabset}
## R

#### Figure 4.17 (a)

```{r}
#| label: figure-4.17a-r
#| out-width: 90%
# Fine-Gray model for death w/o transplant
# Predictions 
# Placebo
newd_t0 <- data.frame(tment = 0, age = 40, 
                      alb = 38, log2bili = log2(45), 
                      sex = 0)
C2_t0 <- survfit(fg_cox2, ctype = 2, newdata = newd_t0)$cumhaz 

# CyA
newd_t1 <- data.frame(tment = 1, age = 40, 
                      alb = 38, log2bili = log2(45), 
                      sex = 0)
C2_t1 <- survfit(fg_cox2, ctype = 2, newdata = newd_t1)$cumhaz 

time <- survfit(fg_cox2, ctype = 2, newdata = newd_t1)$time

# Make data ready for plotting 
pdata <- data.frame(time = c(time, time), 
                    cif = c(C2_t0, C2_t1), 
                    tment = c(rep("Placebo", length(time)), 
                              rep("CyA", length(time))))

# Create Figure
fig4.17a <- ggplot(aes(x = time / 365.25, y = cif, linetype = tment), 
                 data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_manual("Treatment", values = c("dashed", "solid"),guide = guide_legend(reverse = TRUE)) + 
  xlab("Time since randomization (years)") + 
  ylab('Cumulative incidence for death w/o transplantation') + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  theme(legend.position="bottom", legend.box = "vertical")
      #  legend.key.size = unit(1.5, 'cm'))

fig4.17a
```

#### Figure 4.17 (b)

```{r}
#| label: figure-4.17b
#| out-width: 90%

# Fine-Gray model for transplant
# Predictions 
# Placebo
C1_t0 <- survfit(fg_cox1, ctype = 2, newdata = newd_t0)$cumhaz 

# CyA
C1_t1 <- survfit(fg_cox1, ctype = 2, newdata = newd_t1)$cumhaz 

time <- survfit(fg_cox1, ctype = 2, newdata = newd_t1)$time

# Make data ready for plotting 
pdata <- data.frame(time = c(time, time), 
                    cif = c(C1_t0, C1_t1), 
                    tment = c(rep("Placebo", length(time)), 
                              rep("CyA", length(time))))

# Create Figure
fig4.17b <- ggplot(aes(x = time / 365.25, y = cif, linetype = tment), 
                 data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_manual("Treatment", values = c("dashed", "solid"),guide = guide_legend(reverse = TRUE)) + 
  xlab("Time since randomization (years)") + 
  ylab('Cumulative incidence for transplantation') + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  theme(legend.box = "vertical",
        legend.key.size = unit(1.5, 'cm'))


fig4.17b
```

## SAS

#### Covariate values
```{sas}
#| label: figure-4.17-sas-covs
#| eval: false 
#| output: false

data cov0;
	input sex tment age alb log2bili;
	log2bili=log2(log2bili);
	datalines;
	0 0 40 38 45
	;
run;
data cov1;
	input sex tment age alb log2bili;
	log2bili=log2(log2bili);
	datalines;
	0 1 40 38 45
	;
run;
```


#### Figure 4.17 (a)

```{sas}
#| label: figure-4.17a-sas
#| eval: false 
#| output: false
* For death without transplantation; 
proc phreg data=pbc3;
	model days*status(0)=sex tment age log2bili alb/eventcode=2;
	baseline out=cuminc20 covariates=cov0 cif=cif20;
run;
proc phreg data=pbc3;
	model days*status(0)=sex tment age log2bili alb/eventcode=2;
	baseline out=cuminc21 covariates=cov1 cif=cif21;
run;
data cuminc2; 
	merge cuminc20 cuminc21; 
	by days; 
run;
data cuminc2; 
	set cuminc2; 
	daysyears = days / 365.25; 
run; 
proc gplot data=cuminc2;
	plot cif20*daysyears cif21*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Cumulative incidences for death');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```

#### Figure 4.17 (b)

```{sas}
#| label: figure-4.17b-sas
#| eval: false 
#| output: false
* For transplantation; 
proc phreg data=pbc3;
	*class sex tment (ref='0');
	model days*status(0)=sex tment age log2bili alb/eventcode=1;
	baseline out=cuminc10 covariates=cov0 cif=cif10;
run;
proc phreg data=pbc3;
	*class sex tment (ref='0');
	model days*status(0)=sex tment age log2bili alb/eventcode=1;
	baseline out=cuminc11 covariates=cov1 cif=cif11;
run;
data cuminc1; 
	merge cuminc10 cuminc11; 
	by days; 
run;
data cuminc1; 
	set cuminc1; 
	daysyears = days / 365.25; 
run; 
proc gplot data=cuminc1;
	plot cif10*daysyears cif11*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none label=(a=90 'Cumulative incidence for transpl.');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```
:::

### Table 4.6

::: {.panel-tabset}
## R

#### Create R function rmtl.ipcw()
The function rmtl.ipcw() fit a restricted mean time lost regression model using IPCW with competing risks data.

```{r}
#| label: rmtl.ipcw-function
### Note: This code is modified from the original 'rmst2reg function' of the
### survRM2 package, which was authored by Hajime Uno, Lu Tian, Angel Cronin, 
### Chakib Battioui, and Miki Horiguchi, in order to account for competing risks.
### Last updated by Sarah Conner on October 22, 2020

library(survival)

rmtl.ipcw <- function(times, event, eoi=1, tau, cov=NULL, strata=FALSE, group=NULL){
  
  if(is.null(group) & strata==TRUE){stop('Please specify a factor variable to statify weights.')}
  if(is.null(cov)){print('Warning: Fitting intercept-only model.')}
  
  # Round event times to avoid issues with survival() package rounding differently
  y <- round(times,4)
  id <- 1:length(y)
  
  # Recode so delta1 reflects event of interest, delta2 reflects all competing events. Assumes 0=censoring.
  delta1 <- ifelse(event==eoi, 1, 0)
  delta2 <- ifelse(event!=0 & event!=eoi, 1, 0)
  
  # Overall quantities
  x <- cbind(int=rep(1, length(y)), cov)
  p <- length(x[1,])
  if(is.null(group)){group <- as.factor(rep(1, length(y)))}
  
  # Recode event indicators to reflect status at chosen tau
  delta1[y>tau] <- 0
  delta2[y>tau] <- 0
  
  y <- pmin(y, tau)
  y1 <- y*delta1
  
  d0 <- 1 - (delta1 + delta2) # censoring indicator
  d0[y==tau] <- 0  # If follow-up lasts til tau, the event will not count as 'censored' in IPCW weights
  weights <- NULL
  
  ## Calculate IPCW weights (option to stratify by group) ## 
  
  if(strata==TRUE){
    for(aa in 1:length(unique(group))){
      # Subset the group
      a <- unique(group)[aa]
      d0.a <- d0[group==a]
      delta1.a <- delta1[group==a]
      y.a <- y[group==a]
      x.a <- x[group==a,]
      n.a <- length(d0.a)
      orig.id.a0 <- orig.id.a <- id[group==a]
      
      # Order the event times
      id.a <- order(y.a)
      y.a <- y.a[id.a]
      d0.a <- d0.a[id.a]
      delta1.a <- delta1.a[id.a]
      x.a <- x.a[id.a,]
      orig.id.a <- orig.id.a[id.a]
      
      # Derive IPCW
      fit <- survfit(Surv(y.a, d0.a) ~ 1)
      weights.a <- (1-d0.a)/rep(fit$surv, table(y.a))
      
      # Need to assign weights accordig to original ID, not ordered by event time
      linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a)
      weights <- rbind(weights, linked.weights.a)
    }
  } else {
    
    # Order the event times
    id.a <- order(y)
    y.a <- y[id.a]
    d0.a <- d0[id.a]
    delta1.a <- delta1[id.a]
    x.a <- x[id.a,]
    orig.id.a <- id[id.a]
    
    # Derive IPCW
    fit <- survfit(Surv(y.a, d0.a) ~ 1)
    weights.a <- (1-d0.a)/rep(fit$surv, table(y.a))
    
    # Need to assign weights accordig to original ID, not ordered by event time
    linked.weights.a <- cbind(orig.id.a, weights.a, delta1.a, d0.a, y.a)
    weights <- rbind(weights, linked.weights.a)
  }
  
  
  ## Fit linear model ## 
  
  # Link weights to original data frame
  #colnames(weights) <- c('id', 'weights')
  #data <- merge(data0, weights, by='id')
  #summary(lm(tau-y ~ x-1, weights=weights, data=data))
  
  # Or, sort weights and use vectors
  w <- weights[order(weights[, 1]),2]
  lm.fit <- lm(delta1*(tau-y) ~ x-1, weights=w)
  
  
  ## Derive SE ##
  
  beta0 <- lm.fit$coef
  error <- tau - y - as.vector(x %*% beta0)
  score <- x * w * error
  
  # Kappa (sandwich variance components) stratified by group
  kappa <- NULL
  
  for(aa in 1:length(unique(group))){
    
    # Subset the group
    a <- unique(group)[aa]
    d0.a <- d0[group==a]
    delta1.a <- delta1[group==a]
    y.a <- y[group==a]
    x.a <- x[group==a,]
    n.a <- length(d0.a)
    orig.id.a0 <- orig.id.a <- id[group==a]
    score.a <- score[group==a,]
    
    # Kappa calculations for sandwich variance
    kappa.a <- matrix(0, n.a, p)
    
    for(i in 1:n.a){
      kappa1 <- score.a[i,]
    
      kappa2 <- apply(score.a[y.a>=y.a[i],,drop=F], 2, sum)*(d0.a[i])/sum(y.a>=y.a[i])
    
      kappa3 <- rep(0, p)
    
      for(k in 1:n.a){
        if(y.a[k]<=y.a[i]){
          kappa3 <- kappa3+apply(score.a[y.a>=y.a[k],,drop=F], 2, sum)*(d0.a[k])/(sum(y.a>=y.a[k]))^2
        }
      }
  
      kappa.a[i,] <- kappa1+kappa2-kappa3
    }
    kappa <- rbind(kappa, kappa.a)
  }
  
  # Transpose the kappas rbinded from each group gives pxp matrix
  gamma <- t(kappa) %*% kappa
  
  A <- t(x) %*% x
  varbeta <- solve(A) %*% gamma %*% solve(A)
  se <- sqrt(diag(varbeta))
  
  
  #--- Return results ---
  
  res <- cbind(beta=lm.fit$coef, se=se, cil=lm.fit$coef-(1.96*se), ciu=lm.fit$coef+(1.96*se), 
               z=lm.fit$coef/se, p=2*(1-pnorm(abs(lm.fit$coef/se))))
  
  allres <- list(res=res, varbeta=varbeta)
  invisible(allres)
return(res[,1])
}  
```

#### Using rmtl.ipcw() function
```{r}
#| label: table-4.6-r

rmtl.ipcw(pbc3$days/365.25,pbc3$status,eoi=2,tau=3,cov=pbc3$tment)
rmtl.ipcw(pbc3$days/365.25,pbc3$status,eoi=1,tau=3,cov=pbc3$tment)

pbcny   <- subset(pbc3,!is.na(alb))
time    <- pbcny$days/365.25
status  <- pbcny$status
arm     <- pbcny$tment
sex     <- pbcny$sex
age     <- pbcny$age
alb     <- pbcny$alb
logbili <- log2(pbcny$bili)

x <- cbind(arm, alb, logbili, sex, age)
rmtl.ipcw(time, status, eoi=2, tau=3, x)
rmtl.ipcw(time, status, eoi=1, tau=3, x)

x1 <- cbind(arm, alb, logbili)
rmtl.ipcw(time, status, eoi=2, tau=3, x1)
rmtl.ipcw(time, status, eoi=1, tau=3, x1)
```


#### Using mets package

However, does not give exactly same results as hard code

```{r}
#| label: table-4.6-r-mets
library(mets)

# Death without transplantation
resmeanIPCW(Event(days/365.25,status)~factor(tment),cause=2,
            data=pbc3, time=3, model="linear")

resmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili+sex+age,cause=2,
            data=subset(pbc3,!is.na(alb)), time=3, model="linear")

resmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili,cause=2,
            data=subset(pbc3,!is.na(alb)), time=3, model="linear")

# Transplantation
resmeanIPCW(Event(days/365.25,status)~factor(tment),cause=1,
            data=pbc3, time=3, model="lin")

resmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili+sex+age,cause=1,
            data=subset(pbc3,!is.na(alb)), time=3, model="lin")

resmeanIPCW(Event(days/365.25,status)~factor(tment)+alb+log2bili,cause=1,
            data=subset(pbc3,!is.na(alb)), time=3, model="lin")

```
## SAS-NA

:::

### In-text: Time lost g-formula and bootstrap

::: {.panel-tabset}
## R
```{r}
#| label: in-text-r-time-lost-gform

library(boot)

# Transplantation
boot.fun <- function(dat, index){
bdata <- dat[index,]
obj<-rmtl.ipcw(bdata$time,bdata$status,eoi=1,tau=3,cbind(bdata$arm,bdata$alb,bdata$logbili))
rmst0<-obj[1]+obj[2]*0+obj[3]*bdata$alb+obj[4]*bdata$logbili
rmst1<-obj[1]+obj[2]*1+obj[3]*bdata$alb+obj[4]*bdata$logbili
diff<-rmst1-rmst0
res<-cbind(mean(rmst0),mean(rmst1),mean(diff))
return(res)
}
B<-200 
set.seed(1234)
trydata<-as.data.frame(cbind(time,status,x1))
bootres <- boot(trydata, boot.fun, R = B)

# mean and SD
print("Transplantation")
rbind(
  cbind(Placebo=mean(bootres$t[,1]),
        CyA=mean(bootres$t[,2]),
        Diff=mean(bootres$t[,3])),
  cbind(Placebo=sqrt(var(bootres$t[,1])),
        CyA=sqrt(var(bootres$t[,2])),
        Diff=sqrt(var(bootres$t[,3])))
)

# Death without transplantation
boot.fun <- function(dat, index){
bdata <- dat[index,]
obj<-rmtl.ipcw(bdata$time,bdata$status,eoi=2,tau=3,cbind(bdata$arm,bdata$alb,bdata$logbili))

rmst0<-obj[1]+obj[2]*0+obj[3]*bdata$alb+obj[4]*bdata$logbili
rmst1<-obj[1]+obj[2]*1+obj[3]*bdata$alb+obj[4]*bdata$logbili
diff<-rmst1-rmst0
res<-cbind(mean(rmst0),mean(rmst1),mean(diff))
return(res)
}

trydata<-as.data.frame(cbind(time,status,x1))
bootres <- boot(trydata, boot.fun, R = B)
# mean and SD
print("Death without transplantation")
rbind(
  cbind(Placebo=mean(bootres$t[,1]),
        CyA=mean(bootres$t[,2]),
        Diff=mean(bootres$t[,3])),
  cbind(Placebo=sqrt(var(bootres$t[,1])),
        CyA=sqrt(var(bootres$t[,2])),
        Diff=sqrt(var(bootres$t[,3])))
)

```
## SAS-NA

:::

### Figure 4.21 

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.21-r
#| out-width: 90%

# Overall survival 
overall_surv <- survfit(Surv(days, status != 0) ~ 1, data = pbc3)

# Censoring
cens_surv <- survfit(Surv(days, status == 0) ~ 1, data = pbc3)

# Make data ready for plotting 
pdata <- data.frame(time = c(overall_surv$time, cens_surv$time), 
                    surv = c(overall_surv$surv, cens_surv$surv), 
                    type = c(rep("Treatment failure", length(overall_surv$time)), 
                             rep("Censoring", length(overall_surv$time))))

# Create Figure
fig4.21 <- ggplot(aes(x = time / 365.25, y = surv, linetype = type), 
                 data = pdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_manual("Type", values = c("dashed", "solid")) + 
  xlab("Time since randomization (years)") + 
  ylab('Probability') + 
  scale_x_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0, 6), 
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.02, 0.05)), 
                     limits = c(0, 1.0), 
                     breaks = seq(0, 1.0, 0.1)) +
  theme_general + 
  theme(legend.box = "vertical",
        legend.key.size = unit(1.5, 'cm'))


fig4.21
```

## SAS
```{sas}
#| label: figure-4.21-sas
#| eval: false 
#| output: false
proc phreg data=pbc3 atrisk noprint;
	model followup*status(1 2)=;
	baseline out=survcens survival=kmc / method=pl;
run;
proc phreg data=pbc3 atrisk noprint;
	model followup*status(0)=;
	baseline out=survdat survival=kms / method=pl;
run;
data plotsurv; 
	merge survcens survdat; 
	by followup;
run;
data plotfin; set plotsurv;
	by followup;
	retain lastc lasts;
	if kmc=. then do c=lastc; s=kms; end; 
	if kms=. then do s=lasts; c=kmc; end;
	if kmc ne . and kms ne . then do; c=kmc; s=kms; end;
	output;
	lastc=c; lasts=s;
run;
proc gplot data=plotfin;
	plot c*followup s*followup/haxis=axis1 vaxis=axis2 overlay;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 1 by 0.1 minor=none
	label=(a=90 '"Survival" probability');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```
:::

### In-text: Cox for censoring 

::: {.panel-tabset}
## R
```{r}
#| label: in-text-cox-cens-r
#| out-width: 90%
summary(coxph(Surv(days, status == 0) ~ tment, data = pbc3, method = "breslow"))
summary(coxph(Surv(days, status == 0) ~ alb, data = pbc3, method = "breslow"))
summary(coxph(Surv(days, status == 0) ~ bili, data = pbc3, method = "breslow"))
```

## SAS
```{sas}
#| label: in-text-cox-cens-sas
#| eval: false 
#| output: false
proc phreg data=pbc3;
	class tment (ref='0');
	model followup*status(1 2)=tment/rl;
run;
proc phreg data=pbc3;
	model followup*status(1 2)=alb/rl;
run;
proc phreg data=pbc3;
	model followup*status(1 2)=bili/rl;
run;
```
:::
