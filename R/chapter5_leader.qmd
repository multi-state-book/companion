```{r}
#| echo: false
leader <- read.csv("c:/Users/hnrv/OneDrive - Novo Nordisk/Book/leader/data/leader_mi_3p.csv")
```

# One data set per endpoint type
leader_mi <- subset(leader, type == "recurrent_mi")
leader_3p <- subset(leader, type == "recurrent_comb")


#------------------------------------------------------------------#
#---------------- In-text, p. 213: Mao-Lin models -----------------#
#------------------------------------------------------------------#

library(mets)
fitML_mi <- recreg(Event(start, stop, status) ~ factor(treat) + cluster(id),
               data = leader_mi, cause = c(1,2), cens.code = 0, death.code = 2)
summary(fitML_mi)

table(leader_3p$status)
fit_3p <- recreg(Event(start, stop, status) ~ treat + cluster(id),
               data = leader_3p, cause = 1, cens.code = c(0,2), death.code = 3)
summary(fit_3p)

fit_3p <- recreg(Event(start, stop, status) ~ treat + cluster(id),
               data = leader_3p, cause = 1, cens.code = c(0,2), death.code = 2)
summary(fit_3p)


# Make a small hack to make data ready for analysis
# Death = 1, recurrent MI = 2, cens = 0
leader_mi$death <- ifelse(leader_mi$status == 2, 1, 0)
leader_mi1 <- leader_mi
leader_mi1$status <- ifelse(leader_mi1$status == 1, 2, leader_mi1$status)

require(dplyr)
leader_mi2 <- leader_mi %>% 
              filter(death == 1) %>% 
              mutate(start = stop, 
                     stop = start + 1,
                     status = 1)

leader_mi_hack <- rbind(leader_mi1, leader_mi2) %>% arrange(id, start)
head(leader_mi_hack, 10)

require(Wcompo)

mlfit <- CompoML(id = leader_mi_hack$id, 
                 time = leader_mi_hack$stop, 
                 status = leader_mi_hack$status, 
                 Z = leader_mi_hack[,c("treat")])

mlfit
summary(mlfit)
