### Read data

::: {.panel-tabset}

## R

```{r}
#| label: read-pbc3-r
pbc3 <- read.csv("data/pbc3.csv")
pbc3$log2bili <- with(pbc3, log2(bili))
```

## SAS
```{sas}
#| label: read-pbc3-sas
#| eval: false 
#| output: false
proc import out=pbc3
	datafile="data/pbc3.csv"
	dbms=csv replace;
run;
data pbc3; 
	set pbc3;
	log2bili=log2(bili);
	years=days/365.25;
run;
```
:::

### Table 5.6

::: {.panel-tabset}

## R

```{r}
#| label: table-5.6-r

library(mets)
pbcny <- subset(pbc3, !is.na(alb))
# COLUMN 1: t0 = 2
dirbin2tment <- binreg(Event(days, status) ~ tment,
                       data = pbc3, cause = 2, time = 2 * 365.25, cens.code = 0)
summary(dirbin2tment)
dirbin2 <- binreg(Event(days, status) ~ tment + I(alb - 40) + I(log2(bili) - 4.6), 
                  data = pbcny, cause = 2, time = 2 * 365.25, cens.code = 0)
summary(dirbin2)

library(timereg)
# COLUMN 2: t1,t2,t3 = 1,2,3
timereg3 <- comp.risk(
  Event(days, status) ~ const(tment),
  data = pbc3, cause = 2, times = c(1,2,3) * 365.25,
  model = "logistic", resample.iid = 1, n.sim = 100, monotone = 1)

summary(timereg3)$coef

timereg3 <- comp.risk(
  Event(days, status) ~ const(tment) + const(I(alb - 40)) +  const(I(log2(bili) - 4.6)),
  data = pbcny, cause = 2, times = c(1,2,3) * 365.25,
  model = "logistic", resample.iid = 1, n.sim = 100, monotone = 1)

summary(timereg3)$coef
```

## SAS-NA

There is currently no implementation of direct binomial regression in SAS.

:::

### Figure 5.12

::: {.panel-tabset}

## R


```{r}
#| label: figure-5.12-r
#| out-width: 90%

library(timereg)
library(ggplot2) 
theme_general <- theme_bw() +
  theme(legend.position = "bottom", 
        text = element_text(size = 20), 
        axis.text.x = element_text(size = 20), 
        axis.text.y = element_text(size = 20)) 

# Make Cox model fit
pbc3$years <- pbc3$days/365.25
fit <- cox.aalen(Surv(years, status != 0) ~ prop(tment) + prop(alb) + prop(bili),
                 data = pbc3, n.sim = 0,
                 residuals = 1)

# Cumulative martingale residuals
set.seed(061166)
cum_res <- cum.residuals(fit, pbc3, cum.resid=1, max.point.func = 50, n.sim = 1000)

cumresdata_alb <- data.frame(
  alb = unname(cum_res$proc.cumz[[1]][,1]),
  cum_mg_res = unname(cum_res$proc.cumz[[1]][,2])
  )

cumresdata_albsim <- data.frame(
  alb = rep(unname(cum_res$proc.cumz[[1]][,1]),times = 50),
  cum_mg_res = c(cum_res$sim.test.proccumz[[1]]),
  sim = rep(1:50,each = length(unname(cum_res$proc.cumz[[1]][,1])))
  )

fig5.12 <- ggplot(aes(x = alb, y = cum_mg_res), data = cumresdata_alb) +
  geom_step(aes(x = alb, y = cum_mg_res, group = sim), 
            color = "grey", size = 0.8, data = cumresdata_albsim) +
  geom_step(size = 1) +
  xlab("Albumin") +
  ylab("Cumulative martingale residuals") +
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig5.12
# p-value
cum_res$pval.test[1]
```

## SAS
```{sas}
#| label: figure-5.12-sas
#| eval: false 
#| output: false
ods graphis on; 
proc phreg data=pbc3;
	class tment (ref='0');
	model years*status(0)=tment alb bili / rl;
	assess var=(alb) / resample=1000 npaths=50;
run;
```
:::


### Figure 5.13

::: {.panel-tabset}

## R

```{r}
#| label: figure-5.13-r
#| out-width: 90%

# Figure bili
cumresdata_bili <- data.frame(
  bili = unname(cum_res$proc.cumz[[2]][,1]),
  cum_mg_res = unname(cum_res$proc.cumz[[2]][,2])
  )

cumresdata_bilisim <- data.frame(
  bili= rep(unname(cum_res$proc.cumz[[2]][,1]), times = 50),
  cum_mg_res = c(cum_res$sim.test.proccumz[[2]]),
  sim = rep(1:50,each = length(unname(cum_res$proc.cumz[[2]][,1])))
  )

fig5.13 <- ggplot(aes(x = bili, y = cum_mg_res), data = cumresdata_bili) +
  geom_step(aes(x = bili, y = cum_mg_res, group = sim),
            color = "grey", size = 0.8, data = cumresdata_bilisim) +
  geom_step(size = 1) +
  xlab("Bilirubin") +
  ylab("Cumulative martingale residuals") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig5.13
# p-value
cum_res$pval.test[2]
```

## SAS
```{sas}
#| label: figure-5.13-sas
#| eval: false 
#| output: false
ods graphis on; 
proc phreg data=pbc3;
	class tment (ref='0');
	model years*status(0)=tment alb bili / rl;
	assess var=(bili) / resample=1000 npaths=50;
run;
```
:::

### Figure 5.14

::: {.panel-tabset}

## R

```{r}
#| label: figure-5.14-r
#| out-width: 90%


# Make Cox model fit with log2bili
fit2 <- cox.aalen(
  Surv(years, status != 0) ~ prop(tment) + prop(alb) + prop(log2bili),
  data = pbc3, n.sim = 0, residuals = 1)

# Cumulative martingale residuals
set.seed(061166)
cum_res <- cum.residuals(fit2, pbc3, cum.resid=1, max.point.func = 50, n.sim = 1000)
cumresdata_log2bili <- data.frame(
  log2bili = unname(cum_res$proc.cumz[[2]][,1]),
  cum_mg_res = unname(cum_res$proc.cumz[[2]][,2])
  )

cumresdata_log2bilisim <- data.frame(
  log2bili = rep(unname(cum_res$proc.cumz[[2]][,1]),times = 50),
  cum_mg_res = c(cum_res$sim.test.proccumz[[2]]),
  sim = rep(1:50, each = length(unname(cum_res$proc.cumz[[2]][,1])))
  )

fig5.14 <- ggplot(aes(x = log2bili, y = cum_mg_res), 
                  data = cumresdata_log2bili) +
  geom_step(aes(x = log2bili, y = cum_mg_res, group = sim), 
            color = "grey", size = 0.8, data = cumresdata_log2bilisim) +
  geom_step(size = 1) +
  xlab(expression("log" [2] * "(bilirubin)"))+
  ylab("Cumulative martingale residuals") +
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig5.14
cum_res$pval.test[2]
```

## SAS
```{sas}
#| label: figure-5.14-sas
#| eval: false 
#| output: false
ods graphis on; 
proc phreg data=pbc3;
	class tment (ref='0');
	model years*status(0)=tment alb log2bili /rl;
	assess var=(log2bili) / resample=1000 npaths=50;
run;
```
:::

### Figure 5.15

::: {.panel-tabset}

## R


```{r}
#| label: figure-5.15-r
#| out-width: 90%
# Compute Schoenfeld residuals (standardized)
set.seed(130966)
fit3 <- cox.aalen(
  Surv(years, status != 0) ~ prop(tment) + prop(alb) + prop(log2bili),
  data = pbc3, n.sim = 1000, residuals = 1, weighted.test = 1)
summary(fit3)
par(mfrow = c(1,1))
#plot(fit3, score = T)

time <- fit3$residuals$time
sim <- fit3$sim.test.procProp
obs <- fit3$test.procProp

data_tment_obs <- data.frame(time = time,res = obs[,2])

data_tment_sim <- data.frame(res = do.call("rbind", sim)[,1],
                             time = rep(time, times = 50), 
                             sim = rep(1:50, each = length(time)))

fig5.15 <- ggplot(aes(x = time, y = res), data = data_tment_obs) +
  geom_step(aes(x = time, y = res, group = sim), 
            color = "grey", size = 0.8, data = data_tment_sim) +
  geom_step(size = 1) +
  xlab(expression("Time since randomization (years)"))+
  ylab("Standardized score process") +
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig5.15
fit3$pval.Prop[1]
```
## SAS
```{sas}
#| label: figure-5.15-sas
#| eval: false 
#| output: false
pods graphis on; 
proc phreg data=pbc3;
	class tment (ref='0');
	model years*status(0)=tment alb log2bili /rl;
	assess ph / resample=1000 npaths=50;
run;
```
:::

### Figure 5.16

::: {.panel-tabset}

## R


```{r}
#| label: figure-5.16-r
#| out-width: 90%

# Same but for albumin
data_alb_obs <- data.frame(time = time, 
                           res = obs[,3])

data_alb_sim <- data.frame(res = do.call("rbind", sim)[,2],
                           time = rep(time, times = 50), 
                           sim = rep(1:50, each = length(time)))

fig5.16 <- ggplot(aes(x = time, y = res), data = data_alb_obs) +
  geom_step(aes(x = time, y = res, group = sim), 
            color = "grey", size = 0.8, data = data_alb_sim) +
  geom_step(size = 1) +
  xlab(expression("Time since randomization (years)"))+
  ylab("Standardized score process") +
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig5.16
fit3$pval.Prop[2]
```

## SAS
```{sas}
#| label: figure-5.16-sas
#| eval: false 
#| output: false
ods graphis on; 
proc phreg data=pbc3;
	class tment (ref='0');
	model years*status(0)=tment alb log2bili /rl;
	assess ph / resample=1000 npaths=50;
run;
```
:::


### Figure 5.17

::: {.panel-tabset}

## R

```{r}
#| label: figure-5.17-r
#| out-width: 90%

# Same but for log2bili
data_log2bili_obs <- data.frame(time = time, 
                                res = obs[,4])

data_log2bili_sim <- data.frame(res = do.call("rbind", sim)[,3],
                                time = rep(time, times = 50), 
                                sim = rep(1:50, each = length(time)))

fig5.17 <- ggplot(aes(x = time, y = res), data = data_log2bili_obs) +
  geom_step(aes(x = time, y = res, group = sim), 
            color = "grey", size = 0.8, data = data_log2bili_sim) +
  geom_step(size = 1) +
  xlab(expression("Time since randomization (years)"))+
  ylab("Standardized score process") +
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig5.17
fit3$pval.Prop[3]
```

## SAS
```{sas}
#| label: figure-5.17-sas
#| eval: false 
#| output: false
ods graphis on; 
proc phreg data=pbc3;
	class tment (ref='0');
	model years*status(0)=tment alb log2bili /rl;
	assess ph / resample=1000 npaths=50;
run;
```
:::



