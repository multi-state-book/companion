```{r}
#| echo: false
leader <- read.csv("c:/Users/hnrv/OneDrive - Novo Nordisk/Book/leader/data/leader_mi_3p.csv")
```

### Read data

::: {.panel-tabset}

## R

Assume that the LEADER data set is loaded in data set `leader`.

```{r}
#| label: read-leader-r
# One data set per recurrent endpoint type
leader_mi <- subset(leader, type == "recurrent_mi")
leader_3p <- subset(leader, type == "recurrent_comb_str_mi_cvdth")
```
:::

### Table 3.15

::: {.panel-tabset}
## R
```{r}
#| label: table3.15-r

# Cox model, frailty
library(survival)
coxfrail <- coxph(Surv(start, stop, status == 1) ~ treat + frailty(id), 
                  method = "breslow", 
                  data = leader_mi)
summary(coxfrail)

# PieceWise constant, frailty
# Make cuts 
alltimes <- seq(0,max(leader_mi$stop),length=99)

FunctionIntervalM <- function(a,b) {
  seq(from=min(a), to = max(a), by = (max(a)-min(a))/b)
}

cuts <- FunctionIntervalM(a = alltimes, b = 5)
cuts

# AG model, piecewise constant hazards 
cut_data <- survSplit(Surv(start, stop, status == 1) ~ ., 
                      leader_mi,
                      cut = cuts[-1], 
                      episode = "timegroup")

pwch_frail <- coxph(Surv(start, stop, event) ~ 
                    treat + strata(timegroup) + frailty(id), 
                               data = cut_data)
summary(pwch_frail)

# Joint frailty model, piecewise constant hazards
library(frailtypack)
leader_mi$death <- ifelse(leader_mi$status == 2, 1, 0)
jointfrail_pc_eq_mi <- frailtyPenal(Surv(start, stop, status == 1) ~
                                      cluster(id) + treat + terminal(death),
                                    formula.terminalEvent = ~ treat,
                                    data = leader_mi,
                                    hazard = "Piecewise-equi", nb.int = c(5, 5),
                                    recurrentAG = TRUE)
jointfrail_pc_eq_mi
summary(jointfrail_pc_eq_mi)
```
:::
