### Read data

::: {.panel-tabset}
## R
```{r}
#| label: read-pbc3
pbc3 <- data.frame(read.csv("data/pbc3.csv"))
pbc3$fail <- ifelse(pbc3$status != 0, 1, 0) # event/failure indicator
pbc3$tment_char <- ifelse(pbc3$tment == 0, "Placebo", "CyA")

# Add transformations of covariates 
pbc3$albnorm <- with(pbc3, (alb-35)*(alb>35))
pbc3$alb10 <- with(pbc3, alb/10)
pbc3$alb2 <- with(pbc3, alb10*alb10)

pbc3$bilihigh <- with(pbc3, (bili-17.1)*(bili>17.1))
pbc3$bilitoohigh <- with(pbc3, (bili-34.2)*(bili>34.2))
pbc3$bilimuchtoohigh <- with(pbc3, (bili-51.3)*(bili>51.3))
pbc3$bili100 <- with(pbc3, bili/100)
pbc3$bili2 <- with(pbc3, bili100*bili100)

pbc3$log2bili <- with(pbc3, log2(bili))
pbc3$log2bili2 <- with(pbc3, log2bili*log2bili)

pbc3$logbilihigh <- with(pbc3, (log2bili-log2(17.1))*(bili>17.1))
pbc3$logbilitoohigh <- with(pbc3, (log2bili-log2(34.2))*(bili>34.2))
pbc3$logbilimuchtoohigh <- with(pbc3, (log2bili-log2(51.3))*(bili>51.3))
```

## SAS
```{r}
#| label: read-pbc3-sas
#| eval: false 
#| output: false
proc import out=pbc3
	datafile="data/pbc3.csv"
	dbms=csv replace;
run;
	
data pbc3; 
	set pbc3;
	albnorm=(alb-35)*(alb>35);
	alb10=alb/10;
	alb2=alb*alb;
	bilihigh=(bili-17.1)*(bili>17.1);
	bilitoohigh=(bili-34.2)*(bili>34.2);
	bilimuchtoohigh=(bili-51.3)*(bili>51.3);
	bili100=bili/100;
	bili2=bili*bili;
	log2bili=log2(bili);
	logbilihigh=(log2bili-log2(17.1))*(bili>17.1);
	logbilitoohigh=(log2bili-log2(34.2))*(bili>34.2);
	logbilimuchtoohigh=(log2bili-log2(51.3))*(bili>51.3);
	log2bili2=log2bili*log2bili;
run;

```
:::


### Figure 2.1 

::: {.panel-tabset}
## R
```{r}
#| label: figure-2.1-r
#| out-width: 90%
# General plotting style 
library(ggplot2)
theme_general <- theme_bw() +
  theme(text = element_text(size = 20), 
        axis.text.x = element_text(size = 20), 
        axis.text.y = element_text(size = 20),
        legend.position = "bottom", 
        legend.title=element_blank(),
        legend.text = element_text(size = 20),
        legend.key.size = unit(2,"line"))

# Nelson Aalen estimate by treatment
library(survival)
nafit <- survfit(Surv(days, status != 0) ~ tment, data = pbc3)
# Collect data for plot
nadata <- data.frame(cumhaz = nafit$cumhaz, time = nafit$time, 
                     tment = c(rep(names(nafit$strata)[1], nafit$strata[1]), 
                               rep(names(nafit$strata)[2], nafit$strata[2])))

# Create Figure 2.1
library(ggplot2)
fig2.1 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = tment),
                 data = nadata) + 
  geom_step(size = 1) + 
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA")) + 
  xlab("Time since randomization (years)") + 
  ylab("Cumulative hazard") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6), breaks = seq(0, 6, 1))  + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +
  theme_general 

fig2.1
```

## SAS
```{r}
#| label: figure-2.1-sas
#| eval: false 
#| output: false
proc phreg data=pbc3; 
	model days*status(0)=;
	strata tment;
	baseline out=hazdat cumhaz=naa stdcumhaz=sdnaa;
run;
data hazdat; 
	set hazdat; 
	daysyears = days/365.25; 
run; 
proc gplot data=hazdat;
	plot naa*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none
    label=('Years');
	axis2 order=0 to 0.7 by 0.1 minor=none
    label=(a=90 'Cumulative hazard');
	symbol1  v=none i=stepjl c=red;
	symbol2  v=none i=stepjl c=blue;
run;
```

:::

### In-text: Nelson-Aalen estimates at 2 years

::: {.panel-tabset}

## R
```{r}
#| label: in-text-Naa2-r
tail(subset(nadata, nadata$time <= 2*365.25 & nadata$tment == "tment=0"),1)
tail(subset(nadata, nadata$time <= 2*365.25 & nadata$tment == "tment=1"),1)
```

## SAS
```{r}
#| label: in-text-Naa2-sas
#| eval: false 
#| output: false
proc print data=hazdat;
	where 1.5<daysyears<=2; 
run;
```
:::

### Table 2.1 

::: {.panel-tabset}

## R
```{r}
#| label: table-2.1-r
# Data for Table 2.1
cuts <- c(0, 2, 4) * 365.25
# Make the data ready using survSplit from survival package
library(survival)
pbc3mult <- as.data.frame(survSplit(Surv(days, fail) ~ ., pbc3,
                      cut = cuts[-1], 
                      episode = "timegroup"))
pbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] 
pbc3mult$timegroup <- as.factor(pbc3mult$timegroup)

library(dplyr)
pcwdata <- pbc3mult %>% 
  group_by(tment, timegroup) %>% 
  summarise(fail = sum(fail), risktime = sum(days - cuts[timegroup]))
pcwdata$risktimeyrs <- pcwdata$risktime/365.25
pcwdata$hazard <- 36525*pcwdata$fail/pcwdata$risktime
pcwdata$SD <- 36525*sqrt(pcwdata$fail)/pcwdata$risktime
data.frame(pcwdata)
```

## SAS
```{r}
#| label: table-2.1-sas
#| eval: false 
#| output: false
/* prepare for poisson model */
data pbc3mult; 
	set pbc3;
	fail=(days<=2 * 365.25)*(status ne 0);
	risktime=min(2 * 365.25, days);
	logrisk=log(risktime); interv=1; output;  
	if days>2 * 365.25 then do;
	fail=(days<=4 * 365.25)*(status ne 0);
	risktime=min(2 * 365.25 ,days-2 * 365.25);
	logrisk=log(risktime); interv=2; output; end;
	if days>4 * 365.25  then do;
	fail=status ne 0; 
	risktime=days-4 * 365.25;
	logrisk=log(risktime); interv=3; output; end;
run;
proc means sum  data=pbc3mult;
	class tment interv;
	var fail risktime;
run;

proc genmod data=pbc3mult;
	where tment=1;
	class interv;
	model fail=interv/dist=poi offset=logrisk;
	estimate '0-2 years' intercept 1  interv 1 0 0/exp;
	estimate '2-4 years' intercept 1  interv 0 1 0/exp;
	estimate '4-6 years' intercept 1  interv 0 0 1/exp;
run;
proc genmod data=pbc3mult;
	where tment=0;
	class interv;
	model fail=interv/dist=poi offset=logrisk;
	estimate '0-2 years' intercept 1  interv 1 0 0/exp;
	estimate '2-4 years' intercept 1  interv 0 1 0/exp;
	estimate '4-6 years' intercept 1  interv 0 0 1/exp;
run;
```
::: 


### Figure 2.2 

```{r}
#| label: figure-2.2
#| out-width: 90%
# Rates + cuts from Table 2.1
rateCyA <- c(8.1,13.1,9.6)
ratePbo <- c(9.4,12.5,8.5)
pcwtime <- c(0,2,4,5)
# Collect data
plotdata <- data.frame(rates = c(rateCyA, ratePbo),
                       tment = c(rep("CyA", length(rateCyA)), 
                                 rep("Placebo", length(ratePbo))),
                       times_s = rep(pcwtime[-4], 2),
                       times = rep(pcwtime[-1], 2))

# Create Figure 2.2
fig2.2 <- ggplot(aes(x = time, y = rates, linetype = tment), data = plotdata) +
  geom_segment(aes(x = times_s, y = rates, xend = times, yend = rates),size=1) +
  scale_linetype_discrete("Treatment", labels = c("Placebo", "CyA"))  +
  xlab("Time since randomization (years)") +
  ylab("Estimated hazard function (per 100 years)") +
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 5),
                     breaks = seq(0, 5, 1))  +
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05)), 
                     limits = c(0,14), breaks = seq(0, 14, 2)) +
  theme_general

fig2.2
```

### In-text: LRT test piece-wise exponential model  

::: {.panel-tabset}

```{r}
#| label: in-text-lrt-pcw-sas-r
library(stats)
poisfull <- glm(fail ~ tment + timegroup + tment*timegroup +
                  offset(log(risktime/36525)), data = pbc3mult, family=poisson)
poisred <- glm(fail ~  timegroup + tment +
                 offset(log(risktime/36525)), data = pbc3mult, family=poisson)
anova(poisred,poisfull,test="LRT")
# or
library(lmtest)
lrtest(poisred,poisfull)
```
## SAS

```{r}
#| label: in-text-lrt-pcw-sas
#| eval: false 
#| output: false
ods output modelfit=full;
proc genmod data=pbc3mult;
	class interv tment;
	model fail=interv|tment /dist=poi offset=logrisk;
run;
data full;
  set full;
	 where Criterion="Deviance";
	 full_like=value;
	 full_df=df;
	 keep full_like full_df;
run;
proc print;run;
ods output modelfit=reduced;
proc genmod data=pbc3mult;
	class interv tment;
	model fail=interv /dist=poi offset=logrisk;
run;
data reduced;
  set reduced;
	 where Criterion="Deviance";
	 reduced_like=value;
	 reduced_df=df;
	 keep reduced_like reduced_df;
run;
data lrt_pval;
 merge full reduced;
  lrt = reduced_like - full_like;
	df  = reduced_df - full_df;
  p_value = 1 - probchi(lrt,df);
run;
proc print data=lrt_pval;
  title "LR test statistic and p-value";
run;
```
:::

### In-text: Logrank test and p-value                       

::: {.panel-tabset}

## R
```{r}
#| label: in-text-logrank-r
library(survival)
lr<-survdiff(Surv(days, status != 0) ~ tment, data = pbc3)
c(lr$chisq,lr$pvalue)
```

## SAS
```{r}
#| label: in-text-logrank-sas
#| eval: false 
#| output: false
proc lifetest data=pbc3 notable; 
	time days*status(0);
	strata tment;
run;
```
:::

### Figure 2.3 

::: {.panel-tabset}

## R
```{r}
#| label: figure-2.3-r
#| out-width: 90%
# NA data from figure 2.1 model fit
tment1 <- subset(nadata, tment == "tment=1")
# Estimated hazard per time group
pcwdata$hazard_timegroup <- pcwdata$fail / pcwdata$risktime
# Add a numeric version of the treatment to the NA estimates
nadata$tmentnum <- ifelse(nadata$tment == "tment=1", 1, 0)
# Add piecewise constant hazard to data
nadata$pwch <- NULL
# Between time 0 and 2
nadata$pwch[nadata$time <= 2 * 365.25] <- nadata$time[nadata$time <= 2 * 365.25] *
  (pcwdata$hazard_timegroup[1] * (1-nadata$tmentnum[nadata$time <= 2 * 365.25]) +
     pcwdata$hazard_timegroup[4] * (nadata$tmentnum[nadata$time <= 2 * 365.25]))
# Between time 2 and 4
nadata$pwch[nadata$time > 2 * 365.25 & nadata$time <= 4* 365.25 ] <- 2 * 365.25 * 
  (pcwdata$hazard_timegroup[1] * (1-nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25]) + 
     pcwdata$hazard_timegroup[4] * (nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25])) + 
  (nadata$time[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25] - 2 * 365.25) * 
  (pcwdata$hazard_timegroup[2] * (1-nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25]) + 
     pcwdata$hazard_timegroup[5] * (nadata$tmentnum[nadata$time > 2 * 365.25 & nadata$time <= 4 * 365.25]))
# After time 4
nadata$pwch[nadata$time > 4 * 365.25] <- 2 * 365.25 * 
  (pcwdata$hazard_timegroup[1] * (1-nadata$tmentnum[nadata$time > 4 * 365.25]) + 
     pcwdata$hazard_timegroup[4] * (nadata$tmentnum[nadata$time > 4 * 365.25])) + 
   2 * 365.25 * 
  (pcwdata$hazard_timegroup[2] * (1-nadata$tmentnum[nadata$time > 4 * 365.25]) + 
     pcwdata$hazard_timegroup[5] * (nadata$tmentnum[nadata$time > 4 * 365.25])) + 
  (nadata$time[nadata$time > 4 * 365.25] - 4 * 365.25) * 
  (pcwdata$hazard_timegroup[3] * (1-nadata$tmentnum[nadata$time > 4 * 365.25]) + 
     pcwdata$hazard_timegroup[6] * (nadata$tmentnum[nadata$time > 4 * 365.25]))
# Reformat for plot
piecepdata <- data.frame(cumhaz = c(nadata$cumhaz, nadata$pwch), 
                         time = rep(nadata$time, 2),
                         tmentnum = rep(nadata$tmentnum, 2),
                         type = c(rep("Nelson-Aalen", length(nadata$time)), 
                                  rep("Piece-wise exponential", length(nadata$time))))
# Only for treatment 1
piecepdata1 <- subset(piecepdata, tmentnum == 1)

# Create Figure 2.3
fig2.3 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = type), 
                data = subset(piecepdata1, type == "Nelson-Aalen")) + 
  geom_step(size = 1) + 
  geom_line(aes(x = time / 365.25, y = cumhaz, linetype = type), size = 1,
            data = subset(piecepdata1, type == "Piece-wise exponential")) + 
  labs(linetype = "Type") + 
  xlab("Time since randomization (years)") + 
  ylab("Cumulative hazard") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1))  + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +
  theme_general+
  theme(legend.title=element_blank(),
        legend.text = element_text(size = 20),
        legend.key.size = unit(2,"line"))

fig2.3
```

## SAS
```{r}
#| label: figure-2.3-sas
#| eval: false 
#| output: false

data hazdat; 
	set hazdat;
	if days<=2 * 365.25 then 
		pwch=days*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment);

	if 2 * 365.25 <days<=4 * 365.25 then
		pwch=2* 365.25*(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)
		+(days-2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment);

	if 4 * 365.25 <days then
		pwch=2* 365.25 *(27.0000000/104856*(1-tment)+24.0000000/107931.5*tment)
		+(2* 365.25)*(17.0000000/49673*(1-tment)+18.0000000/50284*tment)
		+(days-4* 365.25)*(2.0000000/8642*(1-tment)+2.0000000/7599*tment);
	daysyears = days/365.25; 
run; 

proc gplot data=hazdat; where tment=1;
	plot (naa pwch)*daysyears/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 0.7 by 0.1 minor=none
	  label=(a=90 'Cumulative hazard');
	symbol1  v=none i=stepjl r=1 c=red;
	symbol2 v=none i=join r=1 c=blue;
run;
```
:::


### In-text: Cox model with treatment only 

::: {.panel-tabset}

## R
```{r}
#| label: in-text-cox-r
# Fit a Cox model using the pbc3 data with treatment as a covariate
library(survival)
coxfit <- coxph(Surv(days, status != 0) ~ tment, data = pbc3, method = "breslow")
coxfit
```

## SAS
```{r}
#| label: in-text-cox-sas
#| eval: false 
#| output: false
proc phreg data=pbc3;
	model days*status(0)=tment/rl;
run;
```
:::

### Figure 2.5 

::: {.panel-tabset}

## R
```{r}
#| label: figure-2.5-r
#| out-width: 90%
# Extract cumulative baseline hazard
coxcumhaz <- basehaz(coxfit, centered = FALSE)
# Collect data for plot (Breslow estimate)
coxdata <- data.frame(cumhaz = coxcumhaz$hazard, 
                      time = coxcumhaz$time, 
                      tment = rep("0", nrow(coxcumhaz)), 
                      type = rep("Breslow estimate", nrow(coxcumhaz)))

fig2.5 <- ggplot(aes(x = time / 365.25, y = cumhaz, linetype = tment),
                 data = coxdata) + 
  geom_step(size = 1) + 
  xlab("Time since randomization (years)") + 
  ylab("Cumulative baseline hazard") + 
  scale_linetype_discrete("Treatment", labels = c("Placebo")) + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)),
                     limits = c(0, 6),
                     breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.005, 0.05))) +
  theme_general+theme(legend.position = "none")

fig2.5
```

## SAS
```{r}
#| label: figure-2.5-sas
#| eval: false 
#| output: false
data cov;
	tment=0;
run;
proc phreg data=pbc3;
	model days*status(0)=tment/rl;
	baseline out=breslow cumhaz=breslow covariates=cov;
run;
data breslow; 
	set breslow; 
	daysyears = days/365.25; 
run; 
proc gplot data=breslow;
	plot breslow*daysyears=tment/haxis=axis1 vaxis=axis2;
	axis1 order=0 to 6 by 1 minor=none label=('Years');
	axis2 order=0 to 0.7 by 0.1 minor=none label=(a=90 'Cumulative baseline hazard');
	symbol1  v=none i=stepjl c=blue;
run;
```
:::


### Table 2.3 

::: {.panel-tabset}
## R
```{r}
#| label: table-2.3-r
# Average covariate values of albumin and bilirubin per treatment 
library(dplyr)
tabledata <- pbc3 %>% 
  group_by(tment, tment_char) %>% 
  summarise(n = sum(id != 0),  
            average_albumin = mean(alb, na.rm = TRUE), 
            # NOTE: Removes missing observations from mean computation
            average_bilirubin = mean(bili, na.rm = TRUE), 
            )
data.frame(tabledata)
```

## SAS
```{r}
#| label: table-2.3-sas
#| eval: false 
#| output: false
proc means data=pbc3 mean;
  class tment;
	var alb bili;
run;
```
:::

### Table 2.4

::: {.panel-tabset}
## R
```{r}
#| label: table-2.4-r
# Cox model with treatment, albumin and bilirubin as covariates 
library(survival)
coxfit <- coxph(Surv(days, status != 0) ~ tment + alb + bili,
                data = pbc3)
coxfit
```

## SAS
```{r}
#| label: table-2.4-sas
#| eval: false 
#| output: false
proc phreg data=pbc3;
	model days*status(0)=tment alb bili / rl;
run;
```
:::

### In-text: Poisson model with treatment only (and time) 

::: {.panel-tabset}
## R
```{r}
#| label: in-text-poission-r
library(stats)
library(broom) # For using tidy() function to get exp(beta)
poism <- glm(fail ~ tment + timegroup-1 +
               offset(log(risktime/365.25)), data = pbc3mult,family = poisson)
tidy(poism, exponentiate = T, conf.int = T)
```

## SAS
```{r}
#| label: in-text-poission-sas
#| eval: false 
#| output: false
proc genmod data=pbc3mult;
	class interv tment;
	model fail = interv tment / dist=poi offset=logrisk;
	estimate 'CyA  vs placebo' tment -1 1 / exp;
run;
```
:::

### Table 2.5 

::: {.panel-tabset}
## R
```{r}
#| label: table-2.5-r
# Poisson model with treatment, albumin and bilirubin as covariates
poismod_t25 <- glm(fail ~ tment + alb + bili+ timegroup-1 +
                     offset(log(risktime/365.25)),data=pbc3mult,family=poisson)
tidy(poismod_t25)
```

## SAS
```{r}
#| label: table-2.5-sas
#| eval: false 
#| output: false
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= tment interv alb  bili / dist=poi offset=logrisk ;
run;
```
:::

### Table 2.6

::: {.panel-tabset}
## R
```{r}
#| label: table-2.6-r
#------------------------------------------------------------------#
# Table 2.6 Cox models 
#------------------------------------------------------------------#

# Models for LR tests
library(lmtest)
base_coxmod <- coxph(Surv(days, status != 0) ~ tment + alb + bili, 
                     eps = 1e-8, method = "breslow", data = pbc3)
base_coxmod_log <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,
                         eps = 1e-8, method = "breslow", data = pbc3)

# Splines Cox 1
coxmod_t26_l1 <- coxph(Surv(days, status != 0) ~ tment + alb + albnorm + bili,
                       eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t26_l1
lrtest(coxmod_t26_l1, base_coxmod)

# Quadratic Cox 1
coxmod_t26_q1 <- coxph(Surv(days, status != 0) ~ tment + alb + I(alb*alb) + bili,
                       eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t26_q1
lrtest(coxmod_t26_q1, base_coxmod)

# Splines Cox 2
coxmod_t26_l2 <- coxph(Surv(days, status != 0) ~ tment + alb + 
                         bili + bilihigh + bilitoohigh + bilimuchtoohigh,
                       eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t26_l2
lrtest(coxmod_t26_l2, base_coxmod)

# Quadratic Cox 2
coxmod_t26_q2 <- coxph(Surv(days, status != 0) ~ tment+alb+bili + I(bili*bili),
                       eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t26_q2
lrtest(coxmod_t26_q2, base_coxmod)

# Splines Cox 3
coxmod_t26_l3 <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili +
                         logbilihigh + logbilitoohigh + logbilimuchtoohigh,
                       eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t26_l3
lrtest(coxmod_t26_l3, base_coxmod_log)

# Quadratic Cox 3
coxmod_t26_q3 <- coxph(Surv(days, status != 0) ~ tment+alb+log2bili + log2bili2,
                       eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t26_q3
lrtest(coxmod_t26_q3, base_coxmod_log)

#------------------------------------------------------------------#
# Table 2.6 Poisson models 
#------------------------------------------------------------------#

# Make the data ready for Poisson models using survSplit from survival package
library(survival)
pbc3mult <- as.data.frame(survSplit(Surv(days, fail) ~ ., pbc3,
                                    cut = cuts[-1], 
                                    episode = "timegroup"))
pbc3mult$risktime <- pbc3mult$days - cuts[pbc3mult$timegroup] 
pbc3mult$timegroup <- as.factor(pbc3mult$timegroup)

# Models for LR test
base_poismod <- glm(fail ~ timegroup + tment + alb + bili +
                      offset(log(risktime)), data = pbc3mult, family = poisson)
base_poismod_log <- glm(fail ~ timegroup + tment + alb + log2bili +
                          offset(log(risktime)), data=pbc3mult,family=poisson)

# Splines Poisson 1
poismod_t26_l1 <- glm(fail ~ timegroup + tment + alb + albnorm + bili +
                        offset(log(risktime)), data=pbc3mult, family=poisson)
tidy(poismod_t26_l1)
lrtest(poismod_t26_l1, base_poismod)

# Quadratic Poisson 1
poismod_t26_q1 <- glm(fail ~ timegroup + tment + alb + I(alb*alb) + bili +
                        offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t26_q1)
lrtest(poismod_t26_q1, base_poismod)

# Splines Poisson 2
poismod_t26_l2 <- glm(fail ~ timegroup + tment + alb + 
                        bili + bilihigh + bilitoohigh + bilimuchtoohigh +
                        offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t26_l2)
lrtest(poismod_t26_l2, base_poismod)

# Quadratic Poisson 2
poismod_t26_q2 <- glm(fail ~ timegroup + tment + alb + bili + I(bili*bili) +
                        offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t26_q2)
lrtest(poismod_t26_q2, base_poismod)

# Splines Poisson 3
poismod_t26_l3 <- glm(fail ~ timegroup + tment + alb + 
                        log2bili + logbilihigh + logbilitoohigh + logbilimuchtoohigh +
                        offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t26_l3)
lrtest(poismod_t26_l3, base_poismod_log)

# Quadratic Poisson 3
poismod_t26_q3 <- glm(fail ~ timegroup + tment + alb + log2bili + log2bili2 +
                        offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t26_q3)
lrtest(poismod_t26_q3, base_poismod_log)
```

## SAS
```{r}
#| label: table-2.6-sas
#| eval: false 
#| output: false

** Cox models **;

* Base models for LR tests; 
proc phreg data=pbc3;
	class tment (ref='0');
	model days*status(0)=tment alb bili/rl ties=breslow CONVERGELIKE=1E-8 type3(lr);
run;
proc phreg data=pbc3;
	class tment (ref='0');
	model days*status(0)=tment alb log2bili/rl ties=breslow CONVERGELIKE=1E-8 type3(lr);
run;

* Splines Cox 1; 
* LRT can here be read of type3 test result; 
proc phreg data=pbc3;
	class tment (ref='0');
	model days*status(0)=tment alb albnorm bili/rl ties=breslow CONVERGELIKE=1E-8 type3(lr);
run;

* Quadratic Cox 1; 
* LRT can here be read of type3 test result; 
proc phreg data=pbc3;
  alb2=alb*alb;
	class tment (ref='0');
	model days*status(0)=tment alb10 alb2 bili100/rl type3(LR);
run;

* Splines Cox 2;
proc phreg data=pbc3;
	class tment (ref='0');
	model days*status(0)=tment alb bili bilihigh bilitoohigh 
	                         bilimuchtoohigh/rl type3(lr) ties=breslow CONVERGELIKE=1E-8;
run;
* LRT; 
data p;
	chi2=826.830-802.434;
	p=1-probchi(chi2,3);
proc print;
run;

* Quadratic Cox 2; 
* LRT can here be read of type3 test result; 
proc phreg data=pbc3;
  bili2=bili*bili;
	class tment (ref='0');
	model days*status(0)=tment alb10 bili bili2 / rl type3(LR);
run;

* Splines Cox 3;
proc phreg data=pbc3;
	class tment (ref='0');
	model days*status(0)=tment alb log2bili logbilihigh 
	                         logbilitoohigh logbilimuchtoohigh/rl ties=breslow CONVERGELIKE=1E-8;
*linbili: test  logbilihigh=logbilitoohigh=logbilimuchtoohigh=0;
run;
* LRT; 
data p;
	chi2=805.881-804.267;
	p=1-probchi(chi2,3);
proc print;
run;

* Quadratic Cox 3; 
* LRT can here be read of type3 test result; 
proc phreg data=pbc3;
	class tment (ref='0');
	model days*status(0)=tment alb10 log2bili log2bili2/rl type3(LR);
run;

* Split data into timegroups for Poisson models; 
data pbc3mult; 
	set pbc3;
	fail=(days<=2 * 365.25)*(status ne 0);
	risktime=min(2 * 365.25,days);
	logrisk=log(risktime); interv=1; output;  
	if days>2* 365.25 then do;
	fail=(days<=4* 365.25)*(status ne 0);
	risktime=min(2* 365.25,days-2* 365.25);
	logrisk=log(risktime); interv=2; output; end;
	if days>4* 365.25 then do;
	fail=status ne 0; 
	risktime=days-4* 365.25;
	logrisk=log(risktime); interv=3; output; end;
run;


** Possion models **;

* Models to compare with for the LR tests; 
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb bili/ dist=poi offset=logrisk type3;
run;

proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb log2bili/ dist=poi offset=logrisk type3;
run;

* Splines Poisson 1; 
* LRT can here be read of type3 test result; 
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb albnorm bili/ dist=poi offset=logrisk type3;
run;

* Quadratic Poisson 1;
* LRT can here be read of type3 test result; 
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb10 alb2 bili100/ dist=poi offset=logrisk type3;
run;

* Splines Poisson 2; 
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb bili bilihigh bilitoohigh  
	             bilimuchtoohigh/ dist=poi offset=logrisk type3;
run;
* LRT; 
data p;
	chi2=350.7253-326.1805;
	p=1-probchi(chi2,3);
proc print;
run;

* Quadratic Poisson 2;
* LRT can here be read of type3 test result; 
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb10 bili100 bili2/ dist=poi offset=logrisk type3;
run;

* Splines Poisson 3;
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb log2bili logbilihigh logbilitoohigh 
	             logbilimuchtoohigh / dist=poi offset=logrisk type3;
run;
* LRT; 
data p;
	chi2=329.2509-327.5375;
	p=1-probchi(chi2,3);
proc print;
run;

* Quadratic Poisson 3;
* LRT can here be read of type3 test result; 
proc genmod data=pbc3mult;
	class tment (ref='0') interv;
	model fail= interv tment alb10 log2bili log2bili2/ dist=poi offset=logrisk type3;
run;
```
:::


### Figure 2.6 

```{r}
#| label: figure-2.6
#| out-width: 90%
# The below linear predictors include estimates from the following models
pbc3mult$timegroup <- relevel(as.factor(pbc3mult$timegroup), ref = "3")
pbc3mult$tment_char <- as.factor(pbc3mult$tment_char)
pbc3mult$tment_char <- relevel(pbc3mult$tment_char, ref = "Placebo")
base_poismod <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + 
                      tment_char + alb + bili,
                    data = pbc3mult, family = poisson)
poismod_t26_l1 <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + 
                        tment_char + alb + bili + albnorm,
                      data = pbc3mult, family = poisson)
poismod_t26_l3 <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + 
                        tment_char + alb + 
                        bili + bilihigh + bilitoohigh + bilimuchtoohigh,
                      data = pbc3mult,family = poisson)
# Make a dataset with linear predictor information
lin2 <- pbc3
lin2$lp1 <- with(pbc3, 1.6076-0.1123*alb)
lin2$lp2 <- with(pbc3, 0.7828-0.0864*alb-0.0474*albnorm)
lin2$lp3 <- with(pbc3, 1.6076+0.0085*bili-38.7*0.1123)
lin2$lp4 <- with(pbc3, -0.5534+0.0617*bili-0.0168*bilihigh+
                   0.0027*bilitoohigh-0.0428*bilimuchtoohigh-0.0865*38.7)
lin2row <- data.frame(effect = c(rep("Linear effect", nrow(lin2)),
                                 rep("Effect as linear spline", nrow(lin2))), 
                      lp = c(lin2$lp1, lin2$lp2), alb = c(lin2$alb, lin2$alb))
library(ggplot2)
fig2.6 <- ggplot(aes(x = alb, y = lp, linetype = effect), data = lin2row) +
  geom_line(size = 1) + 
  xlab("Albumin") + 
  ylab("Linear predictor") + 
  scale_linetype_discrete("Effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.6
```

### Figure 2.7 

```{r}
#| label: figure-2.7
#| out-width: 90%
# bilirubin and the two last linear predictors
lin2row2 <- data.frame(effect = c(rep("Linear effect", nrow(lin2)),
                                  rep("Effect as linear spline", nrow(lin2))), 
                      lp = c(lin2$lp3, lin2$lp4),
                      bili = c(lin2$bili, lin2$bili))

fig2.7 <- ggplot(aes(x = bili, y = lp, linetype = effect), data = lin2row2) + 
  geom_line(size = 1) + 
  xlab("Bilirubin") + 
  ylab("Linear predictor") + 
  scale_linetype_discrete("Effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.7
```

### Figure 2.8 

```{r}
#| label: figure-2.8
#| out-width: 90%
# The below linear predictors include estimates from the following models
base_poismod2_log <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + 
                           tment_char + alb + log2bili,
                         data = pbc3mult, family = poisson)
poismod_t26_l3 <- glm(fail ~ offset(log(risktime)) + as.factor(timegroup) + 
                        tment_char + alb + log2bili + 
                        logbilihigh + logbilitoohigh + logbilimuchtoohigh,
                        data = pbc3mult, family = poisson)
# Make a dataset with linear predictor information
log2 <- pbc3
log2$lp3 <- with(pbc3, -2.0162+0.6469*log2bili-38.7*0.087)
log2$lp4 <- with(pbc3, -0.6194+0.198*log2bili
                 +0.8815*logbilihigh-0.2336*logbilitoohigh
                 -0.3139*logbilimuchtoohigh-0.0844*38.7)
log2row <- data.frame(effect = c(rep("Linear effect", nrow(log2)),
                                 rep("Effect as linear spline", nrow(log2))), 
                      lp = c(log2$lp3, log2$lp4),
                      log2bili = c(log2$log2bili, log2$log2bili)
                      )

fig2.8 <- ggplot(aes(x = log2bili, y = lp, linetype = effect), data = log2row) + 
  geom_line(size = 1) + 
  xlab(expression(log[2] * "(bilirubin)")) +
  ylab("Linear predictor") + 
  scale_linetype_discrete("Effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.8
```

### Table 2.7 

```{r}
#| label: table-2.7
# Cox model
coxmod_t27 <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,
                    eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t27

# Poisson model
poismod_t27 <- glm(fail ~ tment + alb + log2bili + timegroup + 
                     offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t27) 
```

### Table 2.8 

```{r}
#| label: table-2.8
# Cox models
# Model for LR comparison
coxmod_t28_base <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,
                      eps = 1e-8, method = "breslow", data = pbc3)
# Cox model 1
pbc3$alb0 <- (pbc3$tment==0)*pbc3$alb
pbc3$alb1 <- (pbc3$tment==1)*pbc3$alb
coxmod_t28_1 <- coxph(Surv(days, status != 0) ~ tment + alb0 + alb1 + log2bili,
                      eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t28_1
lrtest(coxmod_t28_1, coxmod_t28_base)

# Cox model 2
pbc3$bili0 <- (pbc3$tment==0)*pbc3$log2bili
pbc3$bili1 <- (pbc3$tment==1)*pbc3$log2bili
coxmod_t28_2 <- coxph(Surv(days, status != 0) ~ tment + alb + bili0 + bili1,
                      eps = 1e-8, method = "breslow", data = pbc3)
coxmod_t28_2
lrtest(coxmod_t28_2, coxmod_t28_base)

# Poisson models
# Model for LR comparison - no interaction
poismod_t28_base <- glm(fail ~ timegroup + tment + alb + log2bili+
                          offset(log(risktime)), data=pbc3mult, family=poisson)

# Poisson model 1
pbc3mult$alb0 <- (pbc3mult$tment==0)*pbc3mult$alb
pbc3mult$alb1 <- (pbc3mult$tment==1)*pbc3mult$alb
poismod_t28_1 <- glm(fail ~ tment + alb0 + alb1 + log2bili + timegroup +
                       offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t28_1) 
lrtest(poismod_t28_base, poismod_t28_1)

# Poisson model 2
pbc3mult$bili0 <- (pbc3mult$tment==0)*pbc3mult$log2bili
pbc3mult$bili1 <- (pbc3mult$tment==1)*pbc3mult$log2bili
poismod_t28_2 <- glm(fail ~ tment + alb + bili0 + bili1 + timegroup +
                       offset(log(risktime)), data = pbc3mult, family = poisson)
tidy(poismod_t28_2) 
lrtest(poismod_t28_base, poismod_t28_2)
```

### Table 2.9 

```{r}
#| label: table-2.9
pbc3mult$tment1 <- (pbc3mult$timegroup==1)*pbc3mult$tment
pbc3mult$tment2 <- (pbc3mult$timegroup==2)*pbc3mult$tment
pbc3mult$tment3 <- (pbc3mult$timegroup==3)*pbc3mult$tment
pbc3mult$alb1 <- (pbc3mult$timegroup==1)*pbc3mult$alb
pbc3mult$alb2 <- (pbc3mult$timegroup==2)*pbc3mult$alb
pbc3mult$alb3 <- (pbc3mult$timegroup==3)*pbc3mult$alb
pbc3mult$bili1 <- (pbc3mult$timegroup==1)*pbc3mult$log2bili
pbc3mult$bili2 <- (pbc3mult$timegroup==2)*pbc3mult$log2bili
pbc3mult$bili3 <- (pbc3mult$timegroup==3)*pbc3mult$log2bili

poismod_t29_base <- glm(fail~tment+alb+log2bili+timegroup+offset(log(risktime)),
                     data = pbc3mult, family = poisson)

# Treatment
poismod_t29_tment <- glm(fail ~ tment1 + tment2 + tment3 + alb + log2bili+
                       timegroup + offset(log(risktime)),
                     data = pbc3mult, family = poisson)
tidy(poismod_t29_tment) 
lrtest(poismod_t29_base, poismod_t29_tment)

# Albumin
poismod_t29_alb <- glm(fail ~ tment + alb1 + alb2 + alb3 + log2bili+
                       timegroup + offset(log(risktime)),
                     data = pbc3mult, family = poisson)
tidy(poismod_t29_alb) 
lrtest(poismod_t29_base, poismod_t29_alb)

# Bilirubin
poismod_t29_bili <- glm(fail ~ tment + alb + bili1 + bili2 + bili3 +
                       timegroup + offset(log(risktime)),
                     data = pbc3mult, family = poisson)
tidy(poismod_t29_bili) 
lrtest(poismod_t29_base, poismod_t29_bili)
```


### In-text: stratified Cox model 

```{r}
#| label: in-text-stratified-cox
coxmod_f29 <- coxph(Surv(days, status != 0) ~ strata(tment) + alb + log2bili,
                      eps = 1e-8, method = "breslow", data = pbc3)
coxmod_f29
```

### Figure 2.10 

```{r}
#| label: figure-2.10
#| out-width: 90%
# Extracting cumulative baseline hazards per treatment
cumhaz_treat <- basehaz(coxmod_f29, centered = FALSE)
cumhaz_treat <- as.data.frame(cumhaz_treat)
# Per treatment
hazard_t0 <- cumhaz_treat[cumhaz_treat$strata == "tment=0",]
hazard_t0[1,] <- c(0, 0, "tment=0")
hazard_t0$time<- as.numeric(hazard_t0$time)
hazard_t0$hazard <- as.numeric(hazard_t0$hazard)
hazard_t1 <- cumhaz_treat[cumhaz_treat$strata == "tment=1",]
# Match times
alltimes <- sort(unique(cumhaz_treat$time))
hazard_t0_allt <- as.numeric(sapply(1:length(alltimes),function(k) 
  tail(hazard_t0$hazard[hazard_t0$time <= alltimes[k]], 1)))
hazard_t1_allt <- as.numeric(sapply(1:length(alltimes), function(k)
  tail(hazard_t1$hazard[hazard_t1$time <= alltimes[k]], 1))) 
hazards <- data.frame(hazard_t0_allt, hazard_t1_allt)
# Extract coefficient
coxmod_f29_t <- coxph(Surv(days, status != 0) ~ tment + alb + log2bili,
                      eps = 1e-8, method = "breslow", data = pbc3)
# Make plot
fig2.10 <- ggplot(aes(x = hazard_t0_allt, y = hazard_t1_allt), data = hazards) + 
  geom_step(size = 1) + 
  geom_abline(intercept = 0, slope = exp(coef(coxmod_f29_t)[["tment"]]), 
              linetype = "dashed", size = 1) + 
  xlab("Cumulative baseline hazard: placebo") +
  ylab("Cumulative baseline hazard: CyA") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05))) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.10
```


### Figure 2.11 

```{r}
#| label: figure-2.11
#| out-width: 90%
# Additive Aalen models - available with timereg
library(timereg)
nonparmod <- aalen(Surv(days, status != 0) ~ tment, data = pbc3)
summary(nonparmod)
cumhazdata <- data.frame(eventtimes = nonparmod$cum[,1],
                         basecumhaz = nonparmod$cum[,2], 
                         cumhaztreat = nonparmod$cum[,3], 
                         cumhaztreat_ll = nonparmod$cum[,3]
                                          -1.96*sqrt(nonparmod$var.cum[,3]),
                         cumhaztreat_ul = nonparmod$cum[,3]
                                          +1.96*sqrt(nonparmod$var.cum[,3]))
# Extend lines to last observed time
cumhazdata[nrow(cumhazdata)+1,] <- c(max(pbc3$days), tail(cumhazdata, 1)[-1])

# Left figure
fig2.11.left <- ggplot(aes(x = eventtimes / 365.25, y = basecumhaz), 
                       data = cumhazdata) + 
  geom_step(size = 1) + 
  xlab("Time since randomization (years)") +
  ylab("Cumulative baseline hazard") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), 
                     limits = c(0, 6),breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.11.left

# Right figure
fig2.11.right <- ggplot(aes(x = eventtimes / 365.25, y = cumhaztreat), 
                        data = cumhazdata) + 
  geom_step(size = 1) + 
  geom_step(size = 1, aes(x = eventtimes / 365.25, y = cumhaztreat_ll), 
            linetype = "dashed") +  
  geom_step(size = 1, aes(x = eventtimes / 365.25, y = cumhaztreat_ul), 
            linetype = "dashed") +
  xlab("Time since randomization (years)") +
  ylab("Cumulative treatment effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), 
                     limits = c(0, 6), breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.11.right
```


### Figure 2.12 

```{r}
#| label: figure-2.12
#| out-width: 90%
# Make Aalen model fit
library(timereg)
nonparmod2 <- aalen(Surv(days, status != 0) ~ tment + alb + bili, data = pbc3) 
cumhazdata <- data.frame(eventtimes = nonparmod2$cum[,1],
                         basecumhaz = nonparmod2$cum[,2], 
                         cumhaztreat = nonparmod2$cum[,3], 
                         cumhazalb = nonparmod2$cum[,4], 
                         cumhazbili= nonparmod2$cum[,5])
# Extend lines to last observed time
cumhazdata[nrow(cumhazdata)+1,] <- c(max(pbc3$days), tail(cumhazdata, 1)[-1])

# Figure treatment
fig2.12.1 <- ggplot(aes(x = eventtimes / 365.25, y = cumhaztreat), 
                    data = cumhazdata) + 
  geom_step(size = 1) + 
  xlab("Time since randomization (years)") +
  ylab("Cumulative treatment effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), 
                     limits = c(0, 6), breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

# Figure albumin
fig2.12.2 <- ggplot(aes(x = eventtimes / 365.25, y = cumhazalb), 
                    data = cumhazdata) + 
  geom_step(size = 1) + 
  xlab("Time since randomization (years)") +
  ylab("Cumulative albumin effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)), 
                     limits = c(0, 6), breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

# Figure bilirubin
fig2.12.3 <- ggplot(aes(x = eventtimes / 365.25, y = cumhazbili), 
                    data = cumhazdata) + 
  geom_step(size = 1) + 
  xlab("Time since randomization (years)") +
  ylab("Cumulative bilirubin effect") + 
  scale_x_continuous(expand = expansion(mult = c(0.03, 0.05)),
                     limits = c(0, 6), breaks = seq(0, 6, 1)) + 
  scale_y_continuous(expand = expansion(mult = c(0.03, 0.05))) +
  theme_general

fig2.12.1
fig2.12.2
fig2.12.3
```

### Table 2.10 

```{r}
#| label: table-2.10
#------------------------------------------------------------------#
# Table 2.10 and in-text results
#------------------------------------------------------------------#

# Additive model treatment only
# p-values not exactly as in book because seed changes
nonparmod0 <- aalen(Surv(days, status != 0) ~ tment, data = pbc3) 
summary(nonparmod0)

# Constant effect of treatment per year
nonparmod01 <- aalen(Surv(days/365.25, status != 0) ~ const(tment), data = pbc3) 
summary(nonparmod01)

# Additive model with treatment, albumin, bilirubin
# Table 2.10, first two columns
# p-values not exactly as in book because seed changes
nonparmod1 <- aalen(Surv(days, status != 0) ~ tment + alb + bili, data = pbc3) 
summary(nonparmod1)

# Table 2.10, last columns
nonparmod2 <- aalen(Surv(days/365.25, status != 0) ~ 
                      const(tment) + const(alb) + const(bili), data = pbc3) 
summary(nonparmod2)

# In-text
# Constant effect of treatment, adjusted for albumin and bilirubin
nonparmod3 <- aalen(Surv(days/365.25, status != 0) ~ 
                      const(tment) + alb + bili, data = pbc3) 
summary(nonparmod3)

# Quadratic effect for albumin; p-values not exactly as in book because seed changes
nonparmod44 <- aalen(Surv(days/365.25, status != 0) ~ const(tment)
                       + I(alb/10) + I(bili/100) + I((alb/10)^2), data = pbc3) 
summary(nonparmod44)

# Quadratic effect for bilirubin; p-values not exactly as in book as seed changes
nonparmod43 <- aalen(Surv(days/365.25, status != 0) ~ const(tment)
                       + I(alb/10) + I(bili/100) + I((bili/100)^2), data = pbc3) 
summary(nonparmod43)


# Interactions
nonparmod51 <- aalen(Surv(days/365.25, status != 0) ~ const(tment) + const(alb)
                     + const(bili) + const(tment * bili),data = pbc3) 
summary(nonparmod51)

nonparmod52 <- aalen(Surv(days/365.25, status != 0) ~ const(tment) + const(bili) 
                     + const(alb) + const(tment * alb), data = pbc3) 
summary(nonparmod52)
```

### Table 2.11 

```{r}
#| label: table-2.11
#------------------------------------------------------------------#
# Table 2.11 and in-text results
#------------------------------------------------------------------#

# Additive hazards model with piecewise constant baseline hazards
# Model with only treatment as covariate
# update data set
pbc3add <- pbc3mult
pbc3add$time1 <-  with(pbc3add, (timegroup == 1)*risktime/365.25)
pbc3add$time2 <-  with(pbc3add, (timegroup == 2)*risktime/365.25)
pbc3add$time3 <-  with(pbc3add, (timegroup == 3)*risktime/365.25)
pbc3add$tment0 <- with(pbc3add, (tment == 0)*risktime/365.25)
pbc3add$tment1 <- with(pbc3add, (tment == 1)*risktime/365.25)
pbc3add$albny <-  with(pbc3add, ((alb-35)/100)*risktime/365.25)
pbc3add$biliny <- with(pbc3add, ((bili-50)/1000)*risktime/365.25)

# In-text
additive_pcw <- glm(fail ~ time1 + time2 + time3 + tment1 - 1,
                    data = pbc3add, start = c(0.1, 0.1, 0.1, 0),
                    family = poisson(link = "identity"))
tidy(additive_pcw)

# Table 2.11 - questionable fit
additive_pcw2.11 <- glm(fail ~ time1 + time2 + time3 + tment1 + albny + biliny -1,
                    data = pbc3add, start = c(0.3, 0.35, 0.4, -0.05, -0.8, 2),
                    family = poisson(link = "identity"))
tidy(additive_pcw2.11)

additive_pcw2.11 <- glm(fail ~ time1 + time2 + time3 + tment1 + albny + biliny -1,
                        data = pbc3add, start = c(0.3, 0.35, 0.4, -0.05, -0.8, 2.1),
                        family = poisson(link = "identity"))
tidy(additive_pcw2.11)
```


### Table 2.13 

```{r}
#| label: table-2.13

# Death without transplantation
coxph(Surv(days, status == 2) ~ tment + alb + log2bili + sex + age,
           method = "breslow", data = pbc3)

# Transplantation
coxph(Surv(days, status == 1) ~ tment + alb + log2bili + sex + age,
           method = "breslow", data = pbc3) 

# Failure of medical treatment
coxph(Surv(days, status != 0) ~ tment + alb + log2bili + sex + age,
           method = "breslow", data = pbc3)
```