### Read data

::: {.panel-tabset}

## R
```{r}
#| label: read-bmt-r
bmt <- read.csv("data/bmt.csv")
bmt$intxsurv<- bmt$timedeath
bmt$dead <- bmt$death
bmt$intxrel <- ifelse(bmt$rel == 1, bmt$timerel, bmt$timedeath)
bmt$trm     <- ifelse(bmt$rel == 0 & bmt$death == 1, 1, 0)
bmt$tgvhd   <- ifelse(bmt$gvhd == 1, bmt$timegvhd, bmt$intxrel)
bmt$tanc500 <- ifelse(bmt$anc500 == 1, bmt$timeanc500, bmt$intxrel)
bmt$state0  <- bmt$rel + 2*bmt$trm
```

## SAS
```{sas}
#| label: read-bmt-sas
#| eval: false 
#| output: false
proc import out=bmt
	datafile="data/bmt.csv" 
	dbms=csv replace;
run;
data bmt; 
  set bmt;
	intxsurv=timedeath;
	dead=death;
	if rel=1 then intxrel=timerel;
	if rel=0 then intxrel=timedeath;
	trm=0;
	if rel=0 and death=1 then trm=1;
	state0=rel+2*trm;
	if gvhd=1 then tgvhd=timegvhd;
	if gvhd=0 then tgvhd=intxrel;
run;
```

:::

### Figure 4.15

::: {.panel-tabset}
## R
```{r}
#| label: figure-4.15
#| out-width: 90%

library(ggplot2)
# General theme
theme_general <- theme_bw() +
  theme(legend.position = "bottom", 
        text = element_text(size = 20), 
        axis.text.x = element_text(size = 20), 
        axis.text.y = element_text(size = 20)) 

library(survival)
# Relapse-free survival 
fit1 <- survfit(Surv(intxrel, state0 != 0) ~ 1, data = bmt)

# relapse
require(mets)
fit2 <- cif(Event(intxrel, state0) ~ 1, data = bmt, cause = 1)

# death in remission
fit3 <- cif(Event(intxrel, state0) ~ 1, data = bmt, cause = 2)

# overall survival
fit4 <- survfit(Surv(intxsurv, dead == 1) ~ 1, data = bmt)

# We need the same time for all probabilities
require(dplyr)
require(tidyr)
m1 <- stepfun(x = fit1$time, y = c(1, fit1$surv)) 
m2 <- stepfun(x = fit2$times, y = c(0, fit2$mu))
m3 <- stepfun(x = fit3$times, y = c(0, fit3$mu))
m4 <- stepfun(x = fit4$time, y = c(0, 1-fit4$surv))

unitimes <- sort(unique(c(fit1$time, fit2$times, fit3$times, fit4$time)))
m <- data.frame(time = unitimes, 
                q0 = m1(unitimes),
                c1 = m2(unitimes), 
                c2 = m3(unitimes), 
                c23 = m4(unitimes))

m$q2 <-m$c2
m$q3 <- m$c23 - m$c2
m$q1 <- m$c1 - m$q3
m$sum <- with(m, q0+q1+q2+q3)
m$prev <- with(m, q1 / (q0 + q1))

# Prepare data for plotting
plotdata <- with(m, 
                 data.frame(time = c(time, time), 
                            prob = c(prev, q1),
                            type = c(rep("Prevalence of relapse", length(time)), 
                                     rep("Probability of being alive with relapse",
                                         length(time)))))

# Create Figure
fig4.15 <- ggplot(aes(x = time, y = prob, linetype = type), data = plotdata) + 
  geom_step(linewidth = 1) + 
  scale_linetype_discrete("Type") + 
  xlab("Time since bone marrow transplantation (months)") + 
  ylab("Probability") + 
  scale_x_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 156), breaks = seq(0, 156, by = 12)) + 
  scale_y_continuous(expand = expansion(mult = c(0.001, 0.05)), 
                     limits = c(0, 0.05), 
                     breaks = seq(0, 0.05, 0.01)) +
  theme_general + 
  theme(legend.box = "vertical",
        text = element_text(size=21), 
        legend.key.size = unit(1, 'cm'))

fig4.15
```

## SAS
```{sas}
#| label: figure-4.15-sas
#| eval: false 
#| output: false
proc phreg data=bmt noprint; /* Relapse-free surv */
	model intxrel*state0(0)=;
	baseline out=surv survival=km;
run;

proc phreg data=bmt noprint; /* Relapse */
	model intxrel*state0(0)=/eventcode=1;
	baseline out=cif1 cif=cif1;
run;

proc phreg data=bmt noprint; /* Death in remission */
	model intxrel*state0(0)=/eventcode=2;
	baseline out=cif2 cif=cif2;
run;

proc phreg data=bmt noprint; /* Overall surv. */
	model intxsurv*dead(0)=/eventcode=1;
	baseline out=dead cif=cif23;
run;

/* We need the same time variable for all probabilities */
data dead; set dead; time=intxsurv; run;
data surv; set surv; time=intxrel; run;
data cif1; set cif1; time=intxrel; run;
data cif2; set cif2; time=intxrel; run;
data all; merge surv cif1 cif2 dead; by time; run;

data allrev; 
	set all;
	by time;
	retain last1 last2 last3 last4;
	if km=. then rfs=last1; if km ne . then rfs=km; 
	if cif1=. then c1=last2; if cif1 ne . then c1=cif1;
	if cif2=. then c2=last3; if cif2 ne . then c2=cif2;
	if cif23=. then c23=last4; if cif23 ne . then c23=cif23;
	output;
	last1=rfs; last2=c1; last3=c2; last4=c23;
run;
data allrev; 
set allrev;
	q0=rfs; q2=c2; q3=c23-c2; q1=c1-q3; sum=q0+q1+q2+q3; prev=q1/(q0+q1); tment=0;
run;
proc gplot data=allrev;
	plot prev*time q1*time/overlay haxis=axis1 vaxis=axis2;
	axis1 order=0 to 150 by 10 minor=none label=('Months');
	axis2 order=0 to 0.05 by 0.01 minor=none label=(a=90 'Relapse prev. and prob.');
	symbol1  v=none i=stepjl c=blue;
	symbol2  v=none i=stepjl c=red;
run;
quit;
```
:::


### In-text p. 133: Expected time lost

::: callout-important
Missing for R - but should be possible with mstate or survival?
:::

::: {.panel-tabset}
## R-NA

## SAS
```{sas}
#| label: in-text-mu-sas
#| eval: false 
#| output: false

/* Bootstrap */
data bootbmt;
	do sampnum = 1 to 1000; /* nboot=1000*/
	do i = 1 to 2009; /*nobs=2009*/
	x=round(ranuni(0)*2009); /*nobs=2009*/
	set bmt
	point=x;
	output;
	end;
	end;
	stop;
run;

%macro areastepby(data,byvar,beh,grp,tid,y,tau);
	data select;
		set &data;
		where &beh=&grp;
	run;
	data select;
		set select;
		by &byvar;
		retain mu oldt oldy;
		if first.&byvar then do oldt=0; oldy=1; mu=0;  end;
		if &tid>&tau then do;
		&tid=&tau; &y=oldy; end;
		if not first.&byvar then mu+oldy*(&tid-oldt);
		if last.&byvar then do;
		if &tid<&tau then mu+(&tau-&tid)*&y; end;
		oldy=&y; oldt=&tid;
	run;
	data last;
		set select;
		by  &byvar;
		if last.&byvar;
	run;
%mend areastepby;

proc phreg data=bootbmt noprint; /* Relapse-free surv */
by sampnum;
model intxrel*state0(0)=;
baseline out=surv survival=km;
run;

proc phreg data=bootbmt noprint; /* Relapse */
by sampnum;
model intxrel*state0(0)=/eventcode=1;
baseline out=cif1 cif=cif1;
run;

proc phreg data=bootbmt noprint; /* Death in remission */
by sampnum;
model intxrel*state0(0)=/eventcode=2;
baseline out=cif2 cif=cif2;
run;

proc phreg data=bootbmt noprint; /* Overall surv. */
by sampnum;
model intxsurv*dead(0)=/eventcode=1;
baseline out=dead cif=cif23;
run;

data dead; set dead; time=intxsurv; drop intxsurv;  run;  
data surv; set surv; time=intxrel; drop intxrel; run;
data cif1; set cif1; time=intxrel; drop intxrel; run;
data cif2; set cif2; time=intxrel; drop intxrel; run;
data all; merge surv cif1 cif2 dead ; by sampnum time; run;

data allrev; set all;
by sampnum time; 
retain last1 last2 last3 last4;
if km=. then rfs=last1; if km ne . then rfs=km; 
if cif1=. then c1=last2; if cif1 ne . then c1=cif1;
if cif2=. then c2=last3; if cif2 ne . then c2=cif2;
if cif23=. then c23=last4; if cif23 ne . then c23=cif23;
output;
last1=rfs; last2=c1; last3=c2; last4=c23;
run;

data allrev; set allrev;
q0=rfs; q2=c2; q3=c23-c2; q1=c1-q3; sum=q0+q1+q2+q3; prev=q1/(q0+q1); tment=0;
run;

%areastepby(allrev,sampnum,tment,0,time,q0,120);
proc means data=last mean stddev;
var mu;
run;

/* macro need to be changed for cuminc (start in 0) */

%macro areastepby0(data,byvar,beh,grp,tid,y,tau);
	data select;
		set &data;
		where &beh=&grp;
	run;
	data select;
		set select;
		by &byvar;
		retain mu oldt oldy;
		if first.&byvar then do oldt=0; oldy=0; mu=0;  end;
		if &tid>&tau then do;
		&tid=&tau; &y=oldy; end;
		if not first.&byvar then mu+oldy*(&tid-oldt);
		if last.&byvar then do;
		if &tid<&tau then mu+(&tau-&tid)*&y; end;
		oldy=&y; oldt=&tid;
	run;
	data last;
		set select;
		by  &byvar;
		if last.&byvar;
	run;
%mend areastepby;

%areastepby0(allrev,sampnum,tment,0,time,q1,120);
proc means data=last mean stddev;
var mu;
run;
%areastepby0(allrev,sampnum,tment,0,time,c23,120);
proc means data=last mean stddev;
var mu;
run;
%areastepby0(allrev,sampnum,tment,0,time,q2,120);
proc means data=last mean stddev;
var mu;
run;
%areastepby0(allrev,sampnum,tment,0,time,q3,120);
proc means data=last mean stddev;
var mu;
run;
```
:::


### Table 4.8 and in-text Wald tests

::: {.panel-tabset}
## R
```{r}
#| label: table-4.8

bmt$age10<-bmt$age/10
summary(coxph(Surv(intxrel, rel == 1) ~ bmonly + all + age, data = bmt, 
      ties = "breslow"))

summary(coxph(Surv(intxrel, rel == 1) ~ bmonly + all + age + cluster(team), 
      data = bmt, 
      ties = "breslow"))

# Relapse-free survival
summary(coxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age, data = bmt, 
      ties = "breslow"))

summary(coxph(Surv(intxrel, state0 != 0) ~ bmonly + all + age + cluster(team), 
      data = bmt, 
      ties = "breslow"))

# overall survival
summary(coxph(Surv(intxsurv, dead != 0) ~ bmonly + all + age, data = bmt, 
      ties = "breslow"))

summary(coxph(Surv(intxsurv, dead != 0) ~ bmonly + all + age + cluster(team), 
      data = bmt, 
      ties = "breslow"))
```

## SAS
```{sas}
#| label: table-4.8-sas
#| eval: false 
#| output: false
/* Relapse, relapse-free and overall survival
   without and with adjustment for center */
proc phreg data=bmt;
	class bmonly(ref="0") all(ref="0");
	model intxrel*rel(0)=bmonly all age;
run;
proc phreg data=bmt covs(aggregate);
	class bmonly(ref="0") all(ref="0") team;
	model intxrel*rel(0)=bmonly all age;
	id team;
run;
proc phreg data=bmt;
	class bmonly(ref="0") all(ref="0");
	model intxrel*state0(0)=bmonly all age;
run;
proc phreg data=bmt covs(aggregate);
	class bmonly(ref="0") all(ref="0");
	model intxrel*state0(0)=bmonly all age;
	id team;
run;
proc phreg data=bmt;
	class bmonly(ref="0") all(ref="0");
	model intxsurv*dead(0)=bmonly all age;
run;
proc phreg data=bmt covs(aggregate);
	class bmonly(ref="0") all(ref="0");
	model intxsurv*dead(0)=bmonly all age;
	id team;
run;
```

:::

### In-text, p. 148: Oneway anova

::: {.panel-tabset}

## R

```{r}
#| label: in-text-anova-r
anova(lm(age~factor(team),data=bmt))
```

## SAS
```{sas}
#| label: in-text-anova-sas
#| eval: false 
#| output: false
proc glm data=bmt;
	class team;
	model age=team;
run;
quit;
```
:::



### Table 4.11 and in-text, p. 151

::: callout-important
Still missing to make double data set for R - do we not have this somewhere else?
:::


::: {.panel-tabset}
## R
```{r}
#| label: table-4.11
# Relapse-free survival 
coxph(Surv(intxrel, state0 > 0) ~ bmonly + all + age10, data=bmt, ties="breslow")

# Overall survival
coxph(Surv(intxsurv, dead != 0) ~ bmonly + all + age10, data=bmt, ties="breslow")

bmt1 <- bmt
bmt1$gvhdny <- bmt$gvhd
bmt1$nytgvhd <- ifelse(bmt1$gvhdny == 1, bmt1$tgvhd, bmt1$intxsurv)
bmt1$gvhdny <- ifelse(bmt1$dead == 1, 1, bmt1$gvhdny)

# gvhd free survival
coxph(Surv(nytgvhd, gvhdny != 0) ~ bmonly + all + age10, data=bmt1, ties="breslow")
```

## SAS
```{sas}
#| label: table-4.11-sas
#| eval: false 
#| output: false
data double02; set bmt; 
	/* joint analysis of relapse-free and overall survival */
	version=1; dc=state0>0; time=intxrel; gsource0=bmonly; gsource2=0;
	disease0=all; disease2=0; age0=age; age2=0; output;
	version=2; dc=dead; time=intxsurv; gsource2=bmonly; gsource0=0;
	disease2=all; disease0=0; age2=age; age0=0; output;
run;
proc phreg data=double02 covs(aggregate);
	/* NB bmonly and all are now binary quantitative */
	model time*dc(0)=gsource0 gsource2 disease0 disease2 age0 age2 / corrb;
	strata version;
	id id;
	gs:  test gsource0=gsource2;
	dis: test disease0=disease2;
	a:   test age0=age2;
run;
proc phreg data=double02 covs(aggregate);
	model time*dc(0)=bmonly disease0 disease2 age;
	strata version;
	id id;
	dis: test disease0=disease2;
run;
data bmt; set bmt;
	gvhdny=gvhd; 
	if gvhdny=1 then nytgvhd=tgvhd;
	if gvhdny=0 then do; nytgvhd=intxsurv; if dead=1 then gvhdny=1; end; 
	/* NB her tæller både GvHD og død uden GvHD med */
run;
data triple02G; set bmt; 
	/* joint analysis of relapse-free, GvHD-free and overall survival */
	version=1; dc=state0>0; time=intxrel; gsource0=bmonly; 
	gsource2=0; gsourceG=0;
	disease0=all; disease2=0; diseaseG=0; age0=age; age2=0; ageG=0; output;
	version=2; dc=dead; time=intxsurv; gsource2=bmonly; 
	gsource0=0; gsourceG=0;
	disease2=all; disease0=0; diseaseG=0; age2=age; age0=0; ageG=0; output;
	version=3; dc=gvhdny; time=nytgvhd; gsourceG=bmonly; gsource0=0; gsource2=0;
	diseaseG=all; disease0=0; disease2=0; ageG=age; age0=0; age2=0; output;
run;
proc phreg data=triple02G covs(aggregate) covout outest=params3;
	/* bmonly and all binary quatitative*/
	model time*dc(0)=gsource0 gsource2 gsourceG disease0 disease2 diseaseG
	age0 age2 ageG;
	strata version;
	id id;
run;
```
:::